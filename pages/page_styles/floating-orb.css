/* ============================================
   ðŸŒŸ 3D FLOATING ORB NOTIFICATION SYSTEM ï¿½ï¿½
   ============================================ */

:root {
    --orb-primary: rgba(0, 240, 255, 0.9);
    --orb-secondary: rgba(138, 43, 226, 0.8);
    --orb-glow: rgba(0, 240, 255, 0.4);
    --orb-shadow: rgba(0, 240, 255, 0.3);
    --orb-size: 80px;
    --orb-notification-size: 45px;
    /* Positioning variables to easily relocate the orb */
    --orb-left: 30px;
    --orb-top: 110px;
    /* keeps clear of top nav */
}

/* Main Orb Container */
.floating-orb-container {
    position: fixed;
    left: var(--orb-left);
    top: var(--orb-top);
    z-index: 9999;
    pointer-events: none;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    perspective: 1000px;
    /* Enhanced 3D perspective */
}

.floating-orb-container.has-notifications {
    transform: scale(1.1);
}

/* Enhanced 3D Orb Sphere */
.floating-orb {
    width: var(--orb-size);
    height: var(--orb-size);
    border-radius: 50%;
    background:
        radial-gradient(circle at 20% 20%, rgba(255, 255, 255, 0.8) 0%, transparent 50%),
        radial-gradient(circle at 80% 80%, rgba(0, 240, 255, 0.6) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, var(--orb-primary) 0%, var(--orb-secondary) 70%, rgba(0, 0, 0, 0.4) 100%);
    position: relative;
    cursor: pointer;
    pointer-events: all;
    transform-style: preserve-3d;
    animation:
        floatRotate 8s ease-in-out infinite,
        orbGlow 3s ease-in-out infinite alternate;
    box-shadow:
        0 0 40px var(--orb-glow),
        0 0 80px rgba(0, 240, 255, 0.2),
        inset -15px -15px 30px rgba(0, 0, 0, 0.4),
        inset 15px 15px 30px var(--orb-glow);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

/* Enhanced highlight effect */
.floating-orb::before {
    content: '';
    position: absolute;
    top: 10%;
    left: 15%;
    width: 30px;
    height: 30px;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.3) 70%, transparent 100%);
    border-radius: 50%;
    filter: blur(6px);
    animation: shimmer 4s ease-in-out infinite alternate;
    transform: translateZ(10px);
}

/* Enhanced outer glow */
.floating-orb::after {
    content: '';
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
    border-radius: 50%;
    background:
        radial-gradient(circle at 50% 50%, transparent 60%, var(--orb-glow) 100%),
        conic-gradient(from 0deg, transparent, var(--orb-glow), transparent, var(--orb-glow), transparent);
    z-index: -1;
    animation:
        pulse 2s ease-in-out infinite,
        rotateGlow 10s linear infinite;
    opacity: 0.7;
}

/* Enhanced hover effects */
.floating-orb:hover {
    transform: scale(1.15) rotateY(180deg) rotateX(10deg);
    box-shadow:
        0 0 60px var(--orb-glow),
        0 0 120px rgba(0, 240, 255, 0.4),
        0 0 200px rgba(0, 240, 255, 0.2),
        inset -15px -15px 30px rgba(0, 0, 0, 0.4),
        inset 15px 15px 30px var(--orb-glow);
    animation-play-state: paused;
}

/* Enhanced notification orbit ring */
.notification-orbit {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 160px;
    height: 160px;
    transform: translate(-50%, -50%);
    border-radius: 50%;
    border: 2px dashed var(--orb-glow);
    opacity: 0;
    transition: opacity 0.5s ease;
    animation:
        orbitRotate 20s linear infinite,
        orbitGlow 4s ease-in-out infinite alternate;
    box-shadow:
        0 0 20px rgba(0, 240, 255, 0.3),
        inset 0 0 20px rgba(0, 240, 255, 0.1);
}

.floating-orb-container.has-notifications .notification-orbit {
    opacity: 0.8;
}

/* Individual Notification Cards - Enhanced */
.notification-card {
    position: absolute;
    width: var(--orb-notification-size);
    height: var(--orb-notification-size);
    background:
        linear-gradient(135deg, var(--orb-primary), var(--orb-secondary)),
        radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.3), transparent);
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: 2px solid rgba(255, 255, 255, 0.4);
    box-shadow:
        0 6px 20px rgba(0, 0, 0, 0.4),
        0 0 30px var(--orb-glow),
        inset 0 0 10px rgba(255, 255, 255, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 18px;
    font-weight: bold;
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    transform-style: preserve-3d;
}

.notification-card:hover {
    transform: scale(1.4) translateZ(20px);
    box-shadow:
        0 8px 25px rgba(0, 0, 0, 0.5),
        0 0 40px var(--orb-glow),
        0 0 60px var(--orb-shadow),
        inset 0 0 15px rgba(255, 255, 255, 0.3);
    z-index: 10;
}

/* Enhanced animations */
@keyframes floatRotate {

    0%,
    100% {
        transform: translateY(0) rotateY(0deg) rotateX(0deg) rotateZ(0deg);
    }

    25% {
        transform: translateY(-15px) rotateY(90deg) rotateX(5deg) rotateZ(5deg);
    }

    50% {
        transform: translateY(0) rotateY(180deg) rotateX(0deg) rotateZ(0deg);
    }

    75% {
        transform: translateY(15px) rotateY(270deg) rotateX(-5deg) rotateZ(-5deg);
    }
}

@keyframes orbGlow {
    0% {
        filter: brightness(1) saturate(1);
        box-shadow:
            0 0 40px var(--orb-glow),
            0 0 80px rgba(0, 240, 255, 0.2),
            inset -15px -15px 30px rgba(0, 0, 0, 0.4),
            inset 15px 15px 30px var(--orb-glow);
    }

    100% {
        filter: brightness(1.2) saturate(1.3);
        box-shadow:
            0 0 60px var(--orb-glow),
            0 0 120px rgba(0, 240, 255, 0.4),
            inset -15px -15px 30px rgba(0, 0, 0, 0.4),
            inset 15px 15px 30px var(--orb-glow);
    }
}

@keyframes rotateGlow {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

@keyframes orbitGlow {
    0% {
        border-color: var(--orb-glow);
        box-shadow:
            0 0 20px rgba(0, 240, 255, 0.3),
            inset 0 0 20px rgba(0, 240, 255, 0.1);
    }

    100% {
        border-color: rgba(0, 240, 255, 0.8);
        box-shadow:
            0 0 30px rgba(0, 240, 255, 0.5),
            inset 0 0 30px rgba(0, 240, 255, 0.2);
    }
}

@keyframes orbitRotate {
    from {
        transform: translate(-50%, -50%) rotate(0deg);
    }

    to {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}

@keyframes pulse {

    0%,
    100% {
        opacity: 0.6;
        transform: scale(1);
    }

    50% {
        opacity: 1;
        transform: scale(1.05);
    }
}

@keyframes shimmer {
    0% {
        opacity: 0.8;
        transform: scale(1) translateZ(10px);
    }

    100% {
        opacity: 1;
        transform: scale(1.3) translateZ(15px);
    }
}

/* Individual notification orbit animations - Enhanced */
@keyframes notificationFloat1 {
    from {
        transform: translateX(-50%) rotate(0deg) translateY(-80px) rotate(0deg) translateZ(0px);
    }

    to {
        transform: translateX(-50%) rotate(360deg) translateY(-80px) rotate(-360deg) translateZ(10px);
    }
}

@keyframes notificationFloat2 {
    from {
        transform: translateY(-50%) rotate(60deg) translateY(-80px) rotate(-60deg) translateZ(0px);
    }

    to {
        transform: translateY(-50%) rotate(420deg) translateY(-80px) rotate(-420deg) translateZ(10px);
    }
}

@keyframes notificationFloat3 {
    from {
        transform: translateY(50%) rotate(120deg) translateY(-80px) rotate(-120deg) translateZ(0px);
    }

    to {
        transform: translateY(50%) rotate(480deg) translateY(-80px) rotate(-480deg) translateZ(10px);
    }
}

@keyframes notificationFloat4 {
    from {
        transform: translateX(-50%) rotate(180deg) translateY(-80px) rotate(-180deg) translateZ(0px);
    }

    to {
        transform: translateX(-50%) rotate(540deg) translateY(-80px) rotate(-540deg) translateZ(10px);
    }
}

@keyframes notificationFloat5 {
    from {
        transform: translateY(50%) rotate(240deg) translateY(-80px) rotate(-240deg) translateZ(0px);
    }

    to {
        transform: translateY(50%) rotate(600deg) translateY(-80px) rotate(-600deg) translateZ(10px);
    }
}

@keyframes notificationFloat6 {
    from {
        transform: translateY(-50%) rotate(300deg) translateY(-80px) rotate(-300deg) translateZ(0px);
    }

    to {
        transform: translateY(-50%) rotate(660deg) translateY(-80px) rotate(-660deg) translateZ(10px);
    }
}

/* Enhanced notification popup */
.notification-popup {
    position: absolute;
    top: 50%;
    left: calc(100% + 20px);
    transform: translateY(-50%);
    min-width: 300px;
    max-width: 400px;
    background:
        linear-gradient(135deg, rgba(16, 21, 32, 0.98), rgba(10, 10, 10, 0.95));
    border: 2px solid var(--orb-glow);
    border-radius: 16px;
    padding: 24px;
    box-shadow:
        0 15px 40px rgba(0, 0, 0, 0.6),
        0 0 30px var(--orb-glow),
        inset 0 0 20px rgba(0, 240, 255, 0.1);
    backdrop-filter: blur(20px);
    opacity: 0;
    pointer-events: none;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 10001;
    transform-style: preserve-3d;
}

.notification-popup.show {
    opacity: 1;
    pointer-events: all;
    transform: translateY(-50%) translateX(15px) translateZ(20px);
}

.notification-popup h4 {
    color: var(--orb-primary);
    margin: 0 0 12px 0;
    font-size: 18px;
    font-weight: 600;
    text-shadow: 0 0 10px rgba(0, 240, 255, 0.5);
}

.notification-popup p {
    color: rgba(255, 255, 255, 0.9);
    margin: 0 0 18px 0;
    font-size: 14px;
    line-height: 1.5;
}

.notification-popup .timestamp {
    color: rgba(255, 255, 255, 0.6);
    font-size: 12px;
    text-align: right;
    font-style: italic;
}

/* Optional WebGL layer container (when using Three.js) */
.orb-3d-layer {
    position: absolute;
    top: calc(var(--orb-size) * -0.4);
    left: calc(var(--orb-size) * -0.4);
    width: calc(var(--orb-size) * 2.0);
    height: calc(var(--orb-size) * 2.0);
    z-index: -2;
    pointer-events: none;
    filter: drop-shadow(0 0 16px var(--orb-glow));
}

/* Responsive Design - Enhanced */
@media (max-width: 768px) {
    .floating-orb-container {
        --orb-left: 20px;
        --orb-top: 96px;
        --orb-size: 70px;
        --orb-notification-size: 40px;
    }

    .notification-orbit {
        width: 140px;
        height: 140px;
    }

    .notification-popup {
        left: calc(100% + 15px);
        min-width: 250px;
        max-width: 300px;
        padding: 18px;
    }
}

@media (max-width: 480px) {
    .floating-orb-container {
        --orb-left: 15px;
        --orb-top: 88px;
        --orb-size: 60px;
        --orb-notification-size: 35px;
    }

    .notification-orbit {
        width: 120px;
        height: 120px;
    }

    .notification-popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 90vw;
        max-width: none;
    }

    .notification-popup.show {
        transform: translate(-50%, -50%) translateZ(20px);
    }
}

/* Debug Mode - Enhanced */
.floating-orb-container[data-debug="true"] .notification-orbit {
    opacity: 1 !important;
    border-color: red;
    border-style: solid;
    animation:
        orbitRotate 20s linear infinite,
        orbitGlow 4s ease-in-out infinite alternate,
        debugPulse 1s ease-in-out infinite;
}

.floating-orb-container[data-debug="true"]::after {
    content: 'ORB DEBUG';
    position: absolute;
    top: -35px;
    left: 0;
    color: #ff4444;
    font-size: 12px;
    font-weight: bold;
    text-shadow: 0 0 10px #ff4444;
    animation: debugTextGlow 2s ease-in-out infinite alternate;
}

@keyframes debugPulse {

    0%,
    100% {
        border-color: red;
    }

    50% {
        border-color: #ff6666;
    }
}

@keyframes debugTextGlow {
    0% {
        text-shadow: 0 0 10px #ff4444;
    }

    100% {
        text-shadow: 0 0 20px #ff4444, 0 0 30px #ff4444;
    }
}