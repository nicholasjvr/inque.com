import{initializeApp as h}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-app.js";import{getAnalytics as v}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-analytics.js";import{getFirestore as y,addDoc as b,collection as w,serverTimestamp as L}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js";import{getAuth as E,onAuthStateChanged as S}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-auth.js";import{onAuthStateChanged as U}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-auth.js";import{getStorage as k}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-storage.js";const e={log:(n,s=null)=>{console.log(`[DEBUG] Firebase Core: ${n}`,s||"")},error:(n,s=null)=>{console.error(`[DEBUG ERROR] Firebase Core: ${n}`,s||"")},warn:(n,s=null)=>{console.warn(`[DEBUG WARN] Firebase Core: ${n}`,s||"")}};e.log("Starting initialization");const x={apiKey:"AIzaSyBIZcD-L5jD84hEYLxWOwHTE2iTY6EJ0zI",authDomain:"inque-31cb5.firebaseapp.com",databaseURL:"https://inque-31cb5-default-rtdb.firebaseio.com",projectId:"inque-31cb5",storageBucket:"inque-31cb5.firebasestorage.app",messagingSenderId:"338722493567",appId:"1:338722493567:web:4c46ecdfe92ddf2a5d5b4a",measurementId:"G-KQT58LWVSK"},A=window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1";A&&(e.log("Running on localhost - using development configuration"),e.log("IMPORTANT: To enable Firebase Auth on localhost, add 'localhost' to Authorized Domains in Firebase Console > Authentication > Settings"));e.log("Initializing Firebase app");const u=h(x);v(u);const D=y(u),C=E(u),O=k(u);e.log("Firebase services initialized successfully");S(C,n=>{try{n?(e.log("User authenticated:",n.email),window.dispatchEvent(new CustomEvent("auth-state-changed",{detail:{user:n,isAuthenticated:!0}}))):(e.log("User not authenticated"),window.dispatchEvent(new CustomEvent("auth-state-changed",{detail:{user:null,isAuthenticated:!1}})))}catch(s){e.error("Error in auth state change handler:",s)}},n=>{e.error("Auth state change error:",n)});async function T(){try{e.log("Logging page view");const n=await b(w(D,"page_visits"),{url:window.location.href,timestamp:L()});e.log("Page visit logged successfully",{id:n.id})}catch(n){e.error("Error logging visit",n)}}const I=["text/html","text/css","application/javascript","application/json","image/png","image/jpeg","image/gif","image/svg+xml","text/javascript","application/x-javascript"],q=[".html",".js",".css",".png",".jpg",".jpeg",".gif",".svg",".json"];window.validateWidgetFiles=function(n){e.log("Validating widget files",{fileCount:n.length});for(let s of n){const d=s.name.slice(s.name.lastIndexOf(".")).toLowerCase();if(!q.includes(d)||s.type&&!I.includes(s.type))return e.warn("Invalid file type detected",{fileName:s.name,fileType:s.type}),!1}return e.log("All files validated successfully"),!0};document.addEventListener("DOMContentLoaded",function(){e.log("DOM Content Loaded - Starting core functionality"),T();const n=document.querySelector(".light-cursor");n?(e.log("Setting up light cursor effect"),document.addEventListener("mousemove",function(o){n.style.left=o.clientX+"px",n.style.top=o.clientY+"px"})):e.warn("Light cursor element not found");const s=document.querySelectorAll(".nav-btn, .quick-action-btn, .edit-widget-btn, .hamburger-menu");e.log("Found touch elements",{count:s.length}),s.forEach(o=>{o.addEventListener("touchend",function(t){e.log("Touch end event on element",{className:o.className}),t.preventDefault(),this.click()})});const d=document.querySelectorAll('button, a, [role="button"]');e.log("Setting up touch feedback for elements",{count:d.length}),d.forEach(o=>{o.addEventListener("touchstart",function(){this.style.transform="scale(0.98)"}),o.addEventListener("touchend",function(){this.style.transform=""})});let f=0;document.addEventListener("touchstart",function(o){f=o.touches[0].clientY}),document.addEventListener("touchmove",function(o){const t=o.touches[0].clientY;(window.pageYOffset||document.documentElement.scrollTop)<=0&&t>f&&o.preventDefault()});const i=document.querySelector(".sidebar-nav"),a=document.querySelector(".sidebar-overlay"),g=document.querySelector(".hamburger-menu");if(e.log("Sidebar elements found",{sidebar:!!i,overlay:!!a,hamburger:!!g}),i&&a&&g){e.log("All sidebar elements found, setting up functionality"),i.style.position="fixed",i.style.top="0",i.style.left="0",i.style.height="100vh",i.style.zIndex="1002",e.log("Sidebar made sticky"),g.addEventListener("click",function(t){e.log("Hamburger menu clicked"),t.preventDefault(),t.stopPropagation();const m=i.classList.contains("open");e.log("Toggling sidebar",{currentState:m?"open":"closed"}),i.classList.toggle("open"),a.classList.toggle("show"),document.body.style.overflow=i.classList.contains("open")?"hidden":"",e.log("Sidebar toggled",{newState:i.classList.contains("open")?"open":"closed"})});const o=document.querySelector(".sidebar-close-btn");o?(e.log("Setting up close button handler"),o.addEventListener("click",function(t){e.log("Close button clicked"),t.preventDefault(),t.stopPropagation(),i.classList.remove("open"),a.classList.remove("show"),document.body.style.overflow="",e.log("Sidebar closed via close button")})):e.warn("Close button not found"),a.addEventListener("click",function(t){e.log("Overlay clicked"),t.preventDefault(),t.stopPropagation(),i.classList.remove("open"),a.classList.remove("show"),document.body.style.overflow="",e.log("Sidebar closed via overlay click")}),i.addEventListener("touchmove",function(t){i.classList.contains("open")&&(e.log("Preventing touch scroll on sidebar"),t.stopPropagation())}),document.addEventListener("visibilitychange",()=>{document.hidden&&i.classList.contains("open")&&(e.log("Page hidden, closing sidebar"),i.classList.remove("open"),a.classList.remove("show"),document.body.style.overflow="")}),document.addEventListener("keydown",function(t){t.key==="Escape"&&i.classList.contains("open")&&(e.log("Escape key pressed, closing sidebar"),i.classList.remove("open"),a.classList.remove("show"),document.body.style.overflow="")}),e.log("Sidebar functionality setup complete")}else e.warn("Sidebar elements not found - sidebar functionality disabled",{sidebar:!!i,overlay:!!a,hamburger:!!g});const p=document.querySelectorAll(".modal");e.log("Setting up modal touch handling",{modalCount:p.length}),p.forEach(o=>{o.addEventListener("touchmove",function(t){t.stopPropagation()})});const l=document.getElementById("sidebarNotifications"),r=document.getElementById("notificationsHeader"),c=document.getElementById("notificationsToggle");if(e.log("Setting up notifications toggle",{container:!!l,header:!!r,toggle:!!c}),l&&r&&c){e.log("All notifications elements found, setting up toggle functionality");const o=()=>{const t=l.classList.contains("expanded");e.log("Toggling notifications",{currentState:t?"expanded":"collapsed"}),l.classList.toggle("expanded"),c.classList.toggle("expanded"),e.log("Notifications toggled",{newState:l.classList.contains("expanded")?"expanded":"collapsed"})};r.addEventListener("click",function(t){e.log("Notifications header clicked"),t.preventDefault(),t.stopPropagation(),o()}),c.addEventListener("click",function(t){e.log("Notifications toggle button clicked"),t.preventDefault(),t.stopPropagation(),o()}),r.addEventListener("keydown",function(t){(t.key==="Enter"||t.key===" ")&&(e.log("Notifications header keyboard activated"),t.preventDefault(),o())}),c.addEventListener("keydown",function(t){(t.key==="Enter"||t.key===" ")&&(e.log("Notifications toggle keyboard activated"),t.preventDefault(),o())}),e.log("Notifications toggle functionality setup complete")}else e.warn("Missing notifications elements",{container:!!l,header:!!r,toggle:!!c});e.log("Core functionality setup complete")});export{C as auth,D as db,U as onAuthStateChanged,O as storage};
