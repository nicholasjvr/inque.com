const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./auth-Eji_fmLI.js","./preload-helper-DBRurSJI.js","./preload-helper-BhF3-jBv.css","./firebase-core-BO8UvLyb.js","./navigation-CiQvIeE9.js","./widget-upload-BclOXes8.js","./cloud-upload-B4hV8L3F.js"])))=>i.map(i=>d[i]);
import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css              */import{_ as g}from"./preload-helper-DBRurSJI.js";import{auth as A,db as k}from"./firebase-core-BO8UvLyb.js";import{collection as $,query as P,where as H,getDocs as G,getDoc as I,doc as C,deleteDoc as F,updateDoc as N,arrayRemove as J,serverTimestamp as X}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js";import"https://www.gstatic.com/firebasejs/11.10.0/firebase-storage.js";import{p as x}from"./cloud-upload-B4hV8L3F.js";import"./profile_banner-BLWgeGBy.js";import"https://www.gstatic.com/firebasejs/11.10.0/firebase-app.js";import"https://www.gstatic.com/firebasejs/11.10.0/firebase-analytics.js";import"https://www.gstatic.com/firebasejs/11.10.0/firebase-auth.js";import"https://www.gstatic.com/firebasejs/11.10.0/firebase-functions.js";console.log("[MAIN] Starting application initialization...");class K{constructor(){this.state={initialized:!1,modules:{auth:null,social:null,profileHub:null,navigation:null,ui:null},user:{isAuthenticated:!1,profile:null,preferences:{}},ui:{theme:"auto",sidebarOpen:!1,modals:{auth:!1,profile:!1,notifications:!1}},performance:{loadTime:Date.now(),moduleLoadTimes:{},functionCallCount:0}},this.eventListeners=new Map,this.debugMode=!0,console.log("[MAIN] AppStateManager initialized")}log(t,e=null){this.debugMode&&(this.state.performance.functionCallCount++,console.log(`[MAIN] ${t}`,e||""))}setState(t,e="unknown"){this.log(`State update from ${e}:`,t),this.state=this.deepMerge(this.state,t),this.emit("state-changed",{state:this.state,updates:t,source:e})}deepMerge(t,e){const i={...t};for(const o in e)e[o]&&typeof e[o]=="object"&&!Array.isArray(e[o])?i[o]=this.deepMerge(i[o]||{},e[o]):i[o]=e[o];return i}emit(t,e){this.log(`Emitting event: ${t}`,e);const i=new CustomEvent(`app-${t}`,{detail:e});window.dispatchEvent(i)}addEventListener(t,e){const i=o=>e(o.detail);window.addEventListener(`app-${t}`,i),this.eventListeners.set(t,i)}trackFunctionCall(t,e){this.state.performance.moduleLoadTimes[t]||(this.state.performance.moduleLoadTimes[t]=[]),this.state.performance.moduleLoadTimes[t].push(e)}getPerformanceMetrics(){return{totalLoadTime:Date.now()-this.state.performance.loadTime,functionCallCount:this.state.performance.functionCallCount,moduleLoadTimes:this.state.performance.moduleLoadTimes,memoryUsage:performance.memory?{used:Math.round(performance.memory.usedJSHeapSize/1024/1024),total:Math.round(performance.memory.totalJSHeapSize/1024/1024)}:null}}}class Z{constructor(t){this.appState=t,this.modules=new Map,this.loadingPromises=new Map,this.log("ModuleOrchestrator initialized")}log(t,e=null){this.appState.log(`[ORCHESTRATOR] ${t}`,e)}async loadModule(t,e){if(this.modules.has(t))return this.log(`Module ${t} already loaded`),this.modules.get(t);if(this.loadingPromises.has(t))return this.log(`Module ${t} is already loading`),this.loadingPromises.get(t);const i=Date.now();this.log(`Loading module: ${t}`);const o=this.loadModuleWithRetry(t,e,3);this.loadingPromises.set(t,o);try{const s=await o,n=Date.now()-i;return this.modules.set(t,s),this.loadingPromises.delete(t),this.appState.trackFunctionCall(`load-${t}`,n),this.log(`Module ${t} loaded successfully in ${n}ms`),s}catch(s){throw this.loadingPromises.delete(t),this.log(`Failed to load module ${t}:`,s),s}}async loadModuleWithRetry(t,e,i){let o;for(let s=1;s<=i;s++)try{return await e()}catch(n){o=n,this.log(`Module ${t} load attempt ${s} failed:`,n),s<i&&await new Promise(r=>setTimeout(r,1e3*s))}throw new Error(`Failed to load module ${t} after ${i} attempts: ${o.message}`)}getModule(t){return this.modules.get(t)||null}async initializeCoreModules(){this.log("Initializing core modules...");const t=[["firebase-core",()=>g(()=>import("./firebase-core-BO8UvLyb.js"),[],import.meta.url)],["auth",()=>g(()=>import("./auth-Eji_fmLI.js"),__vite__mapDeps([0,1,2,3]),import.meta.url)],["social",()=>g(()=>Promise.resolve().then(()=>st),void 0,import.meta.url)],["profile-hub",()=>g(()=>import("./profile_banner-BLWgeGBy.js"),[],import.meta.url)],["navigation",()=>g(()=>import("./navigation-CiQvIeE9.js"),__vite__mapDeps([4,3]),import.meta.url)]],e=t.map(([o,s])=>this.loadModule(o,s).catch(n=>(this.log(`Warning: Failed to load ${o}:`,n),null)));(await Promise.allSettled(e)).forEach((o,s)=>{const[n]=t[s];o.status==="fulfilled"&&o.value?this.log(`Core module ${n} ready`):this.log(`Core module ${n} failed to load`)}),this.log("Core modules initialization complete")}}class tt{constructor(){this.appState=new K,this.orchestrator=new Z(this.appState),this.initializationSteps=[],this.log("ApplicationInitializer created")}log(t,e=null){this.appState.log(`[INIT] ${t}`,e)}addStep(t,e,i=[]){this.initializationSteps.push({name:t,function:e,dependencies:i,completed:!1})}async executeInitializationSteps(){this.log("Executing initialization steps...");const t=new Set;let e=!0;for(;e&&t.size<this.initializationSteps.length;){e=!1;for(const o of this.initializationSteps){if(o.completed||t.has(o.name))continue;if(o.dependencies.every(n=>t.has(n)))try{this.log(`Executing step: ${o.name}`),await o.function(),o.completed=!0,t.add(o.name),e=!0,this.log(`Step completed: ${o.name}`)}catch(n){this.log(`Step failed: ${o.name}`,n)}}}const i=this.initializationSteps.filter(o=>!o.completed);i.length>0&&this.log(`Warning: ${i.length} steps failed:`,i.map(o=>o.name)),this.log(`Initialization complete. ${t.size}/${this.initializationSteps.length} steps successful`)}setupInitializationSteps(){this.addStep("dom-ready",async()=>{document.readyState==="loading"&&await new Promise(t=>document.addEventListener("DOMContentLoaded",t)),this.log("DOM is ready")}),this.addStep("load-modules",async()=>{await this.orchestrator.initializeCoreModules()},["dom-ready"]),this.addStep("init-auth",async()=>{this.orchestrator.getModule("auth")&&window.socialAuth?(await window.socialAuth.init(),this.log("Auth system initialized")):this.log("Auth module not available")},["load-modules"]),this.addStep("init-social",async()=>{this.orchestrator.getModule("social")&&window.socialFeatures?(await window.socialFeatures.init(),this.log("Social features initialized")):this.log("Social module not available")},["init-auth"]),this.addStep("init-profile-hub",async()=>{window.profileHubManager?this.log("ProfileHub is available"):this.log("ProfileHub not yet available, will retry")},["init-auth"]),this.addStep("setup-global-handlers",async()=>{this.setupGlobalEventHandlers()},["init-auth","init-social"]),this.addStep("init-ui",async()=>{await this.initializeUIComponents()},["setup-global-handlers"]),this.addStep("finalize",async()=>{this.finalizeApplication()},["init-ui"])}setupGlobalEventHandlers(){this.log("Setting up global event handlers..."),this.appState.addEventListener("state-changed",t=>{t.updates.user&&this.handleUserStateChange(t.updates.user)}),window.addEventListener("auth-state-changed",t=>{this.log("Auth state change received:",t.detail),this.appState.setState({user:{isAuthenticated:t.detail.isAuthenticated,profile:t.detail.profile}},"auth-system")}),window.addEventListener("social-action",t=>{this.log("Social action received:",t.detail),this.handleSocialAction(t.detail)}),window.addEventListener("profilehub-state-changed",t=>{this.log("ProfileHub state change received:",t.detail),this.handleProfileHubStateChange(t.detail)}),this.log("Global event handlers set up")}handleUserStateChange(t){this.log("Handling user state change:",t),this.updateAuthUI(t.isAuthenticated),window.profileHubManager&&t.profile&&window.profileHubManager.handleAuthStateChange(t.isAuthenticated?{uid:"user"}:null,t.profile)}handleSocialAction(t){this.log("Handling social action:",t),this.appState.setState({performance:{socialActions:(this.appState.state.performance.socialActions||0)+1}},"social-action")}handleProfileHubStateChange(t){this.log("Handling ProfileHub state change:",t),this.appState.setState({ui:{modals:{profile:t.state?.ui?.hubState==="expanded"}}},"profile-hub")}updateAuthUI(t){this.log("Updating auth UI:",t);const e=document.getElementById("sidebarLoginBtn");e&&(e.style.display=t?"none":"block");const i=document.getElementById("sidebarUserActions");i&&(i.style.display=t?"block":"none"),document.querySelectorAll(".profile-element").forEach(s=>{s.style.display=t?"block":"none"})}async initializeUIComponents(){this.log("Initializing UI components..."),this.orchestrator.getModule("navigation")&&window.navigationManager&&await window.navigationManager.init(),this.setupMobileOptimizations(),this.setupThemeHandling(),this.log("UI components initialized")}setupMobileOptimizations(){this.log("Setting up mobile optimizations..."),document.addEventListener("touchstart",e=>{e.target.classList.add("touch-active")},{passive:!0}),document.addEventListener("touchend",e=>{e.target.classList.remove("touch-active")},{passive:!0}),document.querySelectorAll("input, textarea, select").forEach(e=>{e.addEventListener("focus",()=>{const i=document.querySelector('meta[name="viewport"]');i&&(i.content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")})}),this.log("Mobile optimizations set up")}setupThemeHandling(){this.log("Setting up theme handling...");const t=window.matchMedia("(prefers-color-scheme: dark)").matches,i=localStorage.getItem("app-theme")||(t?"dark":"light");this.appState.setState({ui:{theme:i}},"theme-detection"),document.documentElement.setAttribute("data-theme",i),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",o=>{if(!localStorage.getItem("app-theme")){const s=o.matches?"dark":"light";this.appState.setState({ui:{theme:s}},"theme-change"),document.documentElement.setAttribute("data-theme",s)}}),this.log("Theme handling set up")}finalizeApplication(){this.log("Finalizing application initialization..."),this.appState.setState({initialized:!0},"finalization"),this.setupPerformanceMonitoring(),this.setupErrorHandling();const t=this.appState.getPerformanceMetrics();this.log("Application initialization complete",t),this.appState.emit("app-ready",{state:this.appState.state,metrics:t}),this.log("Application ready!")}setupPerformanceMonitoring(){this.log("Setting up performance monitoring..."),setInterval(()=>{if(performance.memory){const t=performance.memory.usedJSHeapSize/1024/1024;t>50&&this.log(`High memory usage: ${t.toFixed(2)}MB`)}},3e4),setInterval(()=>{const t=this.appState.state.performance.functionCallCount;this.log(`Function call count: ${t}`)},6e4)}setupErrorHandling(){this.log("Setting up error handling..."),window.addEventListener("error",t=>{this.log("Global error caught:",t.error),this.appState.emit("app-error",{error:t.error,filename:t.filename,lineno:t.lineno})}),window.addEventListener("unhandledrejection",t=>{this.log("Unhandled promise rejection:",t.reason),this.appState.emit("app-error",{error:t.reason,type:"unhandled-rejection"})})}getAppState(){return this.appState.state}getPerformanceMetrics(){return this.appState.getPerformanceMetrics()}async init(){this.log("Starting application initialization...");try{return this.setupInitializationSteps(),await this.executeInitializationSteps(),this.log("Application initialization successful"),!0}catch(t){return this.log("Application initialization failed:",t),this.appState.emit("app-error",{error:t,type:"initialization-failure"}),!1}}}let B=null;async function W(){console.log("[MAIN] Initializing application...");try{B=new tt,await B.init()?(console.log("[MAIN] Application initialized successfully"),window.app=B,window.getAppState=()=>B.getAppState(),window.getPerformanceMetrics=()=>B.getPerformanceMetrics(),window.debugApp=()=>{console.log("App State:",B.getAppState()),console.log("Performance:",B.getPerformanceMetrics())},window.debugAuthState=()=>{console.log("=== AUTH STATE DEBUG ==="),console.log("SocialAuth:",window.socialAuth?.currentUser?.uid||"Not authenticated"),console.log("SocialFeatures:",window.socialFeatures?.currentUser?.uid||"Not authenticated"),console.log("ProfileHub:",window.profileHubManager?.state?.user?.isAuthenticated||!1),console.log("App State User:",B.getAppState().user)},window.debugModuleStatus=()=>{console.log("=== MODULE STATUS DEBUG ==="),console.log("Auth Module:",!!window.socialAuth),console.log("Social Module:",!!window.socialFeatures),console.log("ProfileHub:",!!window.profileHubManager),console.log("Navigation:",!!window.navigationManager),console.log("Firebase Core:",!!window.firebase)},window.debugIntegration=()=>{console.log("=== INTEGRATION DEBUG ==="),console.log("Auth State Listeners:",{auth:window.socialAuth?.authListenerSetUp||!1,social:"Listening via events",profileHub:"Listening via events"}),console.log("Event System:",{authEvents:"auth-state-changed",socialEvents:"social-action",profileHubEvents:"profilehub-state-changed",appEvents:"app-ready, app-error, app-state-changed"})}):console.error("[MAIN] Application initialization failed")}catch(a){console.error("[MAIN] Critical error during initialization:",a)}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",W):W();console.log("[MAIN] Main.js loaded successfully");window.ORB_DEBUG={log:(a,t=null)=>{console.log(`[FLOATING ORB] ${a}`,t||"")},error:(a,t=null)=>{console.error(`[FLOATING ORB ERROR] ${a}`,t||"")},warn:(a,t=null)=>{console.warn(`[FLOATING ORB WARN] ${a}`,t||"")}};class et{constructor(t={}){this.options={debugMode:!1,enableSounds:!0,useThreeJS:!0,threeJsCdn:"https://unpkg.com/three@0.160.0/build/three.module.js",...t},this.container=null,this.orb=null,this.isInitialized=!1,this.chatDock=null,this.activeTab="dms",this.chatBadges={dms:0,ai:0,space:0},ORB_DEBUG.log("Floating Orb Manager initialized",this.options)}async init(){if(this.isInitialized){ORB_DEBUG.warn("Orb already initialized");return}try{await this.createOrb(),this.setupEventListeners(),this.adjustSidebarSpacing(),this.bindProfileHubEvents(),this.isInitialized=!0,ORB_DEBUG.log("Floating orb system initialized successfully"),window.innerWidth<=768&&ORB_DEBUG.log("Mobile layout detected - orb positioned in center-right area"),this.options.debugMode&&this.addDemoFeatures()}catch(t){ORB_DEBUG.error("Failed to initialize floating orb",t)}}bindProfileHubEvents(){try{if(this._hubBound)return;this._hubBound=!0;const t=(i,o)=>{if(!i)return;const s=i.ui?.hubState==="chatbot-active",n=!!i.chatbot?.isTyping;this.container&&(this.container.setAttribute("data-chatbot",s?"active":"inactive"),this.container.setAttribute("data-typing",n?"true":"false")),this.orb&&(this.orb.classList.toggle("chat-active",s),this.orb.classList.toggle("typing",n)),o?.chatbot?.messages&&this.orb&&(this.orb.classList.add("message-ping"),setTimeout(()=>this.orb&&this.orb.classList.remove("message-ping"),380))},e=window.profileHubManager?.state;e&&(ORB_DEBUG.log("Syncing orb with existing ProfileHub state"),t(e,null)),window.addEventListener("profilehub-state-changed",i=>{const{state:o,changes:s}=i.detail||{};ORB_DEBUG.log("ProfileHub state changed detected by orb",{hubState:o?.ui?.hubState,typing:o?.chatbot?.isTyping}),t(o,s)}),ORB_DEBUG.log("Floating orb bound to ProfileHub events")}catch(t){ORB_DEBUG.warn("Failed to bind ProfileHub events",t)}}async createOrb(){this.container=document.createElement("div"),this.container.className="floating-orb-wrapper",this.container.setAttribute("data-debug",this.options.debugMode),this.stage=document.createElement("div"),this.stage.style.position="absolute",this.stage.style.top="50%",this.stage.style.left="50%",this.stage.style.transform="translate(-50%, -50%)",this.stage.style.width="var(--orbit-size)",this.stage.style.height="var(--orbit-size)",this.scrollLine=document.createElement("div"),this.scrollLine.className="orb-scroll-line",this.scrollState={currentRotation:0,targetRotation:0,lockPoints:[0,60,120,180,240,300],isLocked:!1,sensitivity:.5},ORB_DEBUG.log("Orb scroll system initialized with lock points"),this.orb=document.createElement("div"),this.orb.className="floating-orb",this.orb.title="Chat Center - Click to expand",this.navContainer=document.createElement("div"),this.navContainer.className="orb-nav-container rotating",this.tooltip=document.createElement("div"),this.tooltip.className="orb-usage-tooltip",this.tooltip.setAttribute("role","status"),this.tooltip.setAttribute("aria-live","polite"),this.tooltip.textContent="Scroll or drag to rotate • Release to snap",this.stage.appendChild(this.scrollLine),this.stage.appendChild(this.navContainer),this.stage.appendChild(this.orb),this.container.appendChild(this.stage),this.container.appendChild(this.tooltip),document.body.appendChild(this.container),this.dimmer=document.createElement("div"),this.dimmer.className="chat-dimmer-overlay",this.dimmer.addEventListener("click",()=>this.closeChatDock()),document.body.appendChild(this.dimmer),ORB_DEBUG.log("Orb DOM structure created"),this.updateDockingPosition(),window.addEventListener("resize",()=>this.updateDockingPosition(),{passive:!0});try{window.dispatchEvent(new CustomEvent("floating-orb:ready",{detail:{container:this.container,orb:this.orb,orbit:this.orbit,popup:this.popup}})),ORB_DEBUG.log("Dispatched floating-orb:ready event")}catch(t){ORB_DEBUG.warn("Failed to dispatch floating-orb:ready event",t)}this.options.useThreeJS&&this.tryInitThreeJS().catch(t=>{ORB_DEBUG.warn("Three.js enhancement unavailable; using CSS orb only",t)}),this.buildOrbNavigation(),this.startRingOrbit(),this.setupScrollSystem(),this.createChatDock(),this.createInputBar();try{localStorage.getItem("orb_tooltip_seen")||(this.showToolTip(),localStorage.setItem("orb_tooltip_seen","1"))}catch{}}showToolTip(){this.tooltip&&(this.tooltip.classList.add("show"),clearTimeout(this._tooltipTimer),this._tooltipTimer=setTimeout(()=>{this.tooltip&&this.tooltip.classList.remove("show")},3200))}updateDockingPosition(){const t=document.getElementById("title-container")||document.querySelector(".title-main-container"),e=document.getElementById("home-subtitle");t?(this.container.parentElement!==t&&(e&&t.contains(e)?t.insertBefore(this.container,e):t.appendChild(this.container),ORB_DEBUG.log("Orb docked inline under title container")),this.container.classList.add("inline-under-title"),this.container.classList.remove("mobile-under-title"),this.container.style.top="",this.container.style.left="",this.container.style.transform=""):(this.container.parentElement!==document.body&&document.body.appendChild(this.container),this.container.classList.remove("inline-under-title"),this.container.classList.remove("mobile-under-title"))}buildOrbNavigation(){try{const t=[{id:"nav-home",icon:"🏠",title:"Home",onClick:()=>this.navigateToSection("home-section")},{id:"nav-guides",icon:"📚",title:"Guides",onClick:()=>this.navigateToSection("guides-section")},{id:"nav-showcase",icon:"🏆",title:"Showcase",onClick:()=>this.navigateToSection("showcase-section")},{id:"nav-tools",icon:"🛠️",title:"Tools",onClick:()=>this.navigateToSection("tools-section")},{id:"nav-projects",icon:"🚀",title:"Projects",onClick:()=>this.navigateToSection("projects-section")},{id:"nav-chat",icon:"💬",title:"Chatbot",onClick:()=>this.toggleChatDock(),badge:0}];this.navContainer.innerHTML="";const e=360/t.length;t.forEach((i,o)=>{const s=document.createElement("button");s.type="button",s.className="orb-nav-item",s.setAttribute("title",i.title),s.style.setProperty("--angle",`${o*e}deg`),s.innerText=i.icon,i.badge!==void 0&&(s.setAttribute("data-badge",i.badge),this.updateNavBadge(i.id,i.badge)),s.addEventListener("click",n=>{n.stopPropagation(),i.onClick?.()}),this.navContainer.appendChild(s)}),ORB_DEBUG.log("Orb navigation constructed",{count:t.length})}catch(t){ORB_DEBUG.warn("Failed to build orb navigation",t)}}navigateToSection(t){try{const e=document.getElementById(t);if(!e)return;e.style.display="block";const i=document.getElementById("mobileDrawer");i?.classList?.contains("active")&&i.classList.remove("active"),e.scrollIntoView({behavior:"smooth",block:"start"}),ORB_DEBUG.log("Navigated to section via orb",{sectionId:t})}catch{}}startRingOrbit(){try{const t=Array.from(this.navContainer?.children||[]);if(!t.length)return;const e=Math.PI*2,i=()=>{const o=this.scrollState.currentRotation*Math.PI/180,n=(this.navContainer.getBoundingClientRect().width||180)/2.3,r=.3;t.forEach((l,d)=>{const p=e*d/t.length+o,c=Math.cos(p)*n,u=Math.sin(p)*n*r;Math.cos(p)>0?l.classList.add("in-front"):l.classList.remove("in-front"),l.style.setProperty("--x",`${c}px`),l.style.setProperty("--y",`${u}px`)}),this._ringFrame=requestAnimationFrame(i)};this._ringFrame&&cancelAnimationFrame(this._ringFrame),this._ringFrame=requestAnimationFrame(i),ORB_DEBUG.log("Saturn ring orbit started with scroll control"),window.addEventListener("resize",()=>{this._ringFrame&&(cancelAnimationFrame(this._ringFrame),this._ringFrame=null),this.startRingOrbit()},{passive:!0})}catch(t){ORB_DEBUG.warn("Failed to start ring orbit",t)}}setupScrollSystem(){try{let t,e=!1,i=0;ORB_DEBUG.log("Setting up orb scroll system with lock points");const o=()=>{const l=this.scrollState.targetRotation-this.scrollState.currentRotation;Math.abs(l)>.1&&(this.scrollState.currentRotation+=l*.15,this.scrollLine.style.setProperty("--scroll-rotation",`${this.scrollState.currentRotation}deg`),requestAnimationFrame(o))},s=l=>{const d=Date.now();d-i<16||(i=d,this.scrollState.targetRotation+=l*this.scrollState.sensitivity,clearTimeout(t),o(),t=setTimeout(()=>{this.snapToNearestLockPoint()},150))};this.container.addEventListener("wheel",l=>{l.preventDefault(),s(l.deltaY),this.scrollLine.style.opacity="1",clearTimeout(this._scrollLineTimeout),this._scrollLineTimeout=setTimeout(()=>{this.scrollLine.style.opacity="0.3"},2e3)},{passive:!1});let n=0,r=0;this.container.addEventListener("touchstart",l=>{l.touches.length===1&&(e=!0,n=l.touches[0].clientY,r=this.scrollState.currentRotation,this.scrollLine.style.opacity="1")},{passive:!0}),this.container.addEventListener("touchmove",l=>{if(e&&l.touches.length===1){l.preventDefault();const d=(n-l.touches[0].clientY)*2;this.scrollState.targetRotation=r+d,o()}},{passive:!1}),this.container.addEventListener("touchend",()=>{e&&(e=!1,setTimeout(()=>this.snapToNearestLockPoint(),100),setTimeout(()=>{this.scrollLine.style.opacity="0.3"},1500))},{passive:!0}),this.scrollLine.style.opacity="0.3",ORB_DEBUG.log("Scroll system initialized with lock points:",this.scrollState.lockPoints)}catch(t){ORB_DEBUG.warn("Failed to setup scroll system",t)}}snapToNearestLockPoint(){try{let t=this.scrollState.targetRotation%360;t<0&&(t+=360);let e=this.scrollState.lockPoints[0],i=Math.abs(t-e);for(const s of this.scrollState.lockPoints){const n=Math.min(Math.abs(t-s),Math.abs(t-s-360),Math.abs(t-s+360));n<i&&(i=n,e=s)}const o=Math.floor(this.scrollState.targetRotation/360)*360+e;this.scrollState.targetRotation=o,this.scrollState.isLocked=!0,this.container&&(this.container.classList.add("lock-snap"),setTimeout(()=>{this.container&&this.container.classList.remove("lock-snap")},200)),ORB_DEBUG.log("Snapped to lock point:",e)}catch(t){ORB_DEBUG.warn("Failed to snap to lock point",t)}}async tryInitThreeJS(){if(window.__orbThree)return ORB_DEBUG.log("Three.js already loaded, reusing module"),this.initThreeScene(window.__orbThree);try{ORB_DEBUG.log("Loading Three.js from CDN",{url:this.options.threeJsCdn});const t=await import(this.options.threeJsCdn);window.__orbThree=t,ORB_DEBUG.log("Three.js CDN module loaded successfully"),await this.initThreeScene(t)}catch(t){throw ORB_DEBUG.error("Failed to load Three.js from CDN",t),t}}async initThreeScene(t){ORB_DEBUG.log("Initializing Three.js scene");const e=document.createElement("div");e.className="orb-3d-layer",this.container.appendChild(e),ORB_DEBUG.log("WebGL layer created and added to container");const i=e.clientWidth||200,o=e.clientHeight||200,s=new t.WebGLRenderer({antialias:!0,alpha:!0});e.appendChild(s.domElement);const n=new t.Scene,r=new t.PerspectiveCamera(45,i/o,.1,100);r.position.z=3.2;const l=()=>{const y=e.clientWidth||parseInt(getComputedStyle(e).width),D=e.clientHeight||parseInt(getComputedStyle(e).height),L=Math.min(window.devicePixelRatio||1,2);s.setPixelRatio(L),s.setSize(y,D,!1),r.aspect=y/D,r.updateProjectionMatrix()};l(),new ResizeObserver(l).observe(e),window.addEventListener("resize",l);const d=new t.SphereGeometry(1,64,64),h=document.createElement("canvas");h.width=256,h.height=256;const p=h.getContext("2d"),c=p.createImageData(256,256),u=c.data;for(let y=0;y<u.length;y+=4){const D=y/4%256,L=Math.floor(y/4/256),U=Math.sin(D*.1)*Math.cos(L*.1),O=Math.sin(D*.05+L*.03)*Math.cos(D*.03-L*.05),R=(U+O)*.5+.5,Y=(U-O)*.5+.5;u[y]=R*255,u[y+1]=Y*255,u[y+2]=255,u[y+3]=255}p.putImageData(c,0,0);const m=new t.CanvasTexture(h);m.wrapS=m.wrapT=t.RepeatWrapping;const v=new t.MeshStandardMaterial({color:3470847,roughness:.15,metalness:.8,emissive:848127,emissiveIntensity:.3,transparent:!0,opacity:.9,normalMap:m,normalScale:new t.Vector2(.3,.3),envMapIntensity:1.2}),b=new t.Mesh(d,v);n.add(b);const f=new t.AmbientLight(6750207,.6);n.add(f);const S=new t.PointLight(8956671,1.5);S.position.set(2,2,2),n.add(S);const E=new t.Clock,M=()=>{const y=E.getElapsedTime();b.rotation.y=y*.4,b.rotation.x=Math.sin(y*.6)*.15,s.render(n,r),requestAnimationFrame(M)};M(),ORB_DEBUG.log("Three.js orb enhancement initialized"),this.webglLayer=e,this.threeRenderer=s,this.threeScene=n,this.threeSphere=b}setupEventListeners(){this.orb.addEventListener("click",t=>{t.preventDefault(),this.toggleChatDock(),ORB_DEBUG.log("Orb clicked - toggling chat dock")}),this.orb.addEventListener("keydown",t=>{(t.key==="Enter"||t.key===" ")&&(t.preventDefault(),this.toggleChatDock())}),this.orb.setAttribute("tabindex","0"),this.orb.setAttribute("role","button"),this.orb.setAttribute("aria-label","Chat Center"),ORB_DEBUG.log("Event listeners set up")}adjustSidebarSpacing(){ORB_DEBUG.log("Orb floating mode - no layout adjustments needed")}escapeHtml(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML}createChatDock(){try{this.chatDock=document.createElement("div"),this.chatDock.className="chat-dock",this.chatDock.innerHTML=`
        <div class="dock-tabs">
          <button class="dock-tab active" data-tab="dms">DMs</button>
          <button class="dock-tab" data-tab="ai">AI</button>
          <button class="dock-tab" data-tab="space">Space</button>
        </div>
        <div class="dock-body">
          <div class="dock-list">
            <div class="dock-list-header">
              <button class="new-message-btn" title="Start new conversation">
                <span class="btn-icon">✉️</span>
                <span class="btn-text">New Message</span>
              </button>
            </div>
            <div class="dock-conversations" id="dock-conversations">
              <div class="conversation-item active" data-conversation="general">
                <div class="conversation-avatar">👥</div>
                <div class="conversation-info">
                  <div class="conversation-name">General</div>
                  <div class="conversation-preview">Welcome to the community!</div>
                </div>
                <div class="conversation-time">now</div>
              </div>
            </div>
          </div>
          <div class="dock-thread">
            <div class="thread-header">
              <div class="thread-title">General Chat</div>
              <div class="thread-status">🟢 Online</div>
            </div>
            <div class="thread-messages" id="thread-messages">
              <div class="dock-msg me">Hello there!</div>
              <div class="dock-msg bot">Hi! How can I help you today?</div>
            </div>
            <div class="dock-input-container" id="dock-input-slot"></div>
          </div>
        </div>
      `,this.container.appendChild(this.chatDock),this.chatDock.querySelectorAll(".dock-tab").forEach(e=>{e.addEventListener("click",i=>{this.switchTab(i.target.dataset.tab)})});const t=this.chatDock.querySelector(".new-message-btn");t&&t.addEventListener("click",e=>{e.stopPropagation(),this.showNewMessageModal()}),this.chatDock.querySelectorAll(".conversation-item").forEach(e=>{e.addEventListener("click",i=>{i.stopPropagation(),this.switchConversation(e.dataset.conversation)})}),this.addInteractiveStyles(),document.addEventListener("click",e=>{!this.chatDock.contains(e.target)&&!(this.inputBar&&this.inputBar.contains(e.target))&&this.closeChatDock()}),ORB_DEBUG.log("Chat dock created successfully")}catch(t){ORB_DEBUG.warn("Failed to create chat dock",t)}}createInputBar(){try{this.inputBar=document.createElement("div"),this.inputBar.className="orb-input-wrap",this.inputBar.innerHTML=`
        <div class="orb-input">
          <input type="text" placeholder="Send a DM...">
          <button class="send-btn">Send</button>
        </div>
      `,this.container.appendChild(this.inputBar);const t=this.inputBar.querySelector("input"),e=this.inputBar.querySelector(".send-btn"),i=()=>{const o=t.value.trim();o&&(this.sendMessageToActiveTab(o),t.value="",this.openChatDock())};e.addEventListener("click",i),t.addEventListener("keypress",o=>{o.key==="Enter"&&i()}),t.addEventListener("click",o=>{o.preventDefault(),o.stopPropagation(),this.chatDock.classList.contains("open")||this.openChatDock(),ORB_DEBUG.log("Input clicked - opening chat dock")}),t.addEventListener("focus",()=>{this.chatDock.classList.contains("open")||this.openChatDock(),ORB_DEBUG.log("Input focused - opening chat dock")}),ORB_DEBUG.log("Input bar created successfully")}catch(t){ORB_DEBUG.warn("Failed to create input bar",t)}}toggleChatDock(){if(!this.chatDock)return;const t=this.chatDock.classList.contains("open");t?this.closeChatDock():this.openChatDock(),ORB_DEBUG.log("Chat dock toggled",{isOpen:!t})}openChatDock(){if(this.chatDock){this.scrollPosition=window.pageYOffset,document.body.style.position="fixed",document.body.style.top=`-${this.scrollPosition}px`,document.body.style.width="100%",document.body.style.overflow="hidden",this.chatDock.classList.add("open"),document.body.classList.add("chat-dock-open"),this.updateInputBarPlaceholder(),this.inputBar.classList.add("dock-triggered");try{const t=this.chatDock.querySelector("#dock-input-slot");console.log("[ORB DEBUG] Moving input to dock:",{slot:!!t,inputBar:!!this.inputBar,slotElement:t,inputBarElement:this.inputBar}),t&&this.inputBar?(this.inputBar.classList.add("inside-dock"),this.inputBar.parentElement!==t?(t.appendChild(this.inputBar),console.log("[ORB DEBUG] Input moved to dock successfully")):console.log("[ORB DEBUG] Input already in dock"),console.log("[ORB DEBUG] Final input state:",{parentElement:this.inputBar.parentElement,classes:this.inputBar.className,computedStyle:window.getComputedStyle(this.inputBar).display,visibility:window.getComputedStyle(this.inputBar).visibility,height:window.getComputedStyle(this.inputBar).height})):console.log("[ORB DEBUG] Missing slot or inputBar:",{slot:!!t,inputBar:!!this.inputBar})}catch(t){console.error("[ORB DEBUG] Error moving input to dock:",t)}document.body.classList.add("dim-overlay"),this.orb.classList.add("orb-chat-active"),setTimeout(()=>{const e=this.chatDock.getBoundingClientRect().top-100;this.orb.style.top=`${e}px`,this.orb.style.left="50%",this.orb.style.transform="translateX(-50%) translateY(-50%)"},50),ORB_DEBUG.log("Chat dock opened smoothly")}}closeChatDock(){if(this.chatDock){this.chatDock.classList.remove("open"),document.body.classList.remove("chat-dock-open"),document.body.style.position="",document.body.style.top="",document.body.style.width="",document.body.style.overflow="",this.scrollPosition!==void 0&&window.scrollTo(0,this.scrollPosition),this.inputBar.classList.remove("dock-triggered"),document.body.classList.remove("dim-overlay"),this.orb.classList.remove("orb-chat-active"),this.orb.style.top="",this.orb.style.left="",this.orb.style.transform="";try{this.inputBar&&this.inputBar.classList.remove("inside-dock"),this.container&&this.inputBar&&this.inputBar.parentElement!==this.container&&this.container.appendChild(this.inputBar)}catch{}ORB_DEBUG.log("Chat dock closed smoothly")}}updateInputBarPlaceholder(){if(!this.inputBar)return;const t=this.inputBar.querySelector("input"),e={dms:"Send a DM...",ai:"Ask AI anything...",space:"Post to Space..."};t.placeholder=e[this.activeTab]||"Type a message..."}switchTab(t){this.activeTab=t,this.chatDock.querySelectorAll(".dock-tab").forEach(e=>{e.classList.toggle("active",e.dataset.tab===t)}),this.updateChatContent(t),this.updateInputBarPlaceholder(),ORB_DEBUG.log("Switched to tab",{tabName:t})}updateChatContent(t){const e=this.chatDock.querySelector("#dock-conversations"),i=this.chatDock.querySelector(".thread-title"),o=this.chatDock.querySelector("#thread-messages");if(!(!e||!i||!o))switch(t){case"dms":this.updateDMsContent(e,i,o);break;case"ai":this.updateAIContent(e,i,o);break;case"space":this.updateSpaceContent(e,i,o);break}}updateDMsContent(t,e,i){t.innerHTML=`
      <div class="conversation-item active" data-conversation="general">
        <div class="conversation-avatar">👥</div>
        <div class="conversation-info">
          <div class="conversation-name">General</div>
          <div class="conversation-preview">Welcome to the community!</div>
        </div>
        <div class="conversation-time">now</div>
      </div>
    `,e.textContent="General Chat",i.innerHTML=`
      <div class="dock-msg user">Hello there!</div>
      <div class="dock-msg bot">Hi! How can I help you today?</div>
    `,this.attachConversationListeners()}updateAIContent(t,e,i){t.innerHTML=`
      <div class="conversation-item active" data-conversation="ai-assistant">
        <div class="conversation-avatar">🤖</div>
        <div class="conversation-info">
          <div class="conversation-name">AI Assistant</div>
          <div class="conversation-preview">Ready to help with your projects!</div>
        </div>
        <div class="conversation-time">online</div>
      </div>
    `,e.textContent="AI Assistant",i.innerHTML=`
      <div class="dock-msg ai">Hi! I'm your AI assistant integrated into your ProfileHub. How can I help you navigate or customize your experience?</div>
    `,this.attachConversationListeners()}updateSpaceContent(t,e,i){t.innerHTML=`
      <div class="conversation-item active" data-conversation="space-chat">
        <div class="conversation-avatar">🌌</div>
        <div class="conversation-info">
          <div class="conversation-name">Space Chat</div>
          <div class="conversation-preview">Community group chat - mark your visit!</div>
        </div>
        <div class="conversation-time">live</div>
      </div>
    `,e.textContent="Space Chat",i.innerHTML=`
      <div class="dock-msg system">Welcome to Space Chat! Send a message to mark your visit.</div>
      <div class="dock-msg user">👋 Just dropped by!</div>
      <div class="dock-msg user">🚀 Building something cool today</div>
      <div class="dock-msg user">💡 Working on a new project</div>
    `,this.attachConversationListeners()}attachConversationListeners(){this.chatDock.querySelectorAll(".conversation-item").forEach(t=>{t.addEventListener("click",e=>{e.stopPropagation(),this.switchConversation(t.dataset.conversation)})})}addInteractiveStyles(){const t="orb-interactive-styles";if(document.getElementById(t))return;const e=document.createElement("style");e.id=t,e.textContent=`
      /* Enhanced interactive styles for chat dock */
      .dock-tab {
        cursor: pointer !important;
        transition: all 0.2s ease !important;
        user-select: none !important;
      }
      
      .dock-tab:hover {
        background: rgba(0, 240, 255, 0.1) !important;
        transform: translateY(-1px) !important;
      }
      
      .dock-tab.active {
        background: rgba(0, 240, 255, 0.2) !important;
        color: var(--primary-neon) !important;
        box-shadow: 0 0 10px rgba(0, 240, 255, 0.3) !important;
      }
      
      .conversation-item {
        cursor: pointer !important;
        transition: all 0.2s ease !important;
        user-select: none !important;
      }
      
      .conversation-item:hover {
        background: rgba(255, 255, 255, 0.05) !important;
        transform: translateX(2px) !important;
      }
      
      .conversation-item.active {
        background: rgba(0, 240, 255, 0.1) !important;
        border-left: 2px solid var(--primary-neon) !important;
      }
      
      .new-message-btn {
        cursor: pointer !important;
        transition: all 0.2s ease !important;
        user-select: none !important;
      }
      
      .new-message-btn:hover {
        background: rgba(0, 240, 255, 0.1) !important;
        transform: translateY(-1px) !important;
        box-shadow: 0 4px 12px rgba(0, 240, 255, 0.2) !important;
      }
      
      .new-message-btn:active {
        transform: translateY(0) !important;
      }
      
      /* Make sure all interactive elements are clickable */
      .dock-tab, .conversation-item, .new-message-btn {
        pointer-events: auto !important;
      }
    `,document.head.appendChild(e),ORB_DEBUG.log("Interactive styles added to chat dock")}sendMessageToActiveTab(t){if(ORB_DEBUG.log("Sending message to active tab",{tab:this.activeTab,message:t}),this.chatDock){const e=this.chatDock.querySelector("#thread-messages"),i=document.createElement("div");i.className="dock-msg user",i.textContent=t,e.appendChild(i),e.scrollTop=e.scrollHeight}switch(this.activeTab){case"dms":this.handleDMMessage(t);break;case"ai":this.handleAIMessage(t);break;case"space":this.handleSpaceMessage(t);break}}handleSpaceMessage(t){setTimeout(()=>{const e=this.chatDock.querySelector("#thread-messages");if(e){const i=document.createElement("div");i.className="dock-msg system",i.textContent=`📍 Visit marked: ${new Date().toLocaleTimeString()}`,e.appendChild(i),e.scrollTop=e.scrollHeight}},1e3)}handleAIMessage(t){setTimeout(()=>{const e=this.chatDock.querySelector("#thread-messages");if(e){const i=document.createElement("div");i.className="dock-msg ai",i.textContent="I'm here to help! How can I assist you with your projects today?",e.appendChild(i),e.scrollTop=e.scrollHeight}},1500)}handleDMMessage(t){setTimeout(()=>{const e=this.chatDock.querySelector("#thread-messages");if(e){const i=document.createElement("div");i.className="dock-msg bot",i.textContent="Thanks for your message! I'll get back to you soon.",e.appendChild(i),e.scrollTop=e.scrollHeight}},1200)}async showNewMessageModal(){ORB_DEBUG.log("Showing new message modal");try{const t=await this.fetchFollowers(),e=document.createElement("div");e.className="new-message-modal",e.innerHTML=`
        <div class="modal-content">
          <div class="modal-header">
            <h3>✉️ New Message</h3>
            <button class="modal-close">&times;</button>
          </div>
          <div class="modal-body">
            <div class="recipient-section">
              <label>To:</label>
              <div class="recipient-list" id="recipient-list">
                ${t.length>0?this.renderFollowersList(t):this.renderNoFollowersMessage()}
              </div>
            </div>
            <div class="message-section">
              <textarea id="new-message-text" placeholder="Type your message..." rows="4"></textarea>
            </div>
          </div>
          <div class="modal-actions">
            <button class="send-new-message-btn">Send Message</button>
            <button class="cancel-new-message-btn">Cancel</button>
          </div>
        </div>
      `,document.body.appendChild(e),e.style.display="flex";const i=e.querySelector(".modal-close"),o=e.querySelector(".cancel-new-message-btn"),s=e.querySelector(".send-new-message-btn"),n=e.querySelector("#new-message-text"),r=()=>{document.body.removeChild(e)};i.addEventListener("click",r),o.addEventListener("click",r),e.addEventListener("click",l=>{l.target===e&&r()}),s.addEventListener("click",()=>{const l=n.value.trim();if(!l){this.showNotification("Please enter a message","warning");return}const d=e.querySelector(".recipient-item.selected");if(!d){this.showNotification("Please select a recipient","warning");return}const h=d.dataset.userId,p=d.dataset.userName;this.sendNewMessage(h,p,l),r()}),e.querySelectorAll(".recipient-item").forEach(l=>{l.addEventListener("click",()=>{e.querySelectorAll(".recipient-item").forEach(d=>d.classList.remove("selected")),l.classList.add("selected")})}),setTimeout(()=>n.focus(),100)}catch(t){ORB_DEBUG.error("Failed to show new message modal",t),this.showNotification("Failed to load followers","error")}}async fetchFollowers(){try{const{auth:t,db:e}=await g(async()=>{const{auth:n,db:r}=await import("./firebase-core-BO8UvLyb.js");return{auth:n,db:r}},[],import.meta.url),{doc:i,getDoc:o}=await g(async()=>{const{doc:n,getDoc:r}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:n,getDoc:r}},[],import.meta.url);if(!t.currentUser)return[];const s=await o(i(e,"users",t.currentUser.uid));return s.exists()?s.data().following||[]:[]}catch(t){return ORB_DEBUG.error("Failed to fetch followers",t),[]}}renderFollowersList(t){return t.map(e=>`
      <div class="recipient-item" data-user-id="${e}" data-user-name="User ${e.slice(0,8)}">
        <div class="recipient-avatar">👤</div>
        <div class="recipient-name">User ${e.slice(0,8)}</div>
        <div class="recipient-status">🟢</div>
      </div>
    `).join("")}renderNoFollowersMessage(){return`
      <div class="no-followers">
        <div class="no-followers-icon">👥</div>
        <div class="no-followers-text">No followers yet</div>
        <a href="/pages/users.html" class="explore-link">Find friends on Explore page</a>
      </div>
    `}sendNewMessage(t,e,i){ORB_DEBUG.log("Sending new message",{recipientId:t,recipientName:e,message:i}),this.addConversationToList(t,e,i),this.showNotification(`Message sent to ${e}!`,"success")}addConversationToList(t,e,i){const o=this.chatDock.querySelector("#dock-conversations");if(!o)return;const s=document.createElement("div");s.className="conversation-item",s.dataset.conversation=t,s.innerHTML=`
      <div class="conversation-avatar">👤</div>
      <div class="conversation-info">
        <div class="conversation-name">${e}</div>
        <div class="conversation-preview">${i}</div>
      </div>
      <div class="conversation-time">now</div>
    `,s.addEventListener("click",()=>{this.switchConversation(t)}),o.insertBefore(s,o.firstChild)}switchConversation(t){ORB_DEBUG.log("Switching conversation",{conversationId:t}),this.chatDock.querySelectorAll(".conversation-item").forEach(o=>{o.classList.toggle("active",o.dataset.conversation===t)}),this.chatDock.querySelectorAll(".conversation-item").forEach(o=>{o.replaceWith(o.cloneNode(!0))}),this.chatDock.querySelectorAll(".conversation-item").forEach(o=>{o.addEventListener("click",s=>{s.stopPropagation(),this.switchConversation(o.dataset.conversation)})});const e=this.chatDock.querySelector(".thread-title"),i=this.chatDock.querySelector("#thread-messages");t==="general"?(e.textContent="General Chat",i.innerHTML=`
        <div class="dock-msg me">Hello there!</div>
        <div class="dock-msg bot">Hi! How can I help you today?</div>
      `):(e.textContent=`Chat with User ${t.slice(0,8)}`,i.innerHTML=`
        <div class="dock-msg me">Started conversation</div>
        <div class="dock-msg bot">Hello! How can I help you?</div>
      `)}showNotification(t,e="info"){ORB_DEBUG.log("Showing notification",{message:t,type:e});const i=document.createElement("div");i.className=`orb-notification orb-notification-${e}`,i.textContent=t,document.body.appendChild(i),setTimeout(()=>{i.classList.add("show")},100),setTimeout(()=>{i.classList.remove("show"),setTimeout(()=>{i.parentNode&&i.parentNode.removeChild(i)},300)},3e3)}updateNavBadge(t,e){const i=this.navContainer.querySelector("[data-badge]");i&&(i.setAttribute("data-badge",e),i.style.display=e>0?"block":"none")}updateChatBadges(t){this.chatBadges={...this.chatBadges,...t};const e=Object.values(this.chatBadges).reduce((i,o)=>i+o,0);this.updateNavBadge("nav-chat",e),ORB_DEBUG.log("Chat badges updated",{badges:this.chatBadges,total:e})}createStarNotification(t,e="info"){try{const i=this.container.querySelector(".orb-star-layer")||this.createStarLayer(),o=document.createElement("div");o.className="orb-star",o.innerHTML="⭐",o.title=t;const s=Math.random()*360,n=this.getOrbitRadius(),r=Math.cos(s*Math.PI/180)*n,l=Math.sin(s*Math.PI/180)*n*.3;o.style.setProperty("--x",`${r}px`),o.style.setProperty("--y",`${l}px`),i.appendChild(o),setTimeout(()=>{o.parentNode&&o.parentNode.removeChild(o)},5e3),ORB_DEBUG.log("Star notification created",{message:t,type:e})}catch(i){ORB_DEBUG.warn("Failed to create star notification",i)}}createStarLayer(){const t=document.createElement("div");return t.className="orb-star-layer",this.container.appendChild(t),t}getOrbitRadius(){return parseInt(getComputedStyle(document.documentElement).getPropertyValue("--orbit-size"))/2.25}addDemoFeatures(){setTimeout(()=>{this.createStarNotification("New message from Sarah","dm")},2e3),setTimeout(()=>{this.createStarNotification("AI response ready","ai")},4e3),setTimeout(()=>{this.createStarNotification("Space activity detected","space")},6e3),setTimeout(()=>{this.updateChatBadges({dms:2,ai:1,space:3})},3e3)}clear(){this.updateChatBadges({dms:0,ai:0,space:0}),ORB_DEBUG.log("All chat badges cleared")}addChatMessage(t,e,i="bot"){if(this.chatDock){const o=this.chatDock.querySelector(".dock-thread"),s=document.createElement("div");if(s.className=`dock-msg ${i}`,s.textContent=e,o.appendChild(s),o.scrollTop=o.scrollHeight,i!=="me"){const n={...this.chatBadges};n[t]=(n[t]||0)+1,this.updateChatBadges(n)}}}showStarNotification(t,e="info"){this.createStarNotification(t,e)}updateBadges(t){this.updateChatBadges(t)}destroy(){this.container&&this.container.parentNode&&this.container.parentNode.removeChild(this.container),this.chatDock&&this.chatDock.parentNode&&this.chatDock.parentNode.removeChild(this.chatDock);const t=document.querySelector(".sidebar-nav");t&&(t.style.paddingLeft=""),this.isInitialized=!1,ORB_DEBUG.log("Floating orb destroyed")}}document.addEventListener("DOMContentLoaded",()=>{window.floatingOrb=new et({debugMode:!0}),window.floatingOrb.init(),ORB_DEBUG.log("Floating orb system loaded and ready!")});(()=>{const a=(...o)=>console.debug("[Orb3D]",...o);let t=!1;const e=()=>{if(t)return;const o=document.querySelector(".floating-orb-wrapper"),s=document.querySelector(".floating-orb"),n=document.querySelector(".notification-popup");if(!o||!s){a("Orb not yet in DOM. Will wait for ready event/observer.");return}t=!0,a("Initializing 3D tilt controller");let r=0,l=0,d=0,h=0,p=null;const c=(f,S,E)=>Math.min(E,Math.max(S,f)),u=f=>{s&&(f?s.classList.add("idle"):s.classList.remove("idle"))},m=(f,S)=>{const E=o.getBoundingClientRect(),M=E.left+E.width/2,y=E.top+E.height/2,D=f-M,L=S-y,U=c(D/(E.width/2),-1,1),O=c(L/(E.height/2),-1,1),R=10;l=U*R,r=-O*R},v=()=>{const S=r-d,E=l-h;d+=S*.12,h+=E*.12,s.style.transform=`translate(-50%,-50%) rotateX(${d.toFixed(2)}deg) rotateY(${h.toFixed(2)}deg)`,requestAnimationFrame(v)},b=f=>{u(!1),f.touches&&f.touches[0]?m(f.touches[0].clientX,f.touches[0].clientY):m(f.clientX,f.clientY),clearTimeout(p),p=setTimeout(()=>u(!0),2200)};window.addEventListener("pointermove",b,{passive:!0}),window.addEventListener("touchmove",b,{passive:!0}),s.addEventListener("click",()=>{n&&n.classList.toggle("show")}),u(!0),requestAnimationFrame(v),a("3D tilt engaged. Try moving your pointer around.")};document.querySelector(".floating-orb")&&e(),window.addEventListener("floating-orb:ready",()=>{a("Received floating-orb:ready"),e()});const i=new MutationObserver(()=>{document.querySelector(".floating-orb")&&(a("Observer detected orb in DOM"),e(),i.disconnect())});document.body?i.observe(document.body,{childList:!0,subtree:!0}):window.addEventListener("DOMContentLoaded",()=>{i.observe(document.body,{childList:!0,subtree:!0})})})();window.debugOrb={checkStatus:()=>{const a=document.querySelector(".floating-orb"),t=document.querySelector(".floating-orb-wrapper"),e=document.querySelector(".orb-3d-layer"),i=e?.querySelector("canvas"),o=document.querySelector(".chat-dock"),s=document.querySelector(".orb-input-wrap");console.log("[ORB DEBUG] Status check:",{orb:!!a,wrapper:!!t,webglLayer:!!e,canvas:!!i,canvasSize:i?`${i.width}x${i.height}`:"N/A",orbPosition:a?getComputedStyle(a).transform:"N/A",threeLoaded:!!window.__orbThree,chatDock:!!o,inputBar:!!s})},testWebGL:()=>{const a=document.querySelector(".orb-3d-layer canvas");if(a){const t=a.getContext("webgl")||a.getContext("webgl2");console.log("[ORB DEBUG] WebGL context:",!!t),t&&console.log("[ORB DEBUG] WebGL info:",{vendor:t.getParameter(t.VENDOR),renderer:t.getParameter(t.RENDERER),version:t.getParameter(t.VERSION)})}else console.log("[ORB DEBUG] No WebGL canvas found")},repositionTopLeft:()=>{const a=document.querySelector(".floating-orb-wrapper");a&&(a.style.top="12px",a.style.left="12px",console.log("[ORB DEBUG] Repositioned to top-left"))},testChatDock:()=>{window.floatingOrb&&(window.floatingOrb.toggleChatDock(),console.log("[ORB DEBUG] Chat dock toggled"))},openChatDock:()=>{window.floatingOrb&&(window.floatingOrb.openChatDock(),console.log("[ORB DEBUG] Chat dock opened smoothly"))},closeChatDock:()=>{window.floatingOrb&&(window.floatingOrb.closeChatDock(),console.log("[ORB DEBUG] Chat dock closed smoothly"))},testInputBar:()=>{const a=document.querySelector(".orb-input input");a&&(a.click(),console.log("[ORB DEBUG] Input bar clicked - should trigger chat dock"))},testStarNotification:(a="Test star notification")=>{window.floatingOrb&&(window.floatingOrb.showStarNotification(a),console.log("[ORB DEBUG] Star notification created:",a))},testChatBadges:()=>{window.floatingOrb&&(window.floatingOrb.updateBadges({dms:3,ai:1,space:2}),console.log("[ORB DEBUG] Chat badges updated"))},clearAll:()=>{window.floatingOrb&&(window.floatingOrb.clear(),console.log("[ORB DEBUG] All chat badges cleared"))},testNewMessage:()=>{window.floatingOrb&&(window.floatingOrb.showNewMessageModal(),console.log("[ORB DEBUG] New message modal opened"))},testNotification:(a="Test notification",t="info")=>{window.floatingOrb&&(window.floatingOrb.showNotification(a,t),console.log("[ORB DEBUG] Notification shown:",a))},testConversationSwitch:(a="test-user-123")=>{window.floatingOrb&&(window.floatingOrb.switchConversation(a),console.log("[ORB DEBUG] Switched to conversation:",a))},addTestConversation:()=>{window.floatingOrb&&(window.floatingOrb.addConversationToList("test-user-456","Test User","This is a test message"),console.log("[ORB DEBUG] Test conversation added"))},testInputClick:()=>{const a=document.querySelector(".orb-input input");a?(a.click(),console.log("[ORB DEBUG] Input clicked - should toggle chat dock")):console.log("[ORB DEBUG] Input not found")},testInputFocus:()=>{const a=document.querySelector(".orb-input input");a?(a.focus(),console.log("[ORB DEBUG] Input focused - should open chat dock")):console.log("[ORB DEBUG] Input not found")},debugInputVisibility:()=>{const a=document.querySelector(".orb-input-wrap"),t=document.querySelector("#dock-input-slot"),e=document.querySelector(".dock-thread");console.log("[ORB DEBUG] Input visibility check:",{inputWrap:{element:a,parent:a?.parentElement,classes:a?.className,display:a?window.getComputedStyle(a).display:"N/A",visibility:a?window.getComputedStyle(a).visibility:"N/A",height:a?window.getComputedStyle(a).height:"N/A",position:a?window.getComputedStyle(a).position:"N/A"},slot:{element:t,height:t?window.getComputedStyle(t).height:"N/A",overflow:t?window.getComputedStyle(t).overflow:"N/A",display:t?window.getComputedStyle(t).display:"N/A"},dockThread:{element:e,overflow:e?window.getComputedStyle(e).overflow:"N/A"}})},testChatDockInteractivity:()=>{const a=document.querySelectorAll(".dock-tab"),t=document.querySelectorAll(".conversation-item"),e=document.querySelector(".new-message-btn");console.log("[ORB DEBUG] Chat dock interactivity test:",{tabs:{count:a.length,elements:Array.from(a).map(i=>({text:i.textContent,classes:i.className,dataset:i.dataset}))},conversations:{count:t.length,elements:Array.from(t).map(i=>({text:i.textContent.trim(),classes:i.className,dataset:i.dataset}))},newMessageBtn:{exists:!!e,classes:e?.className}}),a.length>0&&(console.log("[ORB DEBUG] Testing tab clicks..."),a.forEach((i,o)=>{setTimeout(()=>{i.click(),console.log(`[ORB DEBUG] Clicked tab ${o+1}: ${i.textContent}`)},o*500)}))},testChatDockPosition:()=>{const a=document.querySelector(".chat-dock");if(a){const t=a.getBoundingClientRect(),e={width:window.innerWidth,height:window.innerHeight};console.log("[ORB DEBUG] Chat dock position:",{element:a,classes:a.className,position:{top:t.top,left:t.left,width:t.width,height:t.height},viewport:e,isVisible:t.top>=0&&t.left>=0&&t.bottom<=e.height&&t.right<=e.width,computedStyle:{position:window.getComputedStyle(a).position,top:window.getComputedStyle(a).top,left:window.getComputedStyle(a).left,transform:window.getComputedStyle(a).transform}})}else console.log("[ORB DEBUG] Chat dock not found")},checkInputStyles:()=>{const a=document.querySelector(".orb-input input"),t=document.querySelector(".orb-input .send-btn"),e=document.querySelector(".orb-input-wrap"),i=document.querySelector(".orb-input");if(a){const o=window.getComputedStyle(a);console.log("[ORB DEBUG] Input computed styles:",{background:o.background,border:o.border,color:o.color,fontSize:o.fontSize,padding:o.padding,margin:o.margin,cursor:o.cursor,fontFamily:o.fontFamily})}if(t){const o=window.getComputedStyle(t);console.log("[ORB DEBUG] Send button styles:",{background:o.background,border:o.border,color:o.color,padding:o.padding,fontSize:o.fontSize})}if(e){const o=window.getComputedStyle(e);console.log("[ORB DEBUG] Input wrap styles:",{position:o.position,bottom:o.bottom,left:o.left,transform:o.transform,width:o.width,zIndex:o.zIndex})}console.log("[ORB DEBUG] Elements found:",{input:!!a,sendBtn:!!t,inputWrap:!!e,inputContainer:!!i})},testDockInput:()=>{const a=document.querySelector("#dock-message-input"),t=document.querySelector(".dock-send-btn");a&&t?(a.value="Test message from dock input",t.click(),console.log("[ORB DEBUG] Dock input test - message sent")):console.log("[ORB DEBUG] Dock input elements not found")},focusDockInput:()=>{const a=document.querySelector("#dock-message-input");a?(a.focus(),console.log("[ORB DEBUG] Dock input focused")):console.log("[ORB DEBUG] Dock input not found")}};const w={log:(a,t=null)=>{console.log(`[HOME TIMELINE] ${a}`,t||"")},error:(a,t=null)=>{console.error(`[HOME TIMELINE ERROR] ${a}`,t||"")}};let T=[];async function z(){w.log("Home Timeline: Loading widgets for display");try{const a=A.currentUser;if(!a){w.log("Home Timeline: User not authenticated, showing guest state"),T=[];return}const t=$(k,"widgets"),e=P(t,H("userId","==",a.uid));T=(await G(e)).docs.map(o=>{const s=o.data();return w.log("Home Timeline: Processing widget",{id:o.id,title:s.title,slot:s.slot,fileCount:s.files?.length||0}),{id:o.id,title:s.title||"Untitled Widget",desc:s.description||"No description available",slot:s.slot,files:s.files||[],createdAt:s.createdAt}}),w.log("Home Timeline: Widgets loaded successfully",{count:T.length})}catch(a){w.error("Home Timeline: Failed to load widgets",a),T=[]}}async function q(){w.log("Home Timeline: Rendering home widget cards"),await z();const a=document.querySelectorAll(".timeline-event");if(a.length===0){w.log("Home Timeline: No timeline events found in DOM");return}a.forEach((t,e)=>{const i=t.querySelector(".timeline-event-card");i&&i.remove();const o=T[e],s=document.createElement("div");if(s.className="timeline-event-card",o){w.log("Home Timeline: Rendering project card",{index:e,projectId:o.id,title:o.title}),s.innerHTML=`
        <div class="quip-preview" style="margin-bottom:8px;position:relative;">
          <iframe class="quip-iframe webgl-enabled" title="Quip Preview - ${o.title||"Untitled Quip"}" style="width:100%;height:280px;border:0;border-radius:12px;background:#0a0a0a;"></iframe>
          <div class="quip-overlay" style="position:absolute;top:8px;right:8px;opacity:0.8;">
            <span class="quip-type-badge" style="background:rgba(0,240,255,0.2);color:#00f0ff;padding:4px 8px;border-radius:12px;font-size:0.8rem;font-family:JetBrains Mono;">QUIP</span>
          </div>
        </div>
        <div class="quip-info">
          <h3 style="color:#00f0ff;margin:0 0 8px 0;font-family:JetBrains Mono;">${o.title||"Untitled Quip"}</h3>
          <p style="color:#a0a0a0;margin:0 0 12px 0;line-height:1.4;">${o.desc||"No description available"}</p>
          <div class="quip-actions" style="display:flex;gap:8px;">
            <button class="quip-interact-btn" style="background:rgba(0,240,255,0.1);border:1px solid #00f0ff;color:#00f0ff;padding:6px 12px;border-radius:6px;cursor:pointer;font-size:0.9rem;">🎮 Interact</button>
            <button class="quip-dashboard-btn" onclick="window.location.href='pages/profile_dashboard/my-projects.html'" style="background:rgba(255,107,53,0.1);border:1px solid #ff6b35;color:#ff6b35;padding:6px 12px;border-radius:6px;cursor:pointer;font-size:0.9rem;">📊 Dashboard</button>
          </div>
        </div>
      `;const n=s.querySelector(".quip-iframe");n.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms allow-webgl allow-pointer-lock"),it(o,n).catch(r=>{w.error("Home Timeline: Failed to load quip into iframe",r),n.replaceWith(Object.assign(document.createElement("div"),{className:"quip-preview-error",textContent:"Failed to load quip preview",style:"padding:20px;text-align:center;color:#ff4444;background:rgba(255,68,68,0.1);border-radius:8px;"}))}),s.querySelector(".quip-interact-btn").addEventListener("click",()=>{w.log("Home Timeline: Quip interact button clicked",{projectId:o.id}),n.focus(),n.style.borderColor="#ffff00",setTimeout(()=>{n.style.borderColor="#00f0ff"},2e3)})}else w.log("Home Timeline: Rendering empty slot",{index:e}),s.innerHTML=`
        <div style="text-align: center; padding: 20px;">
          <div style="font-size: 3rem; margin-bottom: 10px; color: #666;">+</div>
          <p style="color: #aaa; margin: 0 0 15px 0;">Empty Slot</p>
          <button onclick="window.location.href='pages/profile_dashboard/my-projects.html'" style="background: rgba(0,240,255,0.1); border: 1px solid #00f0ff; color: #00f0ff; padding: 8px 16px; border-radius: 6px; cursor: pointer; font-size: 0.9rem; transition: all 0.3s ease;" onmouseover="this.style.background='rgba(0,240,255,0.2)'" onmouseout="this.style.background='rgba(0,240,255,0.1)'">Create Widget</button>
        </div>
      `;t.appendChild(s)}),w.log("Home Timeline: All home widget cards rendered")}async function it(a,t){try{const e=Array.isArray(a.files)?a.files:[];if(e.length===0){w.warn("Home Timeline: Quip has no files",{projectId:a.id});return}const i={};e.forEach(c=>{c&&c.fileName&&c.downloadURL&&(i[c.fileName]=c.downloadURL)}),w.log("Home Timeline: Quip file map created",{fileCount:Object.keys(i).length,files:Object.keys(i)});const o=Object.keys(i).find(c=>/index\.html?$/i.test(c))||Object.keys(i).find(c=>/\.html?$/i.test(c));if(!o){w.warn("Home Timeline: No HTML file found for quip",{projectId:a.id});return}w.log("Home Timeline: Loading quip HTML",{htmlFileName:o});let s;try{if(s=await fetch(i[o]),!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`)}catch(c){w.error("Home Timeline: Failed to fetch quip HTML",{url:i[o],error:c.message}),t.srcdoc=`
        <div style="padding: 20px; text-align: center; color: #ff4444; background: rgba(255,68,68,0.1); border-radius: 8px; font-family: Arial, sans-serif;">
          <h3>⚠️ Preview Unavailable</h3>
          <p>Unable to load widget preview</p>
          <small>Error: ${c.message}</small>
        </div>
      `;return}const n=await s.text(),r=c=>{if(!c)return null;const u=c.replace(/^\.\//,"").replace(/^\//,"");if(i[u])return i[u];const m=u.split("/").pop();return i[m]||null};let l=n.replace(/(href|src)=["']([^"']+)["']/gi,(c,u,m)=>{const v=r(m);return v?`${u}="${v}"`:c});const d=`
      <script>
        // WebGL context optimization
        if (typeof window !== 'undefined') {
          window.addEventListener('load', () => {
            // Enable WebGL context preservation
            const canvas = document.querySelector('canvas');
            if (canvas) {
              canvas.style.imageRendering = 'pixelated';
              canvas.style.imageRendering = 'crisp-edges';
            }
            
            // Performance monitoring for quips
            if (window.performance && window.performance.mark) {
              window.performance.mark('home-quip-loaded-${a.id}');
            }
          });
        }
      <\/script>
    `;l=l.replace(/<\/body>/i,`${d}</body>`);const h=new Blob([l],{type:"text/html"}),p=URL.createObjectURL(h);t.src=p,w.log("Home Timeline: Quip iframe set with enhanced blob URL")}catch(e){w.error("Home Timeline: Error preparing quip iframe",e),t.srcdoc=`
      <div style="padding: 20px; text-align: center; color: #ff4444; background: rgba(255,68,68,0.1); border-radius: 8px; font-family: Arial, sans-serif;">
        <h3>⚠️ Preview Error</h3>
        <p>Unable to load widget preview</p>
        <small>Error: ${e.message}</small>
      </div>
    `}}async function Q(){w.log("Home Timeline: Initializing home timeline display");try{q(),A.onAuthStateChanged(a=>{a?(w.log("Home Timeline: User authenticated, re-rendering home timeline",{uid:a.uid}),q()):(w.log("Home Timeline: User signed out, clearing home timeline"),T=[],q())}),w.log("Home Timeline: Initialization complete")}catch(a){w.error("Home Timeline: Failed to initialize",a)}}document.addEventListener("DOMContentLoaded",async function(){w.log("Home Timeline: DOM Content Loaded - Starting home timeline initialization"),await Q()});window.homeTimelineManager={renderHomeWidgetCards:q,initializeHomeTimeline:Q,loadHomeTimelineProjects:z};w.log("Home Timeline: Script loaded successfully");class ot{constructor(){this.currentUser=null,this.userWidgets=[],this.widgetData={},this.userQuips=[],this.quipData={},this.debugMode=!0}log(t,e=null){this.debugMode&&console.log(`[WidgetDisplay] ${t}`,e)}error(t,e=null){console.error(`[WidgetDisplay] ${t}`,e)}async init(){if(this.currentUser=A.currentUser,!this.currentUser){this.log("No user logged in for widget display");return}this.log("Initializing enhanced widget display system with quip support"),await this.loadUserWidgets(),await this.loadUserQuips(),this.setupWidgetSlots(),this.setupQuipSlots(),this.setupProfileMenuIntegration()}async loadUserWidgets(){try{const t=await I(C(k,"users",this.currentUser.uid));if(t.exists()){const e=t.data();this.userWidgets=e.widgets||[],this.log("Loaded user widgets",{widgetCount:this.userWidgets.length}),await this.loadWidgetMetadata()}}catch(t){this.error("Error loading user widgets",t)}}async loadWidgetMetadata(){try{for(const t of this.userWidgets){const e=await I(C(k,"widgets",t));e.exists()&&(this.widgetData[t]=e.data())}this.log("Loaded widget metadata",{widgetCount:Object.keys(this.widgetData).length})}catch(t){this.error("Error loading widget metadata",t)}}async loadUserQuips(){try{this.log("Loading user quips for user:",this.currentUser.uid);const t=$(k,"quips"),e=P(t,H("userId","==",this.currentUser.uid)),i=await G(e);this.userQuips=i.docs.map(o=>o.id),this.log("Loaded user quips",{quipCount:this.userQuips.length,quipIds:this.userQuips}),await this.loadQuipMetadata()}catch(t){if(this.error("Error loading user quips",t),t.code==="permission-denied"&&(this.log("Permission denied - user may not be authenticated properly"),window.socialAuth&&window.socialAuth.currentUser)){this.log("Retrying with current auth user"),this.currentUser=window.socialAuth.currentUser;try{const e=$(k,"quips"),i=P(e,H("userId","==",this.currentUser.uid)),o=await G(i);this.userQuips=o.docs.map(s=>s.id),this.log("Retry successful - loaded user quips",{quipCount:this.userQuips.length}),await this.loadQuipMetadata()}catch(e){this.error("Retry also failed",e)}}}}async loadQuipMetadata(){try{for(const t of this.userQuips){const e=await I(C(k,"quips",t));e.exists()&&(this.quipData[t]=e.data())}this.log("Loaded quip metadata",{quipCount:Object.keys(this.quipData).length})}catch(t){this.error("Error loading quip metadata",t)}}findHtmlFile(t){if(!Array.isArray(t)||t.length===0)return null;const e=t.find(i=>i.fileName&&/index\.html?$/i.test(i.fileName));return e||t.find(i=>i.fileName&&/\.html?$/i.test(i.fileName))}setupWidgetSlots(){document.querySelectorAll("[data-widget-slot]").forEach(e=>{const i=e.dataset.widgetSlot;this.renderWidgetSlot(e,i)})}setupQuipSlots(){document.querySelectorAll(".quip-slot, .quip-preview, .timeline-event-card").forEach((e,i)=>{this.renderQuipSlot(e,i+1)})}async renderQuipSlot(t,e){const i=Object.values(this.quipData).find(o=>o.slot===parseInt(e));if(i&&i.files&&this.findHtmlFile(i.files)){const o=this.findHtmlFile(i.files);this.showQuipIframe(t,o.downloadURL,i)}else this.showEmptyQuipSlot(t,e)}async renderWidgetSlot(t,e){const i=Object.values(this.widgetData).find(o=>o.slot===parseInt(e));if(i&&i.files&&this.findHtmlFile(i.files)){const o=this.findHtmlFile(i.files);this.showWidgetIframe(t,o.downloadURL,i)}else this.showUploadInterface(t,e)}showWidgetIframe(t,e,i){t.innerHTML=`
      <div class="widget-container">
        <div class="widget-header">
          <h3>${i.title||"Untitled Widget"}</h3>
          <div class="widget-actions">
            <button class="btn btn-secondary edit-widget-btn" data-widget-id="${i.id}">
              <span class="material-icons">edit</span>
              Edit
            </button>
            <button class="btn btn-secondary preview-widget-btn" data-widget-id="${i.id}">
              <span class="material-icons">open_in_new</span>
              Full View
            </button>
            <button class="btn btn-danger delete-widget-btn" data-widget-id="${i.id}">
              <span class="material-icons">delete</span>
              Delete
            </button>
          </div>
        </div>
        <div class="widget-frame-container">
          <iframe 
            src="${e}" 
            class="widget-iframe"
            frameborder="0"
            sandbox="allow-scripts allow-same-origin allow-forms"
            title="Widget ${i.title}"
          ></iframe>
        </div>
        <div class="widget-info">
          <p><strong>Description:</strong> ${i.description||"No description"}</p>
          <p><strong>Category:</strong> ${i.category||"General"}</p>
          <p><strong>Tags:</strong> ${i.tags?.join(", ")||"No tags"}</p>
          <p><strong>Last Updated:</strong> ${new Date(i.updatedAt?.toDate()||i.updatedAt).toLocaleDateString()}</p>
          <div class="widget-stats">
            <span class="stat">👁️ ${i.stats?.views||0} views</span>
            <span class="stat">❤️ ${i.stats?.likes||0} likes</span>
            <span class="stat">📤 ${i.stats?.shares||0} shares</span>
          </div>
        </div>
      </div>
    `,this.setupWidgetActionHandlers(t)}showQuipIframe(t,e,i){t.innerHTML=`
      <div class="quip-container">
        <div class="quip-header">
          <h3 style="color: #00f0ff; font-family: JetBrains Mono;">${i.title||"Untitled Quip"}</h3>
          <div class="quip-badges">
            <span class="quip-type-badge" style="background: rgba(0,240,255,0.2); color: #00f0ff; padding: 4px 8px; border-radius: 12px; font-size: 0.8rem;">QUIP</span>
            ${i.webglEnabled?'<span class="webgl-badge" style="background: rgba(255,0,255,0.2); color: #ff00ff; padding: 4px 8px; border-radius: 12px; font-size: 0.8rem;">WebGL</span>':""}
          </div>
          <div class="quip-actions">
            <button class="btn btn-primary interact-quip-btn" data-quip-id="${i.id}">
              <span>🎮</span>
              Interact
            </button>
            <button class="btn btn-secondary edit-quip-btn" data-quip-id="${i.id}">
              <span>✏️</span>
              Edit
            </button>
            <button class="btn btn-secondary preview-quip-btn" data-quip-id="${i.id}">
              <span>👁️</span>
              Full View
            </button>
            <button class="btn btn-danger delete-quip-btn" data-quip-id="${i.id}">
              <span>🗑️</span>
              Delete
            </button>
          </div>
        </div>
        <div class="quip-frame-container">
          <iframe 
            src="${e}" 
            class="quip-iframe webgl-enabled"
            frameborder="0"
            loading="lazy"
            sandbox="allow-scripts allow-same-origin allow-forms allow-webgl allow-pointer-lock"
            style="width: 100%; height: 300px; border-radius: 12px; border: 2px solid #00f0ff; background: #0a0a0a;"
            title="Quip Preview - ${i.title||"Untitled Quip"}"
          ></iframe>
        </div>
        <div class="quip-info">
          <p style="color: #a0a0a0; margin: 8px 0;">${i.description||"No description available"}</p>
          <div class="quip-meta">
            <span class="quip-interactions" style="color: #00f0ff;">Interactions: ${i.interactionCount||0}</span>
            <span class="quip-category" style="color: #ff00ff;">Category: ${i.category||"general"}</span>
          </div>
        </div>
      </div>
    `;const o=t.querySelector(".quip-iframe");x&&typeof x.applyDashboardSettings=="function"&&x.applyDashboardSettings(o,{borderColor:"#00f0ff",borderWidth:"2px",borderRadius:"12px",shadow:"0 0 20px rgba(0, 240, 255, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.1)"}),this.setupQuipActionHandlers(t)}showEmptyQuipSlot(t,e){t.innerHTML=`
      <div class="empty-quip-slot" style="text-align: center; padding: 40px; border: 2px dashed #333; border-radius: 12px; background: rgba(0,240,255,0.05);">
        <div style="font-size: 3rem; margin-bottom: 16px; color: #00f0ff;">🎮</div>
        <h3 style="color: #00f0ff; margin-bottom: 8px; font-family: JetBrains Mono;">Empty Quip Slot ${e}</h3>
        <p style="color: #a0a0a0; margin-bottom: 16px;">Create an interactive WebGL quip to fill this slot</p>
        <button class="btn btn-primary create-quip-btn" data-slot="${e}" style="background: rgba(0,240,255,0.1); border: 1px solid #00f0ff; color: #00f0ff; padding: 8px 16px; border-radius: 6px;">
          <span>➕</span>
          Create Quip
        </button>
      </div>
    `,this.setupEmptyQuipHandlers(t)}showUploadInterface(t,e){t.innerHTML=`
      <div class="widget-upload-container">
        <h3>Widget Slot ${e}</h3>
        <p>Upload your widget files to get started</p>
        <div class="upload-area" data-slot="${e}">
          <input type="file" id="widgetFiles${e}" multiple accept=".html,.js,.css,.png,.jpg,.jpeg,.gif,.svg,.json,.mp3,.mp4,.wav,.ogg" style="display: none;">
          <div class="upload-placeholder">
            <span class="material-icons">cloud_upload</span>
            <p>Drop files here or click to upload</p>
            <p class="upload-hint">Supports: HTML, CSS, JS, Images, Audio, Video</p>
          </div>
        </div>
        <div class="upload-form" style="display: none;">
          <input type="text" placeholder="Widget Title" class="widget-title-input" data-slot="${e}">
          <textarea placeholder="Widget Description" class="widget-desc-input" data-slot="${e}" rows="3"></textarea>
          <input type="text" placeholder="Category (e.g., game, tool, art)" class="widget-category-input" data-slot="${e}">
          <input type="text" placeholder="Tags (comma separated)" class="widget-tags-input" data-slot="${e}">
          <button class="btn btn-primary upload-widget-btn" data-slot="${e}">
            <span class="material-icons">upload</span>
            Upload Widget
          </button>
        </div>
      </div>
    `,this.setupUploadHandlers(t,e)}setupUploadHandlers(t,e){const i=t.querySelector(".upload-area"),o=t.querySelector(`#widgetFiles${e}`),s=t.querySelector(".upload-form");o.addEventListener("change",r=>{r.target.files.length>0&&this.handleFileSelection(r.target.files,s)}),i.addEventListener("dragover",r=>{r.preventDefault(),i.classList.add("drag-over")}),i.addEventListener("dragleave",r=>{r.preventDefault(),i.classList.remove("drag-over")}),i.addEventListener("drop",r=>{r.preventDefault(),i.classList.remove("drag-over");const l=r.dataTransfer.files;l.length>0&&(o.files=l,this.handleFileSelection(l,s))}),i.addEventListener("click",()=>{o.click()}),t.querySelector(".upload-widget-btn").addEventListener("click",()=>{this.uploadWidget(e)})}handleFileSelection(t,e){e.style.display="block";const i=Array.from(t).map(o=>o.name).join(", ");e.querySelector(".upload-placeholder p").textContent=`Selected: ${i}`}async uploadWidget(t){if(this.log("Widget upload requested, delegating to WidgetUploadManager"),!window.widgetUploadManager){const{default:i}=await g(async()=>{const{default:o}=await import("./widget-upload-BclOXes8.js");return{default:o}},__vite__mapDeps([5,6,3]),import.meta.url);window.widgetUploadManager=i}const e=document.querySelector(`.upload-widget-btn[data-slot="${t}"]`);e?await window.widgetUploadManager.handleUploadButtonClick(e):this.error("Upload button not found for slot",{slotNumber:t})}setupWidgetActionHandlers(t){const e=t.querySelector(".edit-widget-btn");e&&e.addEventListener("click",s=>{const n=s.target.closest(".edit-widget-btn").dataset.widgetId;this.editWidget(n)});const i=t.querySelector(".preview-widget-btn");i&&i.addEventListener("click",s=>{const n=s.target.closest(".preview-widget-btn").dataset.widgetId;this.previewWidget(n)});const o=t.querySelector(".delete-widget-btn");o&&o.addEventListener("click",s=>{const n=s.target.closest(".delete-widget-btn").dataset.widgetId;this.deleteWidget(n)})}setupQuipActionHandlers(t){const e=t.querySelector(".interact-quip-btn");e&&e.addEventListener("click",n=>{const r=n.target.closest(".interact-quip-btn").dataset.quipId;this.interactWithQuip(r)});const i=t.querySelector(".edit-quip-btn");i&&i.addEventListener("click",n=>{const r=n.target.closest(".edit-quip-btn").dataset.quipId;this.editQuip(r)});const o=t.querySelector(".preview-quip-btn");o&&o.addEventListener("click",n=>{const r=n.target.closest(".preview-quip-btn").dataset.quipId;this.previewQuip(r)});const s=t.querySelector(".delete-quip-btn");s&&s.addEventListener("click",n=>{const r=n.target.closest(".delete-quip-btn").dataset.quipId;this.deleteQuip(r)})}setupEmptyQuipHandlers(t){const e=t.querySelector(".create-quip-btn");e&&e.addEventListener("click",i=>{const o=i.target.closest(".create-quip-btn").dataset.slot;this.createNewQuip(o)})}previewWidget(t){const e=this.widgetData[t];if(!e){this.showToast("Widget not found","error");return}const i=this.findHtmlFile(e.files);if(!i||!i.downloadURL){this.showToast("Widget HTML file not found","error");return}let o=document.getElementById("widgetPreviewModal");o||(o=document.createElement("div"),o.id="widgetPreviewModal",o.className="modal",o.innerHTML=`
        <div class="modal-content widget-preview-modal">
          <div class="modal-header">
            <h3>${e.title}</h3>
            <button class="close-modal">×</button>
          </div>
          <div class="modal-body">
            <iframe 
              src="${i.downloadURL}" 
              class="widget-preview-iframe"
              frameborder="0"
              sandbox="allow-scripts allow-same-origin allow-forms"
              title="Widget Preview"
            ></iframe>
          </div>
        </div>
      `,document.body.appendChild(o),o.querySelector(".close-modal").addEventListener("click",()=>{o.style.display="none"}),o.addEventListener("click",n=>{n.target===o&&(o.style.display="none")})),o.querySelector("h3").textContent=e.title,o.querySelector("iframe").src=i.downloadURL,o.style.display="block"}editWidget(t){const e=this.widgetData[t];if(!e){this.showToast("Widget not found","error");return}const i=document.querySelector(`[data-widget-slot="${e.slot}"]`);if(i){this.showUploadInterface(i,e.slot);const o=i.querySelector(".widget-title-input"),s=i.querySelector(".widget-desc-input"),n=i.querySelector(".widget-category-input"),r=i.querySelector(".widget-tags-input");o&&(o.value=e.title||""),s&&(s.value=e.description||""),n&&(n.value=e.category||""),r&&(r.value=e.tags?.join(", ")||"")}}async deleteWidget(t){const e=this.widgetData[t];if(!e){this.showToast("Widget not found","error");return}if(confirm(`Are you sure you want to delete "${e.title}"?`))try{await F(C(k,"widgets",t)),await N(C(k,"users",this.currentUser.uid),{widgets:J(t)}),await this.loadUserWidgets(),this.setupWidgetSlots(),this.showToast(`Widget "${e.title}" deleted successfully`,"success"),this.log("Widget deleted successfully",{widgetId:t})}catch(i){this.error("Error deleting widget",i),this.showToast("Failed to delete widget: "+i.message,"error")}}setupProfileMenuIntegration(){this.updateProfileMenuWidgetCount(),this.addWidgetManagementToProfile()}updateProfileMenuWidgetCount(){const t=document.querySelector(".profile-menu");if(t){const e=t.querySelector(".widget-count");if(e)e.textContent=this.userWidgets.length;else{const i=document.createElement("div");i.className="widget-count",i.textContent=this.userWidgets.length,t.appendChild(i)}}}addWidgetManagementToProfile(){const t=document.querySelector(".profile-menu");if(t&&!t.querySelector(".widget-management")){const e=document.createElement("div");e.className="widget-management",e.innerHTML=`
        <h4>My Widgets (${this.userWidgets.length})</h4>
        <div class="widget-list">
          ${this.userWidgets.length===0?'<p>No widgets yet. <a href="#" class="upload-widget-link">Upload your first widget!</a></p>':this.userWidgets.map(i=>{const o=this.widgetData[i];return o?`
                <div class="widget-item" data-widget-id="${i}">
                  <div class="widget-info">
                    <h5>${o.title}</h5>
                    <p>${o.description||"No description"}</p>
                    <span class="widget-category">${o.category}</span>
                  </div>
                  <div class="widget-actions">
                    <button class="btn btn-sm preview-widget-btn" data-widget-id="${i}">Preview</button>
                    <button class="btn btn-sm edit-widget-btn" data-widget-id="${i}">Edit</button>
                    <button class="btn btn-sm btn-danger delete-widget-btn" data-widget-id="${i}">Delete</button>
                  </div>
                </div>
              `:""}).join("")}
        </div>
      `,t.appendChild(e),this.setupProfileMenuEventListeners(e)}}setupProfileMenuEventListeners(t){t.querySelectorAll(".preview-widget-btn").forEach(i=>{i.addEventListener("click",o=>{const s=o.target.dataset.widgetId;this.previewWidget(s)})}),t.querySelectorAll(".edit-widget-btn").forEach(i=>{i.addEventListener("click",o=>{const s=o.target.dataset.widgetId;this.editWidget(s)})}),t.querySelectorAll(".delete-widget-btn").forEach(i=>{i.addEventListener("click",o=>{const s=o.target.dataset.widgetId;this.deleteWidget(s)})});const e=t.querySelector(".upload-widget-link");e&&e.addEventListener("click",i=>{i.preventDefault();const o=document.querySelector("[data-widget-slot]");o&&o.scrollIntoView({behavior:"smooth"})})}async interactWithQuip(t){const e=this.quipData[t];if(!e){this.showToast("Quip not found","error");return}const i=document.querySelector(`[data-quip-id="${t}"] .quip-iframe`);i&&(i.focus(),i.style.borderColor="#ffff00",setTimeout(()=>{i.style.borderColor="#00f0ff"},2e3));try{await N(C(k,"quips",t),{interactionCount:(e.interactionCount||0)+1,lastInteracted:X()}),this.log("Quip interaction tracked",{quipId:t})}catch(o){this.error("Failed to track quip interaction",o)}}editQuip(t){if(!this.quipData[t]){this.showToast("Quip not found","error");return}const i=`pages/widget_studio.html?edit=${t}`;window.location.href=i}previewQuip(t){const e=this.quipData[t];if(!e){this.showToast("Quip not found","error");return}const i=this.findHtmlFile(e.files);if(!i||!i.downloadURL){this.showToast("Quip HTML file not found","error");return}let o=document.getElementById("quipPreviewModal");o||(o=document.createElement("div"),o.id="quipPreviewModal",o.className="modal",o.innerHTML=`
        <div class="modal-content" style="max-width: 90vw; max-height: 90vh;">
          <div class="modal-header">
            <h3>Quip Preview</h3>
            <button class="modal-close">&times;</button>
          </div>
          <div class="modal-body">
            <iframe 
              src="${i.downloadURL}" 
              style="width: 100%; height: 70vh; border: none; border-radius: 8px;"
              sandbox="allow-scripts allow-same-origin allow-forms allow-webgl allow-pointer-lock"
            ></iframe>
          </div>
        </div>
      `,document.body.appendChild(o));const s=o.querySelector("iframe");s.src=i.downloadURL,o.querySelector("h3").textContent=`Quip Preview - ${e.title||"Untitled Quip"}`,o.style.display="flex",o.querySelector(".modal-close").onclick=()=>{o.style.display="none"},o.onclick=n=>{n.target===o&&(o.style.display="none")}}async deleteQuip(t){const e=this.quipData[t];if(!e){this.showToast("Quip not found","error");return}if(confirm(`Are you sure you want to delete "${e.title||"Untitled Quip"}"?`))try{await F(C(k,"quips",t)),delete this.quipData[t],this.userQuips=this.userQuips.filter(i=>i!==t),this.showToast("Quip deleted successfully","success"),this.log("Quip deleted",{quipId:t}),this.setupQuipSlots()}catch(i){this.error("Failed to delete quip",i),this.showToast("Failed to delete quip","error")}}createNewQuip(t){const e=`pages/widget_studio.html?slot=${t}&type=quip`;window.location.href=e}showToast(t,e="info"){window.showToast?window.showToast(t,e):console.log(`[${e.toUpperCase()}] ${t}`)}}window.previewWidget=function(a){window.widgetDisplay&&window.widgetDisplay.previewWidget(a)};window.uploadWidget=function(a){window.widgetDisplay&&window.widgetDisplay.uploadWidget(a)};window.editWidget=function(a){window.widgetDisplay&&window.widgetDisplay.editWidget(a)};window.deleteWidget=function(a){window.widgetDisplay&&window.widgetDisplay.deleteWidget(a)};let _=null;A.onAuthStateChanged(a=>{a?_||(_=new ot,_.init(),window.widgetDisplay=_):(_=null,window.widgetDisplay=null)});class j{constructor(){this.currentUser=null,this.following=new Set,this.followers=new Set,this.debugMode=!0}log(t,e=null){this.debugMode&&console.log(`[SOCIAL FEATURES] ${t}`,e||"")}error(t,e=null){console.error(`[SOCIAL FEATURES ERROR] ${t}`,e||"")}async init(){this.log("Initializing Social Features Manager"),this.setupAuthListener(),this.setupEventListeners(),this.log("Social Features Manager initialized")}async setupAuthListener(){try{this.log("Setting up auth state listener"),window.addEventListener("auth-state-changed",async t=>{const{user:e}=t.detail;this.currentUser=e,this.log("Social features received auth state change",{userId:e?.uid}),e?await this.loadUserSocialData(e.uid):(this.following.clear(),this.followers.clear())}),this.log("Social features auth listener set up via main auth system")}catch(t){this.error("Failed to setup auth listener",t)}}async loadUserSocialData(t){try{const{db:e}=await g(async()=>{const{db:n}=await import("./firebase-core-BO8UvLyb.js");return{db:n}},[],import.meta.url),{doc:i,getDoc:o}=await g(async()=>{const{doc:n,getDoc:r}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:n,getDoc:r}},[],import.meta.url),s=await o(i(e,"users",t));if(s.exists()){const n=s.data();this.following=new Set(n.following||[]),this.followers=new Set(n.followers||[]),this.log("User social data loaded",{following:this.following.size,followers:this.followers.size})}}catch(e){this.error("Failed to load user social data",e)}}async followUser(t){try{if(!this.currentUser)throw new Error("User must be logged in to follow others");const e=this.currentUser.uid;if(e===t)throw new Error("You cannot follow yourself");if(this.following.has(t))throw new Error("You are already following this user");const{db:i}=await g(async()=>{const{db:r}=await import("./firebase-core-BO8UvLyb.js");return{db:r}},[],import.meta.url),{doc:o,updateDoc:s,arrayUnion:n}=await g(async()=>{const{doc:r,updateDoc:l,arrayUnion:d}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:r,updateDoc:l,arrayUnion:d}},[],import.meta.url);return await s(o(i,"users",e),{following:n(t)}),await s(o(i,"users",t),{followers:n(e)}),this.following.add(t),await this.createFollowNotification(t,e),this.log("User followed successfully",{targetUserId:t}),{success:!0}}catch(e){return this.error("Follow action failed",e),{success:!1,error:e.message}}}async unfollowUser(t){try{if(!this.currentUser)throw new Error("User must be logged in to unfollow others");const e=this.currentUser.uid;if(!this.following.has(t))throw new Error("You are not following this user");const{db:i}=await g(async()=>{const{db:r}=await import("./firebase-core-BO8UvLyb.js");return{db:r}},[],import.meta.url),{doc:o,updateDoc:s,arrayRemove:n}=await g(async()=>{const{doc:r,updateDoc:l,arrayRemove:d}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:r,updateDoc:l,arrayRemove:d}},[],import.meta.url);return await s(o(i,"users",e),{following:n(t)}),await s(o(i,"users",t),{followers:n(e)}),this.following.delete(t),this.log("User unfollowed successfully",{targetUserId:t}),{success:!0}}catch(e){return this.error("Unfollow action failed",e),{success:!1,error:e.message}}}async likeWidget(t){try{if(!this.currentUser)throw new Error("User must be logged in to like widgets");const{db:e}=await g(async()=>{const{db:h}=await import("./firebase-core-BO8UvLyb.js");return{db:h}},[],import.meta.url),{doc:i,updateDoc:o,arrayUnion:s,getDoc:n}=await g(async()=>{const{doc:h,updateDoc:p,arrayUnion:c,getDoc:u}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:h,updateDoc:p,arrayUnion:c,getDoc:u}},[],import.meta.url),r=await n(i(e,"widgets",t));if(!r.exists())throw new Error("Widget not found");const l=r.data(),d=this.currentUser.uid;if(l.likes&&l.likes.includes(d))throw new Error("You have already liked this widget");return await o(i(e,"widgets",t),{likes:s(d),"stats.likes":(l.stats?.likes||0)+1}),await this.createLikeNotification(l.userId,d,t,l.title),this.log("Widget liked successfully",{widgetId:t}),{success:!0}}catch(e){return this.error("Like action failed",e),{success:!1,error:e.message}}}async unlikeWidget(t){try{if(!this.currentUser)throw new Error("User must be logged in to unlike widgets");const{db:e}=await g(async()=>{const{db:h}=await import("./firebase-core-BO8UvLyb.js");return{db:h}},[],import.meta.url),{doc:i,updateDoc:o,arrayRemove:s,getDoc:n}=await g(async()=>{const{doc:h,updateDoc:p,arrayRemove:c,getDoc:u}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:h,updateDoc:p,arrayRemove:c,getDoc:u}},[],import.meta.url),r=await n(i(e,"widgets",t));if(!r.exists())throw new Error("Widget not found");const l=r.data(),d=this.currentUser.uid;if(!l.likes||!l.likes.includes(d))throw new Error("You have not liked this widget");return await o(i(e,"widgets",t),{likes:s(d),"stats.likes":Math.max(0,(l.stats?.likes||1)-1)}),this.log("Widget unliked successfully",{widgetId:t}),{success:!0}}catch(e){return this.error("Unlike action failed",e),{success:!1,error:e.message}}}async shareWidget(t,e="general"){try{if(!this.currentUser)throw new Error("User must be logged in to share widgets");const{db:i}=await g(async()=>{const{db:h}=await import("./firebase-core-BO8UvLyb.js");return{db:h}},[],import.meta.url),{doc:o,getDoc:s,updateDoc:n,increment:r}=await g(async()=>{const{doc:h,getDoc:p,updateDoc:c,increment:u}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:h,getDoc:p,updateDoc:c,increment:u}},[],import.meta.url),l=await s(o(i,"widgets",t));if(!l.exists())throw new Error("Widget not found");const d=l.data();return await n(o(i,"widgets",t),{"stats.shares":r(1)}),await this.createShareNotification(d.userId,this.currentUser.uid,t,d.title,e),await this.handlePlatformSharing(d,e),this.log("Widget shared successfully",{widgetId:t,platform:e}),{success:!0}}catch(i){return this.error("Share action failed",i),{success:!1,error:i.message}}}async handlePlatformSharing(t,e){const i=`${window.location.origin}/widget/${t.id}`,o=`Check out this amazing widget: ${t.title}`;switch(e){case"twitter":window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(o)}&url=${encodeURIComponent(i)}`);break;case"facebook":window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(i)}`);break;case"linkedin":window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(i)}`);break;case"copy":await navigator.clipboard.writeText(`${o}
${i}`),this.showToast("Link copied to clipboard!","success");break;case"native":navigator.share?await navigator.share({title:t.title,text:t.description||o,url:i}):(await navigator.clipboard.writeText(`${o}
${i}`),this.showToast("Link copied to clipboard!","success"));break;default:await navigator.clipboard.writeText(`${o}
${i}`),this.showToast("Link copied to clipboard!","success")}}async discoverUsers(t=10,e=!0){try{const{db:i}=await g(async()=>{const{db:u}=await import("./firebase-core-BO8UvLyb.js");return{db:u}},[],import.meta.url),{collection:o,query:s,where:n,orderBy:r,limit:l,getDocs:d}=await g(async()=>{const{collection:u,query:m,where:v,orderBy:b,limit:f,getDocs:S}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{collection:u,query:m,where:v,orderBy:b,limit:f,getDocs:S}},[],import.meta.url);let h=s(o(i,"users"),r("createdAt","desc"),l(t));e&&this.currentUser&&(h=s(o(i,"users"),n("uid","!=",this.currentUser.uid),r("createdAt","desc"),l(t)));const p=await d(h),c=[];return p.forEach(u=>{const m=u.data();c.push({id:u.id,...m,isFollowing:this.following.has(u.id)})}),this.log("Users discovered",{count:c.length}),{success:!0,users:c}}catch(i){return this.error("Failed to discover users",i),{success:!1,error:i.message}}}async getUserFeed(t=20){try{if(!this.currentUser)throw new Error("User must be logged in to view feed");const{db:e}=await g(async()=>{const{db:p}=await import("./firebase-core-BO8UvLyb.js");return{db:p}},[],import.meta.url),{collection:i,query:o,where:s,orderBy:n,limit:r,getDocs:l}=await g(async()=>{const{collection:p,query:c,where:u,orderBy:m,limit:v,getDocs:b}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{collection:p,query:c,where:u,orderBy:m,limit:v,getDocs:b}},[],import.meta.url),d=Array.from(this.following),h=[];if(d.length>0){const p=o(i(e,"widgets"),s("userId","in",d),s("isPublic","==",!0),n("createdAt","desc"),r(t));(await l(p)).forEach(u=>{const m=u.data();h.push({type:"widget",id:u.id,data:m,timestamp:m.createdAt})})}return h.sort((p,c)=>c.timestamp?.toDate()-p.timestamp?.toDate()),this.log("User feed loaded",{count:h.length}),{success:!0,feed:h}}catch(e){return this.error("Failed to load user feed",e),{success:!1,error:e.message}}}async createFollowNotification(t,e){try{const{db:i}=await g(async()=>{const{db:c}=await import("./firebase-core-BO8UvLyb.js");return{db:c}},[],import.meta.url),{collection:o,addDoc:s,serverTimestamp:n}=await g(async()=>{const{collection:c,addDoc:u,serverTimestamp:m}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{collection:c,addDoc:u,serverTimestamp:m}},[],import.meta.url),{doc:r,getDoc:l}=await g(async()=>{const{doc:c,getDoc:u}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:c,getDoc:u}},[],import.meta.url),d=await l(r(i,"users",e)),h=d.exists()?d.data().displayName:"Someone",p={userId:t,type:"follow",title:"New follower! 👥",message:`${h} started following you.`,icon:"👥",data:{followerId:e,action:"view_profile"},read:!1,timestamp:n()};await s(o(i,"notifications"),p),this.log("Follow notification created",{targetUserId:t,followerId:e})}catch(i){this.error("Failed to create follow notification",i)}}async createLikeNotification(t,e,i,o){try{const{db:s}=await g(async()=>{const{db:m}=await import("./firebase-core-BO8UvLyb.js");return{db:m}},[],import.meta.url),{collection:n,addDoc:r,serverTimestamp:l}=await g(async()=>{const{collection:m,addDoc:v,serverTimestamp:b}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{collection:m,addDoc:v,serverTimestamp:b}},[],import.meta.url),{doc:d,getDoc:h}=await g(async()=>{const{doc:m,getDoc:v}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:m,getDoc:v}},[],import.meta.url),p=await h(d(s,"users",e)),c=p.exists()?p.data().displayName:"Someone",u={userId:t,type:"like",title:"New like! ❤️",message:`${c} liked your widget "${o}".`,icon:"❤️",data:{widgetId:i,likerId:e,action:"view_widget"},read:!1,timestamp:l()};await r(n(s,"notifications"),u),this.log("Like notification created",{widgetOwnerId:t,likerId:e,widgetId:i})}catch(s){this.error("Failed to create like notification",s)}}async createShareNotification(t,e,i,o,s){try{const{db:n}=await g(async()=>{const{db:f}=await import("./firebase-core-BO8UvLyb.js");return{db:f}},[],import.meta.url),{collection:r,addDoc:l,serverTimestamp:d}=await g(async()=>{const{collection:f,addDoc:S,serverTimestamp:E}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{collection:f,addDoc:S,serverTimestamp:E}},[],import.meta.url),{doc:h,getDoc:p}=await g(async()=>{const{doc:f,getDoc:S}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:f,getDoc:S}},[],import.meta.url),c=await p(h(n,"users",e)),u=c.exists()?c.data().displayName:"Someone",v={twitter:"Twitter",facebook:"Facebook",linkedin:"LinkedIn",copy:"copied",native:"shared"}[s]||"shared",b={userId:t,type:"share",title:"Widget shared! 📤",message:`${u} ${v} your widget "${o}".`,icon:"📤",data:{widgetId:i,sharerId:e,platform:s,action:"view_widget"},read:!1,timestamp:d()};await l(r(n,"notifications"),b),this.log("Share notification created",{widgetOwnerId:t,sharerId:e,widgetId:i,platform:s})}catch(n){this.error("Failed to create share notification",n)}}setupEventListeners(){document.addEventListener("click",async t=>{if(t.target.matches(".follow-btn")){t.preventDefault();const e=t.target.dataset.userId,i=t.target.dataset.following==="true";i?await this.unfollowUser(e):await this.followUser(e),this.updateFollowButton(t.target,!i)}}),document.addEventListener("click",async t=>{if(t.target.matches(".like-btn")){t.preventDefault();const e=t.target.dataset.widgetId,i=t.target.dataset.liked==="true";i?await this.unlikeWidget(e):await this.likeWidget(e),this.updateLikeButton(t.target,!i)}}),document.addEventListener("click",async t=>{if(t.target.matches(".share-btn")){t.preventDefault();const e=t.target.dataset.widgetId,i=t.target.dataset.platform||"native";await this.shareWidget(e,i)}})}updateFollowButton(t,e){t.dataset.following=e.toString(),t.textContent=e?"Following":"Follow",t.className=e?"follow-btn following":"follow-btn"}updateLikeButton(t,e){t.dataset.liked=e.toString(),t.innerHTML=e?"❤️ Liked":"🤍 Like",t.className=e?"like-btn liked":"like-btn"}showToast(t,e="info"){const i=document.createElement("div");i.className=`toast ${e}`,i.innerHTML=`
      <span class="toast-message">${t}</span>
      <button class="toast-close">&times;</button>
    `,(document.getElementById("toast-container")||document.body).appendChild(i),setTimeout(()=>{i.parentNode&&i.remove()},5e3),i.querySelector(".toast-close").addEventListener("click",()=>{i.remove()})}}const V=new j;window.socialFeatures=V;document.addEventListener("DOMContentLoaded",()=>{V.init()});const st=Object.freeze(Object.defineProperty({__proto__:null,SocialFeaturesManager:j},Symbol.toStringTag,{value:"Module"}));
