import{a as h,d as g,_ as w}from"./auth-BZnK8mjA.js";import{p as I}from"./profile-dashboard-manager-BfqszSbI.js";/* empty css              *//* empty css                      */import{getDoc as N,doc as k,query as v,collection as b,where as T,orderBy as P,limit as L,getDocs as x,onSnapshot as q,updateDoc as R}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js";import{onAuthStateChanged as D,signInWithEmailAndPassword as $,createUserWithEmailAndPassword as _,updateProfile as z}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-auth.js";import{r as O,d as H,g as j}from"./cloud-upload-DXsF6I58.js";import"https://www.gstatic.com/firebasejs/11.10.0/firebase-app.js";import"https://www.gstatic.com/firebasejs/11.10.0/firebase-analytics.js";import"https://www.gstatic.com/firebasejs/11.10.0/firebase-storage.js";import"https://www.gstatic.com/firebasejs/11.10.0/firebase-functions.js";const l={log:(a,e=null)=>{console.log(`[MY PROJECTS] ${a}`,e||"")},error:(a,e=null)=>{console.error(`[MY PROJECTS ERROR] ${a}`,e||"")},warn:(a,e=null)=>{console.warn(`[MY PROJECTS WARN] ${a}`,e||"")}};class Q{constructor(){this.currentUser=null,this.userProfile=null,this.timelineUnsubscribe=null,this.widgets=[],this.domElements={},this.initializeDOMElements(),this.setupEventListeners(),this.init()}initializeDOMElements(){this.domElements={userAvatar:document.getElementById("userAvatar"),userName:document.getElementById("userName"),profileAvatar:document.getElementById("profileAvatar"),profileName:document.getElementById("profileName"),profileBio:document.getElementById("profileBio"),widgetsCount:document.getElementById("widgetsCount"),followersCount:document.getElementById("followersCount"),viewsCount:document.getElementById("viewsCount"),profileSection:document.getElementById("profileSection"),authSection:document.getElementById("authSection"),loginForm:document.getElementById("loginForm"),loginEmail:document.getElementById("loginEmail"),loginPassword:document.getElementById("loginPassword"),loginBtn:document.getElementById("loginBtn"),signupForm:document.getElementById("signupForm"),signupEmail:document.getElementById("signupEmail"),signupPassword:document.getElementById("signupPassword"),signupDisplayName:document.getElementById("signupDisplayName"),signupBtn:document.getElementById("signupBtn"),showSignupBtn:document.getElementById("showSignupBtn"),showLoginBtn:document.getElementById("showLoginBtn"),loginFormContainer:document.getElementById("loginFormContainer"),signupFormContainer:document.getElementById("signupFormContainer"),timelineSection:document.getElementById("timelineSection"),refreshTimelineBtn:document.getElementById("refreshTimelineBtn"),widgetsGrid:document.getElementById("widgetsGrid"),toastContainer:document.getElementById("toastContainer")},l.log("DOM elements initialized",Object.keys(this.domElements))}setupEventListeners(){this.domElements.loginForm&&this.domElements.loginForm.addEventListener("submit",i=>{i.preventDefault(),this.handleLogin()}),this.domElements.signupForm&&this.domElements.signupForm.addEventListener("submit",i=>{i.preventDefault(),this.handleSignup()}),this.domElements.showSignupBtn&&this.domElements.showSignupBtn.addEventListener("click",()=>{this.showSignupForm()}),this.domElements.showLoginBtn&&this.domElements.showLoginBtn.addEventListener("click",()=>{this.showLoginForm()}),this.domElements.refreshTimelineBtn&&this.domElements.refreshTimelineBtn.addEventListener("click",()=>{this.refreshTimeline()});const e=document.getElementById("aiAssistantBtn");e&&e.addEventListener("click",()=>{this.openChatbot()});const t=document.getElementById("profileLoginBtn");t&&t.addEventListener("click",()=>{this.handleProfileLogin()}),l.log("Event listeners setup complete")}async init(){l.log("Initializing My Projects Manager"),D(h,async e=>{this.currentUser=e,l.log("Auth state changed",{userId:e?.uid}),e?await this.handleUserLogin(e):await this.handleUserLogout()}),l.log("My Projects Manager initialized - Features ready to initialize")}async handleUserLogin(e){l.log("Handling user login",{uid:e.uid});try{await this.loadUserProfile(e.uid),this.updateUIForLoggedInUser(),l.log("Initializing widget loading feature"),await this.loadUserWidgets(),l.log("Initializing timeline listener feature"),this.setupTimelineListener(),l.log("Initializing profile stats feature"),this.updateProfileStats()}catch(t){l.error("Error handling user login",t),this.showToast("Error loading profile","error")}}async handleUserLogout(){l.log("Handling user logout"),this.userProfile=null,this.widgets=[],this.updateUIForLoggedOutUser(),this.timelineUnsubscribe&&(this.timelineUnsubscribe(),this.timelineUnsubscribe=null)}async loadUserProfile(e){try{l.log("Loading user profile",{userId:e});const t=await N(k(g,"users",e));if(t.exists())this.userProfile=t.data(),l.log("User profile loaded",this.userProfile);else throw new Error("User profile not found")}catch(t){throw l.error("Failed to load user profile",t),t}}updateUIForLoggedInUser(){if(!this.userProfile)return;l.log("Updating UI for logged-in user");const{userAvatar:e,userName:t,profileAvatar:i,profileName:o,profileBio:n}=this.domElements;e&&(e.style.backgroundImage=this.userProfile.photoURL?`url(${this.userProfile.photoURL})`:"",e.innerHTML=this.userProfile.photoURL?"":"👤"),t&&(t.textContent=this.userProfile.displayName||this.userProfile.email?.split("@")[0]||"User"),i&&(i.style.backgroundImage=this.userProfile.photoURL?`url(${this.userProfile.photoURL})`:"",i.innerHTML=this.userProfile.photoURL?"":"👤"),o&&(o.textContent=this.userProfile.displayName||this.userProfile.email?.split("@")[0]||"User"),n&&(n.textContent=this.userProfile.bio||"Welcome to your creative dashboard!"),this.domElements.profileSection&&(this.domElements.profileSection.style.display="block"),this.domElements.authSection&&(this.domElements.authSection.style.display="none")}updateUIForLoggedOutUser(){l.log("Updating UI for logged-out user");const{userAvatar:e,userName:t,profileName:i,profileBio:o}=this.domElements;e&&(e.style.backgroundImage="",e.innerHTML="👤"),t&&(t.textContent="Guest"),i&&(i.textContent="Welcome Guest"),o&&(o.textContent="Sign in to access your projects and connect with the community."),this.domElements.profileSection&&(this.domElements.profileSection.style.display="none"),this.domElements.authSection&&(this.domElements.authSection.style.display="block")}async loadUserWidgets(){try{if(!this.currentUser)return;l.log("Loading user widgets",{userId:this.currentUser.uid});let e;try{e=v(b(g,"widgets"),T("userId","==",this.currentUser.uid),P("createdAt","desc"),L(20));const t=await x(e);this.widgets=[],t.forEach(i=>{const o={id:i.id,...i.data()};this.widgets.push(o)})}catch(t){l.warn("Index not available, using fallback query",t),e=v(b(g,"widgets"),T("userId","==",this.currentUser.uid),L(20));const i=await x(e);this.widgets=[],i.forEach(o=>{const n={id:o.id,...o.data()};this.widgets.push(n)}),this.widgets.sort((o,n)=>{const r=o.createdAt?.toDate?.()||new Date(0);return(n.createdAt?.toDate?.()||new Date(0))-r})}l.log("User widgets loaded",{count:this.widgets.length}),this.renderWidgets()}catch(e){l.error("Failed to load user widgets",e),e.code==="failed-precondition"?this.showToast("Database index is being created. Please refresh in a moment.","warning"):this.showToast("Failed to load widgets. Please check your connection.","error")}}renderWidgets(){const{widgetsGrid:e}=this.domElements;if(e){if(this.widgets.length===0){e.innerHTML=`
        <div class="neo-card" style="text-align: center; color: #a0a0a0;">
          <div style="font-size: 3rem; margin-bottom: 1rem;">🎨</div>
          <h3>No widgets yet</h3>
          <p>Create your first widget in the Widget Studio</p>
          <a href="widget_studio.html" class="quick-action-btn" style="margin-top: 1rem; display: inline-block;">Get Started</a>
        </div>
      `;return}e.innerHTML="",this.widgets.forEach(t=>{const i=this.createWidgetCard(t);e.appendChild(i)})}}createWidgetCard(e){const t=document.createElement("div");return t.className="neo-card",t.style.display="flex",t.style.flexDirection="column",t.style.gap="8px",t.innerHTML=`
      <div style="display:flex; align-items:flex-start; justify-content:space-between; gap: 12px;">
        <div>
          <h3 style="margin:0 0 6px 0">${e.title||"Untitled Widget"}</h3>
          <div style="font-size:.85rem; color:#a0a0a0; margin-bottom:8px">Slot ${e.slot||"?"} • ${e.files?.length||0} files</div>
          <p style="margin:0; color:#a0a0a0">${e.description||"No description"}</p>
        </div>
        <div style="display:flex; gap:6px; flex-wrap:wrap">
          <button class="quick-action-btn" data-action="preview" data-id="${e.id}">👁️ Preview</button>
          <button class="quick-action-btn" data-action="urls" data-id="${e.id}">🔗 Links</button>
        </div>
      </div>
      <div style="display:flex; gap:8px; flex-wrap:wrap; margin-top: 8px;">
        <button class="quick-action-btn" data-action="edit" data-id="${e.id}">✏️ Edit</button>
        <button class="quick-action-btn" data-action="reupload" data-id="${e.id}">🔁 Reupload</button>
        <button class="quick-action-btn" data-action="move" data-id="${e.id}">📦 Move</button>
        <button class="quick-action-btn" data-action="delete" data-id="${e.id}" style="border-color:#ef4444; color:#ef4444">🗑️ Delete</button>
      </div>
    `,t.querySelectorAll("button[data-action]").forEach(i=>{i.addEventListener("click",o=>{const n=o.currentTarget.getAttribute("data-action"),r=o.currentTarget.getAttribute("data-id"),d=this.widgets.find(m=>m.id===r);if(d)switch(n){case"preview":window.open(d.files?.[0]?.downloadURL||"#","_blank");break;case"urls":this.showDownloadUrls(d);break;case"edit":this.openEditModal(d);break;case"reupload":this.openReuploadModal(d);break;case"move":this.openMoveModal(d);break;case"delete":this.openDeleteModal(d);break}})}),t}openEditModal(e){const t=document.getElementById("editWidgetModal");if(!t)return;t.style.display="flex",this.editingWidgetId=e.id;const i=document.getElementById("editWidgetTitle"),o=document.getElementById("editWidgetDescription"),n=document.getElementById("editWidgetTags");i&&(i.value=e.title||""),o&&(o.value=e.description||""),n&&(n.value=e.tags||"");const r=document.getElementById("editWidgetClose");r&&(r.onclick=()=>t.style.display="none");const d=document.getElementById("editWidgetForm");d&&!d._wired&&(d.addEventListener("submit",async m=>{m.preventDefault(),await this.saveWidgetEdits()}),d._wired=!0)}async saveWidgetEdits(){try{const e=this.editingWidgetId,t=document.getElementById("editWidgetTitle").value.trim(),i=document.getElementById("editWidgetDescription").value.trim(),o=document.getElementById("editWidgetTags").value.trim();await(await w(()=>import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js"),[],import.meta.url)).updateDoc((await w(()=>import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js"),[],import.meta.url)).doc(g,"widgets",e),{title:t,description:i,tags:o,updatedAt:(await w(()=>import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js"),[],import.meta.url)).serverTimestamp?.()||new Date});const n=this.widgets.find(r=>r.id===e);n&&(n.title=t,n.description=i,n.tags=o),this.renderWidgets(),document.getElementById("editWidgetModal").style.display="none",this.showToast("Widget updated","success")}catch(e){l.error("Failed to save edits",e),this.showToast("Failed to save changes","error")}}openReuploadModal(e){const t=document.getElementById("reuploadModal");if(!t)return;t.style.display="flex",this.reuploadWidgetId=e.id;const i=document.getElementById("reuploadClose");i&&(i.onclick=()=>t.style.display="none");const o=document.getElementById("confirmReuploadBtn");o&&!o._wired&&(o.addEventListener("click",()=>this.performReupload()),o._wired=!0)}async performReupload(){const e=document.getElementById("reuploadFileInput");if(!e||!e.files||e.files.length===0){this.showToast("Select files to upload","warning");return}const t=document.getElementById("reuploadProgress"),i=document.getElementById("reuploadProgressFill"),o=document.getElementById("reuploadProgressText");t.style.display="block",i.style.width="10%",o.textContent="Preparing...";try{const n=await O(this.reuploadWidgetId,Array.from(e.files));i.style.width="100%",o.textContent="Uploaded";const r=this.widgets.find(d=>d.id===this.reuploadWidgetId);r&&(r.files=n.files||r.files),this.renderWidgets(),this.showToast("Files reuploaded","success"),document.getElementById("reuploadModal").style.display="none",e.value=""}catch(n){l.error("Reupload failed",n),this.showToast("Reupload failed","error")}}openMoveModal(e){const t=document.getElementById("moveModal");if(!t)return;t.style.display="flex",this.movingWidgetId=e.id;const i=document.getElementById("moveSlotSelect");i&&(i.value=String(e.slot||1));const o=document.getElementById("moveClose");o&&(o.onclick=()=>t.style.display="none");const n=document.getElementById("confirmMoveBtn");n&&!n._wired&&(n.addEventListener("click",()=>this.performMove()),n._wired=!0)}async performMove(){try{const e=this.movingWidgetId,t=parseInt(document.getElementById("moveSlotSelect").value,10),{doc:i,updateDoc:o}=await w(async()=>{const{doc:r,updateDoc:d}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:r,updateDoc:d}},[],import.meta.url);await o(i(g,"widgets",e),{slot:t,updatedAt:new Date});const n=this.widgets.find(r=>r.id===e);n&&(n.slot=t),this.renderWidgets(),document.getElementById("moveModal").style.display="none",this.showToast("Widget moved","success")}catch(e){l.error("Move failed",e),this.showToast("Move failed","error")}}openDeleteModal(e){const t=document.getElementById("deleteModal");if(!t)return;t.style.display="flex",this.deletingWidgetId=e.id;const i=document.getElementById("deleteClose");i&&(i.onclick=()=>t.style.display="none");const o=document.getElementById("cancelDeleteBtn");o&&(o.onclick=()=>t.style.display="none");const n=document.getElementById("confirmDeleteBtn");n&&!n._wired&&(n.addEventListener("click",()=>this.performDelete()),n._wired=!0)}async performDelete(){try{const e=this.deletingWidgetId;await H(e),this.widgets=this.widgets.filter(t=>t.id!==e),this.renderWidgets(),document.getElementById("deleteModal").style.display="none",this.showToast("Widget deleted","success")}catch(e){l.error("Delete failed",e),this.showToast("Delete failed","error")}}async showDownloadUrls(e){try{const i=(await j(e.id)).downloadUrls||[];if(i.length===0){this.showToast("No files available","info");return}const o=i.map(d=>`<div style="display:flex; justify-content:space-between; gap:8px; align-items:center; margin:6px 0"><span style="color:#a0a0a0">${d.fileName}</span><a class="quick-action-btn" href="${d.downloadURL}" target="_blank">Download</a></div>`).join(""),n=document.createElement("div");n.innerHTML=o;const r=document.createElement("div");r.className="toast info",r.appendChild(n),this.domElements.toastContainer.appendChild(r),setTimeout(()=>r.remove(),6e3)}catch(t){l.error("Failed to fetch URLs",t),this.showToast("Failed to fetch links","error")}}setupTimelineListener(){if(this.currentUser){l.log("Setting up timeline listener",{userId:this.currentUser.uid}),this.timelineUnsubscribe&&this.timelineUnsubscribe();try{const e=v(b(g,"notifications"),T("userId","==",this.currentUser.uid),P("timestamp","desc"),L(10));this.timelineUnsubscribe=q(e,t=>{this.renderTimeline(t.docs.map(i=>({id:i.id,...i.data()})))},t=>{l.error("Timeline listener error",t),this.renderTimeline([])})}catch(e){l.error("Failed to setup timeline listener",e),this.renderTimeline([])}}}renderTimeline(e){const{timelineSection:t}=this.domElements;if(t){if(e.length===0){t.innerHTML=`
        <div class="timeline-event">
          <div class="timeline-event-title">No recent activity</div>
          <div class="timeline-event-content">
            Your activity timeline will appear here as you create widgets and interact with the community.
          </div>
        </div>
      `;return}t.innerHTML="",e.forEach(i=>{const o=this.createTimelineEvent(i);t.appendChild(o)})}}createTimelineEvent(e){const t=document.createElement("div");t.className="timeline-event";const i=e.timestamp?.toDate?new Date(e.timestamp.toDate()).toLocaleString():"Just now";return t.innerHTML=`
      <div class="timeline-event-title">${e.title||"Activity"}</div>
      <div class="timeline-event-content">
        ${e.message||""}
        <div style="font-size: 0.8rem; color: #666; margin-top: 0.5rem;">${i}</div>
      </div>
    `,t}updateProfileStats(){if(!this.userProfile)return;const{widgetsCount:e,followersCount:t,viewsCount:i}=this.domElements;e&&(e.textContent=this.widgets.length||0),t&&(t.textContent=this.userProfile.followers?.length||0),i&&(i.textContent=this.userProfile.stats?.totalViews||0)}async handleLogin(){try{const e=this.domElements.loginEmail.value,t=this.domElements.loginPassword.value;if(!e||!t){this.showToast("Please fill in all fields","warning");return}l.log("Attempting login",{email:e}),this.setLoginButtonLoading(!0),await $(h,e,t),this.showToast("Login successful!","success"),this.clearLoginForm()}catch(e){l.error("Login failed",e),this.showToast(this.getAuthErrorMessage(e),"error")}finally{this.setLoginButtonLoading(!1)}}async handleSignup(){try{const e=this.domElements.signupEmail.value,t=this.domElements.signupPassword.value,i=this.domElements.signupDisplayName.value;if(!e||!t){this.showToast("Please fill in email and password","warning");return}if(t.length<6){this.showToast("Password must be at least 6 characters","warning");return}l.log("Attempting signup",{email:e}),this.setSignupButtonLoading(!0);const n=(await _(h,e,t)).user;l.log("User created successfully",{uid:n.uid}),i&&(await z(n,{displayName:i}),l.log("Display name updated",{displayName:i})),this.showToast("Account created successfully! Welcome to inQ!","success"),this.clearSignupForm(),setTimeout(()=>{this.showLoginForm()},2e3)}catch(e){l.error("Signup failed",e),this.showToast(this.getSignupErrorMessage(e),"error")}finally{this.setSignupButtonLoading(!1)}}showSignupForm(){l.log("Showing signup form"),this.domElements.loginFormContainer&&(this.domElements.loginFormContainer.style.display="none"),this.domElements.signupFormContainer&&(this.domElements.signupFormContainer.style.display="block"),this.domElements.showSignupBtn&&this.domElements.showSignupBtn.parentElement&&(this.domElements.showSignupBtn.parentElement.style.display="none"),this.domElements.showLoginBtn&&this.domElements.showLoginBtn.parentElement&&(this.domElements.showLoginBtn.parentElement.style.display="block")}showLoginForm(){l.log("Showing login form"),this.domElements.signupFormContainer&&(this.domElements.signupFormContainer.style.display="none"),this.domElements.loginFormContainer&&(this.domElements.loginFormContainer.style.display="block"),this.domElements.showLoginBtn&&this.domElements.showLoginBtn.parentElement&&(this.domElements.showLoginBtn.parentElement.style.display="none"),this.domElements.showSignupBtn&&this.domElements.showSignupBtn.parentElement&&(this.domElements.showSignupBtn.parentElement.style.display="block")}setLoginButtonLoading(e){const{loginBtn:t}=this.domElements;t&&(t.disabled=e,t.textContent=e?"Signing In...":"Sign In")}clearLoginForm(){this.domElements.loginEmail&&(this.domElements.loginEmail.value=""),this.domElements.loginPassword&&(this.domElements.loginPassword.value="")}setSignupButtonLoading(e){const{signupBtn:t}=this.domElements;t&&(t.disabled=e,t.textContent=e?"Creating Account...":"Create Account")}clearSignupForm(){this.domElements.signupEmail&&(this.domElements.signupEmail.value=""),this.domElements.signupPassword&&(this.domElements.signupPassword.value=""),this.domElements.signupDisplayName&&(this.domElements.signupDisplayName.value="")}getSignupErrorMessage(e){return{"auth/email-already-in-use":"An account with this email already exists.","auth/invalid-email":"Please enter a valid email address.","auth/weak-password":"Password is too weak. Please choose a stronger password.","auth/network-request-failed":"Network error. Please check your connection.","auth/too-many-requests":"Too many requests. Please try again later."}[e.code]||"Account creation failed. Please try again."}getAuthErrorMessage(e){return{"auth/user-not-found":"No account found with this email.","auth/wrong-password":"Incorrect password.","auth/invalid-email":"Invalid email address.","auth/user-disabled":"This account has been disabled.","auth/too-many-requests":"Too many failed attempts. Try again later."}[e.code]||"Login failed. Please try again."}refreshTimeline(){l.log("Refreshing timeline"),this.timelineUnsubscribe&&this.timelineUnsubscribe(),this.setupTimelineListener(),this.showToast("Timeline refreshed!","success")}openChatbot(){l.log("Opening chatbot modal");const e=document.getElementById("chatbotModal");e?(e.style.display="flex",this.showToast("AI Assistant opened!","info"),setTimeout(()=>{const t=document.getElementById("chatInput");t&&t.focus()},100)):(l.error("Chatbot modal not found"),this.showToast("AI Assistant not available","error"))}handleProfileLogin(){l.log("Handling profile login button click");const e=document.getElementById("authModal");e?(e.style.display="block",document.body.style.overflow="hidden"):this.showToast("Login system initializing...","info")}showToast(e,t="info"){const{toastContainer:i}=this.domElements;if(!i)return;const o=document.createElement("div");o.className=`toast ${t}`,o.innerHTML=`
      <div class="toast-icon">${this.getToastIcon(t)}</div>
      <div class="toast-content">
        <div class="toast-message">${e}</div>
      </div>
      <button class="toast-close">&times;</button>
    `,i.appendChild(o),setTimeout(()=>{o.parentNode&&o.parentNode.removeChild(o)},5e3),o.querySelector(".toast-close").addEventListener("click",()=>{o.parentNode&&o.parentNode.removeChild(o)})}getToastIcon(e){const t={success:"✅",error:"❌",warning:"⚠️",info:"ℹ️"};return t[e]||t.info}}document.addEventListener("DOMContentLoaded",()=>{l.log("DOM Content Loaded - Starting My Projects initialization");try{const a=new Q;window.myProjectsManager=a,l.log("My Projects page ready")}catch(a){l.error("Failed to initialize My Projects",a)}});window.openChatbot=function(){window.myProjectsManager?window.myProjectsManager.openChatbot():console.warn("[MY PROJECTS] MyProjectsManager not found")};const s={log:(a,e=null)=>{console.log(`[TIMELINE DEBUG] ${a}`,e||"")},error:(a,e=null)=>{console.error(`[TIMELINE DEBUG ERROR] ${a}`,e||"")},warn:(a,e=null)=>{console.warn(`[TIMELINE DEBUG WARN] ${a}`,e||"")}};let p=[],B=!1,E=null;function U(){return new URLSearchParams(window.location.search).get("user")}function S(){const a=U(),e=h.currentUser;return a&&e&&a!==e.uid}async function G(a=null){s.log("Timeline Manager: Loading timeline widgets from Firestore");try{let e=a;if(!e){const n=h.currentUser;if(!n){s.log("Timeline Manager: User not authenticated, showing guest state"),p=[];return}e=n.uid}s.log("Timeline Manager: Loading widgets for user",{uid:e});const t=b(g,"widgets"),i=v(t,T("userId","==",e)),o=await x(i);s.log("Timeline Manager: Widgets query executed",{targetUserId:e,querySnapshotSize:o.size}),p=o.docs.map(n=>{const r=n.data();return s.log("Timeline Manager: Processing widget",{id:n.id,title:r.title,slot:r.slot,userId:r.userId,fileCount:r.files?.length||0}),{id:n.id,title:r.title||"Untitled Widget",desc:r.description||"No description available",slot:r.slot,files:r.files||[],createdAt:r.createdAt}}),s.log("Timeline Manager: Widgets loaded successfully",{count:p.length,widgets:p.map(n=>({id:n.id,title:n.title,slot:n.slot}))})}catch(e){s.error("Timeline Manager: Failed to load widgets",e),e.message!=="Not logged in."&&console.error("Timeline Manager: Widget loading error",e),p=[]}}async function u(a=null){s.log("Timeline Manager: Rendering all widget cards"),await G(a);const e=document.querySelectorAll(".timeline-event");if(s.log("Timeline Manager: Found timeline events",{count:e.length}),e.length===0){s.warn("Timeline Manager: No timeline events found in DOM");return}e.forEach((t,i)=>{const o=t.querySelector(".timeline-event-card");o&&(s.log("Timeline Manager: Removing old card",{index:i}),o.remove());const n=p[i],r=document.createElement("div");if(r.className="timeline-event-card",n)if(s.log("Timeline Manager: Rendering project card",{index:i,projectId:n.id,title:n.title}),E===n.id)s.log("Timeline Manager: Rendering edit mode for card",{projectId:n.id}),r.innerHTML=`
          <input class="widget-edit-title" value="${n.title||""}" style="width:100%;margin-bottom:8px;" />
          <textarea class="widget-edit-desc" style="width:100%;margin-bottom:8px;">${n.desc||""}</textarea>
          <button class="widget-save-btn">💾 Save</button>
          <button class="widget-cancel-btn">Cancel</button>
        `,r.querySelector(".widget-save-btn").addEventListener("click",async()=>{s.log("Timeline Manager: Save button clicked",{projectId:n.id});const d=r.querySelector(".widget-edit-title").value,m=r.querySelector(".widget-edit-desc").value;try{const f=k(g,"widgets",n.id);await R(f,{title:d,description:m,updatedAt:new Date}),s.log("Timeline Manager: Widget updated successfully",{projectId:n.id}),E=null,u()}catch(f){s.error("Timeline Manager: Failed to update widget",f),alert("Failed to update widget: "+f.message)}}),r.querySelector(".widget-cancel-btn").addEventListener("click",()=>{s.log("Timeline Manager: Cancel button clicked"),E=null,u()});else{r.innerHTML=`
          <div class="quip-preview" style="margin-bottom:8px;position:relative;">
            <iframe class="quip-iframe webgl-enabled" title="Quip Preview - ${n.title||"Untitled Quip"}" style="width:100%;height:280px;border:0;border-radius:12px;background:#0a0a0a;"></iframe>
            <div class="quip-overlay" style="position:absolute;top:8px;right:8px;opacity:0.8;">
              <span class="quip-type-badge" style="background:rgba(0,240,255,0.2);color:#00f0ff;padding:4px 8px;border-radius:12px;font-size:0.8rem;font-family:JetBrains Mono;">QUIP</span>
            </div>
          </div>
          <div class="quip-info">
            <h3 style="color:#00f0ff;margin:0 0 8px 0;font-family:JetBrains Mono;">${n.title||"Untitled Quip"}</h3>
            <p style="color:#a0a0a0;margin:0 0 12px 0;line-height:1.4;">${n.desc||"No description available"}</p>
            <div class="quip-actions" style="display:flex;gap:8px;">
              <button class="quip-interact-btn" style="background:rgba(0,240,255,0.1);border:1px solid #00f0ff;color:#00f0ff;padding:6px 12px;border-radius:6px;cursor:pointer;font-size:0.9rem;">🎮 Interact</button>
              <button class="quip-edit-btn" style="background:rgba(255,0,255,0.1);border:1px solid #ff00ff;color:#ff00ff;padding:6px 12px;border-radius:6px;cursor:pointer;font-size:0.9rem;">✏️ Edit</button>
            </div>
          </div>
        `;const d=r.querySelector(".quip-iframe");d.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms allow-webgl allow-pointer-lock"),I&&typeof I.applyDashboardSettings=="function"&&I.applyDashboardSettings(d,{borderColor:"#00f0ff",borderWidth:"2px",borderRadius:"12px",shadow:"0 0 20px rgba(0, 240, 255, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.1)"}),J(n,d).catch(m=>{s.error("Timeline Manager: Failed to load quip into iframe",m),d.replaceWith(Object.assign(document.createElement("div"),{className:"quip-preview-error",textContent:"Failed to load quip preview",style:"padding:20px;text-align:center;color:#ff4444;background:rgba(255,68,68,0.1);border-radius:8px;"}))}),r.querySelector(".quip-interact-btn").addEventListener("click",()=>{s.log("Timeline Manager: Quip interact button clicked",{projectId:n.id}),d.focus(),d.style.borderColor="#ffff00",setTimeout(()=>{d.style.borderColor="#00f0ff"},2e3)}),r.querySelector(".quip-edit-btn").addEventListener("click",()=>{s.log("Timeline Manager: Quip edit button clicked",{projectId:n.id}),E=n.id,u()})}else s.log("Timeline Manager: Rendering empty slot",{index:i}),r.innerHTML=`
        <div style="text-align: center; padding: 20px;">
          <div style="font-size: 3rem; margin-bottom: 10px;">+</div>
          <p style="color: #aaa; margin: 0;">Empty Slot</p>
        </div>
      `;t.appendChild(r)}),s.log("Timeline Manager: All widget cards rendered")}async function J(a,e){try{const t=Array.isArray(a.files)?a.files:[];if(t.length===0){s.warn("Timeline Manager: Quip has no files",{projectId:a.id});return}const i={};t.forEach(c=>{c&&c.fileName&&c.downloadURL&&(i[c.fileName]=c.downloadURL)}),s.log("Timeline Manager: Quip file map created",{fileCount:Object.keys(i).length,files:Object.keys(i)});const o=Object.keys(i).find(c=>/index\.html?$/i.test(c))||Object.keys(i).find(c=>/\.html?$/i.test(c));if(!o){s.warn("Timeline Manager: No HTML file found for quip",{projectId:a.id});return}s.log("Timeline Manager: Loading quip HTML",{htmlFileName:o});let n;try{if(n=await fetch(i[o]),!n.ok)throw new Error(`HTTP ${n.status}: ${n.statusText}`)}catch(c){s.error("Timeline Manager: Failed to fetch quip HTML",{url:i[o],error:c.message}),e.srcdoc=`
        <div style="padding: 20px; text-align: center; color: #ff4444; background: rgba(255,68,68,0.1); border-radius: 8px; font-family: Arial, sans-serif;">
          <h3>⚠️ Preview Unavailable</h3>
          <p>Unable to load widget preview</p>
          <small>Error: ${c.message}</small>
        </div>
      `;return}const r=await n.text(),d=c=>{if(!c)return null;const y=c.replace(/^\.\//,"").replace(/^\//,"");if(i[y])return i[y];const M=y.split("/").pop();return i[M]||null};let m=r.replace(/(href|src)=["']([^"']+)["']/gi,(c,y,M)=>{const C=d(M);return C?`${y}="${C}"`:c});const f=`
      <script>
        // WebGL context optimization
        if (typeof window !== 'undefined') {
          window.addEventListener('load', () => {
            // Enable WebGL context preservation
            const canvas = document.querySelector('canvas');
            if (canvas) {
              canvas.style.imageRendering = 'pixelated';
              canvas.style.imageRendering = 'crisp-edges';
            }
            
            // Performance monitoring for quips
            if (window.performance && window.performance.mark) {
              window.performance.mark('quip-loaded-${a.id}');
            }
          });
        }
      <\/script>
    `;m=m.replace(/<\/body>/i,`${f}</body>`);const F=new Blob([m],{type:"text/html"}),A=URL.createObjectURL(F);e.src=A,s.log("Timeline Manager: Quip iframe set with enhanced blob URL")}catch(t){s.error("Timeline Manager: Error preparing quip iframe",t),e.srcdoc=`
      <div style="padding: 20px; text-align: center; color: #ff4444; background: rgba(255,68,68,0.1); border-radius: 8px; font-family: Arial, sans-serif;">
        <h3>⚠️ Preview Error</h3>
        <p>Unable to load widget preview</p>
        <small>Error: ${t.message}</small>
      </div>
    `}}async function W(){s.log("Timeline Manager: Initializing timeline functionality");const a=document.getElementById("editProfileQuickBtn");a?(s.log("Timeline Manager: Setting up edit profile button handler"),a.addEventListener("click",async()=>{if(s.log("Timeline Manager: Edit profile button clicked, toggling widget edit mode"),!h.currentUser){s.log("Timeline Manager: User not authenticated, showing login prompt"),alert("Please log in to edit your profile and manage your widgets.");return}B=!B,s.log("Timeline Manager: Widget edit mode toggled",{widgetEditMode:B}),S()?s.log("Timeline Manager: Cannot edit other user's widgets"):u()})):s.warn("Timeline Manager: Edit profile button not found"),s.log("Timeline Manager: Performing initial render");const e=U();e&&(s.log("Timeline Manager: Loading timeline for specific user",{targetUserId:e}),S()&&console.log("👤 [TIMELINE] Viewing another user's widget timeline")),u(e),s.log("Timeline Manager: Setting up auth state listener"),D(h,t=>{if(t){s.log("Timeline Manager: User authenticated, re-rendering timeline",{uid:t.uid});const i=U();u(i)}else s.log("Timeline Manager: User signed out, clearing timeline"),p=[],u()}),s.log("Timeline Manager: Initialization complete")}document.addEventListener("DOMContentLoaded",async function(){s.log("Timeline Manager: DOM Content Loaded - Starting initialization"),await W()});function V(a,e,t){if(s.log("Timeline Manager: Rendering widget card",{slotIndex:t,projectId:e?.id,hasProject:!!e}),!a){s.warn("Timeline Manager: No event element provided for widget card");return}const i=a.querySelector(".timeline-event-card");i&&i.remove();const o=document.createElement("div");if(o.className="timeline-event-card",e&&e.files&&e.files.length>0){const n=Y(e.files);n?o.innerHTML=`
        <div class="widget-preview">
          <iframe 
            src="${n.downloadURL}" 
            frameborder="0"
            loading="lazy"
            style="width: 100%; height: 200px; border-radius: 8px;"
          ></iframe>
        </div>
        <div class="widget-info">
          <h4>${e.title||"Untitled Widget"}</h4>
          <p>${e.description||"No description available"}</p>
          <div class="widget-meta">
            <span class="widget-author">by ${e.author||"Unknown"}</span>
            <span class="widget-date">${new Date(e.createdAt?.toDate?.()||e.createdAt).toLocaleDateString()}</span>
          </div>
        </div>
      `:o.innerHTML=`
        <div class="widget-placeholder">
          <div class="placeholder-icon">📦</div>
          <h4>${e.title||"Widget"}</h4>
          <p>No preview available</p>
        </div>
      `}else o.innerHTML=`
      <div class="empty-slot">
        <div class="empty-icon">➕</div>
        <h4>Empty Slot ${t+1}</h4>
        <p>Upload a widget to fill this slot</p>
      </div>
    `;a.appendChild(o),s.log("Timeline Manager: Widget card rendered successfully",{slotIndex:t})}function Y(a){if(!Array.isArray(a)||a.length===0)return null;const e=a.find(t=>t.fileName&&/index\.html?$/i.test(t.fileName));return e||a.find(t=>t.fileName&&/\.html?$/i.test(t.fileName))}window.timelineManager={renderAllWidgetCards:u,renderWidgetCard:V,initializeTimeline:W};s.log("Timeline Manager: Script loaded successfully");console.log("[CHATBOT] Chatbot module loaded");window.initializeChatbot=function(){console.log("[CHATBOT] initializeChatbot called")};
