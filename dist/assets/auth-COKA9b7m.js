const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./widget-upload-EdH-RL5r.js","./cloud-upload-DzQTDkpW.js","./firebase-core-BO8UvLyb.js"])))=>i.map(i=>d[i]);
import{_ as ee}from"./timeline-manager-B2jLQ0HO.js";import{auth as h,db as d,storage as R}from"./firebase-core-BO8UvLyb.js";import{signOut as H,onAuthStateChanged as G,GoogleAuthProvider as Q,GithubAuthProvider as Y,sendPasswordResetEmail as te,createUserWithEmailAndPassword as j,signInWithEmailAndPassword as K,sendEmailVerification as oe,signInWithPopup as X}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-auth.js";import{getDoc as T,doc as g,serverTimestamp as m,setDoc as I,updateDoc as b,arrayUnion as _,arrayRemove as V,addDoc as ie,collection as N,query as z,where as x,getDocs as se,orderBy as ae,limit as ne,onSnapshot as re}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js";import{ref as q,uploadBytes as M,getDownloadURL as le}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-storage.js";import"./profile-dashboard-manager-DumQz_VG.js";import"https://www.gstatic.com/firebasejs/11.10.0/firebase-app.js";import"https://www.gstatic.com/firebasejs/11.10.0/firebase-analytics.js";class de{constructor(){this.currentUser=null,this.userProfile=null,this.isLoading=!1,this.authStateListeners=[],this.debugMode=!0,this.hasShownWelcomeThisSession=!1,this.domElements={},this.notificationUnsubscribe=null,document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{this.initializeDOMElements()}):this.initializeDOMElements()}log(e,t=null){this.debugMode&&console.log(`[SOCIAL AUTH] ${e}`,t||"")}error(e,t=null){console.error(`[SOCIAL AUTH ERROR] ${e}`,t||"")}initializeDOMElements(){this.log("Initializing DOM element references"),this.domElements={authModal:document.getElementById("authModal"),authCloseBtn:document.querySelector(".auth-close-button"),loginForm:document.getElementById("loginForm"),signUpForm:document.getElementById("signUpForm"),showSignUp:document.getElementById("showSignUp"),showLogin:document.getElementById("showLogin"),authModalTitle:document.getElementById("authModalTitle"),googleLoginBtn:document.getElementById("googleLoginBtn"),githubLoginBtn:document.getElementById("githubLoginBtn"),profilePicContainer:document.querySelector(".profile-pic-container"),profileName:document.querySelector(".profile-name"),profileBio:document.querySelector(".profile-bio"),profileLvl:document.getElementById("profileLvl"),profileType:document.getElementById("profileType"),profileRole:document.getElementById("profileRole"),profileStatusIndicator:document.getElementById("profileStatusIndicator"),profileStatus:document.getElementById("profileStatus"),sidebarAvatar:document.querySelector(".sidebar-avatar"),sidebarUserName:document.querySelector(".sidebar-user-name"),sidebarUserEmail:document.querySelector(".sidebar-user-email"),sidebarUserStatus:document.querySelector(".sidebar-user-status"),sidebarStatusDot:document.querySelector(".status-dot"),sidebarLoginBtn:document.getElementById("sidebarLoginBtn"),sidebarUserActions:document.getElementById("sidebarUserActions"),sidebarEditProfileBtn:document.getElementById("sidebarEditProfileBtn"),sidebarLogoutBtn:document.getElementById("sidebarLogoutBtn"),sidebarStats:document.querySelector(".sidebar-stats"),sidebarLvl:document.getElementById("sidebarLvl"),sidebarType:document.getElementById("sidebarType"),sidebarRole:document.getElementById("sidebarRole"),notificationCount:document.getElementById("notificationCount"),notificationList:document.getElementById("notificationList"),markAllReadBtn:document.getElementById("markAllReadBtn")},this.log("DOM elements initialized",Object.keys(this.domElements))}async init(){this.log("Initializing Social Auth Manager"),G(h,async e=>{this.currentUser=e,this.log("Auth state changed",{userId:e?.uid}),e?await this.handleUserLogin(e):await this.handleUserLogout(),this.authStateListeners.forEach(t=>t(e)),this.dispatchAuthStateEvent(e)}),this.setupEventListeners(),this.log("Social Auth Manager initialized"),window.debugAuthState=()=>{console.log("[AUTH DEBUG] Current auth state:",{currentUser:this.currentUser?.uid,userProfile:this.userProfile,isLoading:this.isLoading,hasShownWelcome:this.hasShownWelcomeThisSession})}}dispatchAuthStateEvent(e,t=null){const o=e&&!this.hasShownWelcomeThisSession;e&&(this.hasShownWelcomeThisSession=!0);const a=new CustomEvent("auth-state-changed",{detail:{user:e,profile:t||this.userProfile,isNewLogin:o,timestamp:Date.now()}});window.dispatchEvent(a),this.log("Auth state change event dispatched",{userId:e?.uid,isNewLogin:o,hasProfile:!!t})}async registerUser(e){try{this.isLoading=!0,this.log("Starting user registration",{email:e.email});const o=(await j(h,e.email,e.password)).user;await oe(o);const a={uid:o.uid,email:e.email,displayName:e.displayName||e.email.split("@")[0],bio:e.bio||"Welcome to inque! 🚀",photoURL:e.photoURL||this.getDefaultAvatar(),username:e.username||this.generateUsername(e.email),level:1,experience:0,type:"NEWB",role:"USER",followers:[],following:[],widgets:[],socialLinks:{twitter:e.twitter||"",instagram:e.instagram||"",github:e.github||"",website:e.website||""},preferences:{theme:"auto",notifications:!0,privacy:"public",language:"en"},stats:{widgetsCreated:0,followersCount:0,followingCount:0,totalViews:0,totalLikes:0},createdAt:m(),lastActive:m(),isVerified:!1,isPremium:!1};return await I(g(d,"users",o.uid),a),this.log("User profile created successfully"),await this.createNotification(o.uid,{type:"welcome",title:"Welcome to inque! 🎉",message:"Your account has been created successfully. Start by uploading your first widget!",icon:"🎉",data:{action:"upload_widget"}}),await this.createDefaultWidgetSlots(o.uid),this.log("Registration completed successfully"),{success:!0,user:o,profile:a}}catch(t){return this.error("Registration failed",t),{success:!1,error:this.getUserFriendlyError(t)}}finally{this.isLoading=!1}}async loginUser(e){try{this.isLoading=!0,this.log("Starting user login",{email:e.email});const o=(await K(h,e.email,e.password)).user;return await b(g(d,"users",o.uid),{lastActive:m()}),await this.createNotification(o.uid,{type:"login",title:"Welcome back! 👋",message:"You've successfully logged into your account.",icon:"🔐",data:{action:"dashboard"}}),this.log("Login completed successfully"),{success:!0,user:o}}catch(t){return this.error("Login failed",t),{success:!1,error:this.getUserFriendlyError(t)}}finally{this.isLoading=!1}}async loginWithProvider(e){try{this.isLoading=!0,this.log("Starting social login",{provider:e});let t;switch(e){case"google":t=new Q;break;case"github":t=new Y;break;default:throw new Error("Unsupported provider")}const a=(await X(h,t)).user;return(await T(g(d,"users",a.uid))).exists()?await b(g(d,"users",a.uid),{lastActive:m()}):await this.createSocialUserProfile(a,e),this.log("Social login completed successfully"),{success:!0,user:a}}catch(t){return this.error("Social login failed",t),{success:!1,error:this.getUserFriendlyError(t)}}finally{this.isLoading=!1}}async uploadWidget(e){if(this.log("Widget upload requested, delegating to WidgetUploadManager"),!window.widgetUploadManager){const{default:t}=await ee(async()=>{const{default:o}=await import("./widget-upload-EdH-RL5r.js");return{default:o}},__vite__mapDeps([0,1,2]),import.meta.url);window.widgetUploadManager=t}return await window.widgetUploadManager.handleWidgetUpload(e)}async followUser(e){try{if(!this.currentUser)throw new Error("User must be logged in");const t=this.currentUser.uid;return await b(g(d,"users",t),{following:_(e)}),await b(g(d,"users",e),{followers:_(t)}),await this.createNotification(e,{type:"follow",title:"New follower! 👥",message:`${this.userProfile?.displayName||"Someone"} started following you.`,icon:"👥",data:{followerId:t,action:"view_profile"}}),this.log("User followed successfully"),{success:!0}}catch(t){return this.error("Follow action failed",t),{success:!1,error:this.getUserFriendlyError(t)}}}async unfollowUser(e){try{if(!this.currentUser)throw new Error("User must be logged in");const t=this.currentUser.uid;return await b(g(d,"users",t),{following:V(e)}),await b(g(d,"users",e),{followers:V(t)}),this.log("User unfollowed successfully"),{success:!0}}catch(t){return this.error("Unfollow action failed",t),{success:!1,error:this.getUserFriendlyError(t)}}}generateUsername(e){const t=e.split("@")[0],o=Math.floor(Math.random()*1e3);return`${t}${o}`}generateWidgetId(){return`widget_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}getDefaultAvatar(){const e=["https://i.pinimg.com/originals/3c/69/1d/3c691d9047d7fb33383a8b417c8e9b67.jpg","https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face","https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face","https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face"];return e[Math.floor(Math.random()*e.length)]}getUserFriendlyError(e){return{"auth/user-not-found":"No account found with this email address.","auth/wrong-password":"Incorrect password. Please try again.","auth/email-already-in-use":"An account with this email already exists.","auth/weak-password":"Password is too weak. Please choose a stronger password.","auth/invalid-email":"Please enter a valid email address.","auth/too-many-requests":"Too many failed attempts. Please try again later.","auth/network-request-failed":"Network error. Please check your connection.","auth/popup-closed-by-user":"Login was cancelled.","auth/cancelled-popup-request":"Login was cancelled.","auth/popup-blocked":"Popup was blocked. Please allow popups for this site."}[e.code]||"An error occurred. Please try again."}async createNotification(e,t){try{const o={userId:e,type:t.type||"system",title:t.title,message:t.message,read:!1,timestamp:m(),data:t.data||{},icon:t.icon||"🔔"};return await ie(N(d,"notifications"),o),this.log("Notification created",o),o}catch(o){throw this.error("Error creating notification",o),o}}async createDefaultWidgetSlots(e){try{const t=new Blob([`<html>
        <head><title>Widget Placeholder</title></head>
        <body style='display:flex;align-items:center;justify-content:center;height:100vh;background:#222;color:#fff;font-family:Arial,sans-serif;'>
          <div style='text-align:center;'>
            <h2>Widget Placeholder</h2>
            <p>This is a placeholder widget.</p>
            <p>Upload your files to replace this!</p>
            <img src='https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif' alt='Placeholder' style='max-width:200px;border-radius:10px;'/>
          </div>
        </body>
      </html>`],{type:"text/html"});for(let o=1;o<=3;o++){const a=q(R,`users/${e}/app-widget-${o}/index.html`);await M(a,t),this.log(`Created widget slot ${o}`)}}catch(t){this.error("Error creating widget slots",t)}}async uploadWidgetFiles(e,t,o){const a=[];for(const n of e){const f=q(R,`users/${t}/widgets/${o}/${n.name}`);await M(f,n);const p=await le(f);a.push(p)}return a}async createSocialUserProfile(e,t){const o={uid:e.uid,email:e.email,displayName:e.displayName||e.email.split("@")[0],bio:"Welcome to inque! 🚀",photoURL:e.photoURL||this.getDefaultAvatar(),username:this.generateUsername(e.email),level:1,experience:0,type:"NEWB",role:"USER",followers:[],following:[],widgets:[],socialLinks:{},preferences:{theme:"auto",notifications:!0,privacy:"public",language:"en"},stats:{widgetsCreated:0,followersCount:0,followingCount:0,totalViews:0,totalLikes:0},dashboardSettings:{layout:"grid",theme:"neo-brutalist",customColors:{primary:"#00ffff",secondary:"#ff00ff",accent:"#ffff00",background:"#0a0a0a",text:"#ffffff"},widgetDefaults:{borderColor:"#00ffff",borderWidth:"3px",borderRadius:"0px",width:"100%",height:"300px",shadow:"0 0 20px rgba(0, 255, 255, 0.3)"},spacing:{widgetGap:"24px",sectionPadding:"40px",cardPadding:"24px"},animations:{enabled:!0,duration:"0.3s",easing:"ease-out"}},createdAt:m(),lastActive:m(),isVerified:!1,isPremium:!1,loginProvider:t};await I(g(d,"users",e.uid),o),await this.createDefaultWidgetSlots(e.uid)}async updateDashboardSettings(e,t){try{this.log("Updating dashboard settings",{userId:e,settings:t});const o=g(d,"users",e);return await b(o,{dashboardSettings:t,updatedAt:m()}),this.log("Dashboard settings updated successfully"),{success:!0}}catch(o){return this.error("Failed to update dashboard settings",o),{success:!1,error:o.message}}}async getDashboardSettings(e){try{this.log("Getting dashboard settings",{userId:e});const t=await T(g(d,"users",e));if(t.exists()){const a=t.data().dashboardSettings||this.getDefaultDashboardSettings();return this.log("Dashboard settings retrieved",a),{success:!0,settings:a}}else throw new Error("User profile not found")}catch(t){return this.error("Failed to get dashboard settings",t),{success:!1,error:t.message}}}getDefaultDashboardSettings(){return{layout:"grid",theme:"neo-brutalist",customColors:{primary:"#00ffff",secondary:"#ff00ff",accent:"#ffff00",background:"#0a0a0a",text:"#ffffff"},widgetDefaults:{borderColor:"#00ffff",borderWidth:"3px",borderRadius:"0px",width:"100%",height:"300px",shadow:"0 0 20px rgba(0, 255, 255, 0.3)"},spacing:{widgetGap:"24px",sectionPadding:"40px",cardPadding:"24px"},animations:{enabled:!0,duration:"0.3s",easing:"ease-out"}}}setupEventListeners(){}onAuthStateChanged(e){this.authStateListeners.push(e)}async handleUserLogin(e){this.log("Handling user login",{uid:e.uid});try{const t=await T(g(d,"users",e.uid));if(t.exists())this.userProfile=t.data(),this.log("User profile loaded",this.userProfile),this.updateUIForLoggedInUser(),this.setupNotificationListener(e.uid),this.dispatchAuthStateEvent(e,this.userProfile);else{this.log("User profile not found, creating default profile");const o={uid:e.uid,email:e.email,displayName:e.displayName||e.email?.split("@")[0],name:e.displayName||e.email?.split("@")[0],bio:"Welcome to inque! 🚀",photoURL:e.photoURL||this.getDefaultAvatar(),username:this.generateUsername(e.email),level:1,experience:0,type:"NEWB",role:"USER",followers:[],following:[],widgets:[],socialLinks:{},preferences:{theme:"auto",notifications:!0,privacy:"public",language:"en"},stats:{widgetsCreated:0,followersCount:0,followingCount:0,totalViews:0,totalLikes:0},createdAt:m(),lastActive:m(),isVerified:!1,isPremium:!1};await I(g(d,"users",e.uid),o),this.userProfile=o,this.updateUIForLoggedInUser(),this.setupNotificationListener(e.uid),this.dispatchAuthStateEvent(e,this.userProfile)}}catch(t){this.error("Error handling user login",t)}}async handleUserLogout(){this.log("Handling user logout"),this.userProfile=null,this.updateUIForLoggedOutUser(),this.notificationUnsubscribe&&this.notificationUnsubscribe()}updateUIForLoggedInUser(){this.log("Updating UI for logged in user"),this.dispatchAuthStateEvent(this.currentUser)}updateUIForLoggedOutUser(){this.log("Updating UI for logged out user"),this.dispatchAuthStateEvent(null)}updateProfileBanner(e,t=!1){this.log("Profile banner update delegated to ProfileHub")}updateSidebarUserInfo(e,t=!1,o=null){this.log("Sidebar user info update delegated to ProfileHub")}async markNotificationAsRead(e){try{const t=g(d,"notifications",e);await b(t,{read:!0}),this.log("Notification marked as read",{notificationId:e})}catch(t){this.error("Error marking notification as read",t)}}async markAllNotificationsAsRead(e){try{const t=z(N(d,"notifications"),x("userId","==",e),x("read","==",!1)),a=(await se(t)).docs.map(n=>b(n.ref,{read:!0}));await Promise.all(a),this.log("All notifications marked as read")}catch(t){this.error("Error marking all notifications as read",t)}}setupNotificationListener(e){this.log("Setting up notification listener",{userId:e}),this.notificationUnsubscribe&&this.notificationUnsubscribe();const{notificationCount:t,notificationList:o,markAllReadBtn:a}=this.domElements,n=z(N(d,"notifications"),x("userId","==",e),ae("timestamp","desc"),ne(20));this.notificationUnsubscribe=re(n,f=>{o&&(o.innerHTML="");let p=0,S=!1;if(f.forEach(y=>{const U={id:y.id,...y.data()};S=!0,U.read||p++;const B=this.createNotificationElement(U);o&&o.appendChild(B)}),t&&(t.textContent=p,t.style.display=p>0?"inline-block":"none"),a&&(a.style.display=p>0?"inline-block":"none"),!S&&o){const y=document.createElement("div");y.className="notification-item empty-notification",y.innerHTML='<span class="notification-text">No new notifications</span>',o.appendChild(y)}},f=>{this.error("Error listening to notifications",f)})}createNotificationElement(e){const t=document.createElement("div");t.className=`notification-item ${e.type} ${e.read?"read":"unread"}`,t.dataset.notificationId=e.id;const o=e.timestamp?new Date(e.timestamp.toDate()).toLocaleString():"Just now";return t.innerHTML=`
      <div class="notification-content">
        <div class="notification-header">
          <span class="notification-icon">${e.icon}</span>
          <span class="notification-title">${e.title}</span>
          ${e.read?"":'<span class="unread-indicator"></span>'}
        </div>
        <div class="notification-message">${e.message}</div>
        <div class="notification-time">${o}</div>
      </div>
      <button class="notification-close" aria-label="Dismiss notification">&times;</button>
    `,t.addEventListener("click",n=>{n.target.classList.contains("notification-close")||(this.markNotificationAsRead(e.id),this.handleNotificationAction(e))}),t.querySelector(".notification-close").addEventListener("click",n=>{n.stopPropagation(),t.remove()}),t}handleNotificationAction(e){switch(this.log("Handling notification action",{type:e.type}),e.type){case"mention":e.data.postId&&this.log("Navigate to post:",e.data.postId);break;case"like":e.data.postId&&this.log("Navigate to liked post:",e.data.postId);break;case"follow":e.data.followerId&&this.log("Navigate to follower profile:",e.data.followerId);break;case"widget":e.data.widgetId&&this.log("Open widget:",e.data.widgetId);break;default:this.log("Notification clicked:",e)}}showToast(e,t="info",o=5e3){this.log("Showing toast",{message:e,type:t,duration:o});const a=document.getElementById("toast-container");if(!a){this.log("Toast container not found");return}const n=document.createElement("div");n.className=`toast ${t}`,n.innerHTML=`
      <span class="toast-message">${e}</span>
      <button class="toast-close">&times;</button>
    `,a.appendChild(n),setTimeout(()=>n.classList.add("show"),100);const f=setTimeout(()=>{n.classList.remove("show"),setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},300)},o);n.querySelector(".toast-close").addEventListener("click",()=>{clearTimeout(f),n.classList.remove("show"),setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},300)})}}const s=new de;window.socialAuth=s;document.addEventListener("DOMContentLoaded",()=>{s.init();const L=document.getElementById("authModal"),e=document.querySelector(".auth-close-button"),t=document.getElementById("loginForm"),o=document.getElementById("signUpForm"),a=document.getElementById("showSignUp"),n=document.getElementById("showLogin"),f=document.getElementById("authModalTitle"),p=document.getElementById("googleLoginBtn"),S=document.getElementById("githubLoginBtn");document.querySelector(".profile-pic-container"),document.querySelector(".profile-name"),document.querySelector(".profile-bio"),document.getElementById("profileLvl"),document.getElementById("profileType"),document.getElementById("profileRole"),document.getElementById("profileStatusIndicator"),document.getElementById("profileStatus");const y=document.getElementById("editProfileQuickBtn");document.getElementById("editProfileModal"),document.getElementById("editProfileForm"),document.getElementById("editPhoto"),document.querySelector(".edit-profile-close-button"),y&&y.addEventListener("click",()=>{console.log("[PROFILE EDIT] Edit profile quick button clicked"),window.openEditProfile?window.openEditProfile():s.showToast("Edit Profile not available","error")}),document.querySelector(".sidebar-avatar"),document.querySelector(".sidebar-user-name"),document.querySelector(".sidebar-user-email"),document.querySelector(".sidebar-user-status"),document.querySelector(".status-dot");const U=document.getElementById("sidebarLoginBtn");document.getElementById("sidebarUserActions");const B=document.getElementById("sidebarEditProfileBtn"),P=document.getElementById("sidebarLogoutBtn");document.querySelector(".sidebar-stats"),document.getElementById("sidebarLvl"),document.getElementById("sidebarType"),document.getElementById("sidebarRole"),document.getElementById("notificationCount"),document.getElementById("notificationList");const W=document.getElementById("markAllReadBtn"),A={name:"Welcome to inque!",bio:"This is a space to create, share, and display your interactive projects. Sign up to start building your personal widget dashboard.",lvl:"LVL • ?",type:"TYPE • ?",role:"ROLE • GUEST",photoURL:"https://i.pinimg.com/originals/3c/69/1d/3c691d9047d7fb33383a8b417c8e9b67.jpg"};a&&a.addEventListener("click",i=>{i.preventDefault(),console.log("Switching to sign up form"),t.style.display="none",o.style.display="block",w.style.display="none",f.textContent="Sign Up"}),n&&n.addEventListener("click",i=>{i.preventDefault(),console.log("Switching to login form"),o.style.display="none",t.style.display="block",w.style.display="none",f.textContent="Login"});const D=document.getElementById("showLoginFromForgot");D&&D.addEventListener("click",i=>{i.preventDefault(),console.log("Switching from forgot password to login form"),w.style.display="none",t.style.display="block",f.textContent="Login"}),U&&U.addEventListener("click",()=>{console.log("[SIDEBAR LOGIN] Login button clicked"),window.openAuthModal?window.openAuthModal("login"):(L.style.display="block",document.body.style.overflow="hidden")}),B&&B.addEventListener("click",()=>{console.log("[SIDEBAR EDIT PROFILE] Edit profile button clicked"),window.openEditProfile?window.openEditProfile():s.showToast("Edit Profile not available","error")}),e&&e.addEventListener("click",()=>{console.log("Closing auth modal"),L.style.display="none",document.body.style.overflow=""}),window.addEventListener("click",i=>{i.target===L&&(console.log("Closing auth modal via outside click"),L.style.display="none",document.body.style.overflow="")}),document.addEventListener("keydown",i=>{i.key==="Escape"&&L.style.display==="block"&&(console.log("Closing auth modal via escape key"),L.style.display="none",document.body.style.overflow="")}),P&&P.addEventListener("click",()=>{H(h).then(()=>{console.log("User signed out.")}).catch(i=>{console.error("Sign out error:",i)})}),G(h,async i=>{const l=new URLSearchParams(window.location.search).get("user");if(i)try{console.log("User authenticated:",i.uid),(!window.authState||!window.authState.isInitialized)&&s.showToast(`Welcome back, ${i.displayName||i.email}! 🎉`,"success",4e3);const r=document.getElementById("authModal");r&&r.style.display==="block"&&(r.style.display="none",document.body.style.overflow=""),console.log("Fetching user profile from Firestore...");const u=await T(g(d,"users",i.uid));if(u.exists()){console.log("User profile found:",u.data());const E=u.data();s.updateSidebarUserInfo(E,!0,i.email),s.updateProfileBanner(E,!0),s.setupNotificationListener(i.uid)}else{console.warn("User profile not found in Firestore, creating default profile");const E={name:i.displayName||i.email.split("@")[0],bio:"A new user ready to create amazing things.",lvl:"LVL • 1",type:"TYPE • NEWB",role:"ROLE • USER",photoURL:A.photoURL,email:i.email,createdAt:m(),lastLogin:m()};await I(g(d,"users",i.uid),E),s.updateSidebarUserInfo(E,!0,i.email),s.updateProfileBanner(E,!0)}}catch(r){console.error("Error handling auth state change:",r),s.showToast("Error loading profile. Please refresh the page.","error")}else console.log("User not authenticated"),s.updateSidebarUserInfo(A,!1),s.updateProfileBanner(A,!1)});const F=async i=>{try{const c=await X(h,i);console.log("Logged in with provider:",c.user)}catch(c){alert(c.message),console.error("Provider login error:",c)}};p&&p.addEventListener("click",()=>{F(new Q)}),S&&S.addEventListener("click",()=>{F(new Y)});const w=document.getElementById("forgotPasswordForm");w&&w.addEventListener("submit",async i=>{i.preventDefault();const c=document.getElementById("forgotPasswordEmail").value;try{const l=w.querySelector(".auth-submit-btn"),r=l.textContent;l.textContent="Sending...",l.disabled=!0,await te(h,c),s.showToast("Password reset email sent! Check your inbox.","success"),w.style.display="none",t.style.display="block",f.textContent="Login"}catch(l){console.error("Password reset error:",l);let r="Failed to send reset email. Please try again.";l.code==="auth/user-not-found"&&(r="No account found with this email address."),s.showToast(r,"error")}finally{const l=w.querySelector(".auth-submit-btn");l.textContent=originalText,l.disabled=!1}}),o&&o.addEventListener("submit",async i=>{i.preventDefault();const c=document.getElementById("signUpEmail").value,l=document.getElementById("signUpPassword").value;try{const r=o.querySelector(".auth-submit-btn"),u=r.textContent;r.textContent="Creating Account...",r.disabled=!0,typeof grecaptcha<"u"&&grecaptcha.enterprise?grecaptcha.enterprise.ready(async()=>{const v=await grecaptcha.enterprise.execute("6Ldt0YYrAAAAAKyNgAPO8Te96_m5innDHsSkppQc",{action:"SIGNUP"});console.log("reCAPTCHA token (Sign Up):",v)}):console.log("reCAPTCHA not available, proceeding without verification (development mode)");const k=(await j(h,c,l)).user;console.log("User created:",k.uid);const J={name:c.split("@")[0],bio:"A new user ready to create amazing things.",lvl:"LVL • 1",type:"TYPE • NEWB",role:"ROLE • USER",photoURL:A.photoURL,email:c,createdAt:m(),lastLogin:m()};console.log("Creating user profile in Firestore..."),await I(g(d,"users",k.uid),J),console.log("User profile created in Firestore");try{console.log("Creating widget slots in Storage...");const v=new Blob([`<html>
              <head><title>Widget Placeholder</title></head>
              <body style='display:flex;align-items:center;justify-content:center;height:100vh;background:#222;color:#fff;font-family:Arial,sans-serif;'>
                <div style='text-align:center;'>
                  <h2>Widget Placeholder</h2>
                  <p>This is a placeholder widget.</p>
                  <p>Upload your files to replace this!</p>
                  <img src='https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif' alt='Placeholder' style='max-width:200px;border-radius:10px;'/>
                </div>
              </body>
            </html>`],{type:"text/html"});for(let C=1;C<=3;C++){const Z=q(R,`users/${k.uid}/app-widget-${C}/index.html`);await M(Z,v),console.log(`Created widget slot ${C}`)}console.log("All widget slots created successfully")}catch(v){console.warn("Storage setup failed (this is okay for now):",v)}try{await s.createNotification(k.uid,{type:"system",title:"Welcome to inque! 🎉",message:"Your account has been created successfully. Start by uploading your first widget!",icon:"🎉"})}catch(v){console.warn("Failed to create welcome notification:",v)}console.log("Signup completed successfully!");const $=document.getElementById("authModal");$&&($.style.display="none",document.body.style.overflow=""),s.showToast("Account created successfully! Welcome to inque! 🎉","success",5e3)}catch(r){console.error("Signup error:",r);let u="Signup failed. Please try again.";r.code==="auth/email-already-in-use"?u="This email is already registered. Please try logging in instead.":r.code==="auth/weak-password"?u="Password is too weak. Please choose a stronger password.":r.code==="auth/invalid-email"&&(u="Please enter a valid email address."),s.showToast(u,"error",5e3)}finally{const r=o.querySelector(".auth-submit-btn");r.textContent="Create Account",r.disabled=!1}}),t&&t.addEventListener("submit",i=>{i.preventDefault(),typeof grecaptcha<"u"&&grecaptcha.enterprise?grecaptcha.enterprise.ready(async()=>{const l=await grecaptcha.enterprise.execute("6Ldt0YYrAAAAAKyNgAPO8Te96_m5innDHsSkppQc",{action:"LOGIN"});console.log("reCAPTCHA token (Login):",l),c()}):(console.log("reCAPTCHA not available, proceeding without verification (development mode)"),c());function c(){const l=document.getElementById("loginEmail").value,r=document.getElementById("loginPassword").value;K(h,l,r).then(u=>{console.log("Logged in:",u.user)}).catch(u=>{alert(u.message),console.error("Login error:",u)})}}),P&&P.addEventListener("click",()=>{H(h).then(()=>{console.log("User signed out.")}).catch(i=>{console.error("Sign out error:",i)})}),W&&W.addEventListener("click",()=>{h.currentUser?(s.markAllNotificationsAsRead(h.currentUser.uid),s.showToast("All notifications marked as read!","success")):s.showToast("Please log in to mark all notifications as read.","info")});const O=document.getElementById("forgotPasswordLink");O&&O.addEventListener("click",i=>{i.preventDefault(),console.log("Forgot password link clicked"),t.style.display="none",o.style.display="none",w.style.display="block",f.textContent="Reset Password"}),document.querySelectorAll(".quick-action-btn").forEach(i=>{i.addEventListener("click",()=>{const c=i.getAttribute("data-action");console.log("Quick action clicked:",c);const l=()=>{if(window.sidebarHandler)window.sidebarHandler.closeSidebar();else{const r=document.querySelector(".sidebar-nav"),u=document.querySelector(".sidebar-overlay");r&&u&&(r.classList.remove("open"),u.classList.remove("show"),document.body.style.overflow="")}};switch(c){case"newWidget":s.showToast("Opening Widget Studio...","info"),l(),window.openWidgetStudio?(window.openWidgetStudio(),console.log("[QUICK ACTION] Widget Studio modal opened successfully")):s.showToast("Widget Studio not available","error");break;case"shareProfile":l(),navigator.share?navigator.share({title:"Check out my profile!",url:window.location.href}):(navigator.clipboard.writeText(window.location.href),s.showToast("Profile URL copied to clipboard!","success"));break;case"settings":l(),s.showToast("Settings panel opening...","info");break;case"testNotifications":l(),h.currentUser?s.showToast("Test notifications feature coming soon!","info"):s.showToast("Please log in to test notifications.","info");break;case"openChatbot":l(),s.showToast("Opening AI Assistant...","info"),typeof openChatbot=="function"?(openChatbot(),console.log("[QUICK ACTION] AI Assistant opened successfully")):(s.showToast("AI Assistant not available","error"),console.error("[QUICK ACTION] openChatbot function not found"));break;default:s.showToast(`Action "${c}" not implemented yet.`,"warning")}})})});
