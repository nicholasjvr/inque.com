const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./widget-upload-CExyzcPY.js","./cloud-upload-DXsF6I58.js","./css-analyzer-dJ6kCf09.js"])))=>i.map(i=>d[i]);
import{initializeApp as ie}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-app.js";import{getAnalytics as se}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-analytics.js";import{getFirestore as ne,addDoc as Q,collection as x,serverTimestamp as S,setDoc as N,doc as v,updateDoc as k,getDoc as D,arrayUnion as _,arrayRemove as z,query as Y,where as M,getDocs as ae,orderBy as re,limit as le,onSnapshot as ce}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js";import{getAuth as de,onAuthStateChanged as W,signOut as G,GoogleAuthProvider as K,GithubAuthProvider as X,sendPasswordResetEmail as ue,createUserWithEmailAndPassword as J,signInWithEmailAndPassword as Z,sendEmailVerification as ge,signInWithPopup as ee}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-auth.js";import{getStorage as fe,ref as O,uploadBytes as F,getDownloadURL as he}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-storage.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))o(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const c of s.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();const me="modulepreload",pe=function(l,e){return new URL(l,e).href},V={},ye=function(e,t,o){let i=Promise.resolve();if(t&&t.length>0){let f=function(u){return Promise.all(u.map(r=>Promise.resolve(r).then(a=>({status:"fulfilled",value:a}),a=>({status:"rejected",reason:a}))))};const c=document.getElementsByTagName("link"),g=document.querySelector("meta[property=csp-nonce]"),b=g?.nonce||g?.getAttribute("nonce");i=f(t.map(u=>{if(u=pe(u,o),u in V)return;V[u]=!0;const r=u.endsWith(".css"),a=r?'[rel="stylesheet"]':"";if(!!o)for(let P=c.length-1;P>=0;P--){const B=c[P];if(B.href===u&&(!r||B.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${u}"]${a}`))return;const U=document.createElement("link");if(U.rel=r?"stylesheet":me,r||(U.as="script"),U.crossOrigin="",U.href=u,b&&U.setAttribute("nonce",b),document.head.appendChild(U),r)return new Promise((P,B)=>{U.addEventListener("load",P),U.addEventListener("error",()=>B(new Error(`Unable to preload CSS for ${u}`)))})}))}function s(c){const g=new Event("vite:preloadError",{cancelable:!0});if(g.payload=c,window.dispatchEvent(g),!g.defaultPrevented)throw c}return i.then(c=>{for(const g of c||[])g.status==="rejected"&&s(g.reason);return e().catch(s)})},n={log:(l,e=null)=>{console.log(`[DEBUG] Firebase Core: ${l}`,e||"")},error:(l,e=null)=>{console.error(`[DEBUG ERROR] Firebase Core: ${l}`,e||"")},warn:(l,e=null)=>{console.warn(`[DEBUG WARN] Firebase Core: ${l}`,e||"")}};n.log("Starting initialization");const we={apiKey:"AIzaSyBIZcD-L5jD84hEYLxWOwHTE2iTY6EJ0zI",authDomain:"inque-31cb5.firebaseapp.com",databaseURL:"https://inque-31cb5-default-rtdb.firebaseio.com",projectId:"inque-31cb5",storageBucket:"inque-31cb5.firebasestorage.app",messagingSenderId:"338722493567",appId:"1:338722493567:web:4c46ecdfe92ddf2a5d5b4a",measurementId:"G-KQT58LWVSK"},be=window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1";be&&(n.log("Running on localhost - using development configuration"),n.log("IMPORTANT: To enable Firebase Auth on localhost, add 'localhost' to Authorized Domains in Firebase Console > Authentication > Settings"));n.log("Initializing Firebase app");const q=ie(we);se(q);const m=ne(q),E=de(q),R=fe(q);n.log("Firebase services initialized successfully");W(E,l=>{try{l?(n.log("User authenticated:",l.email),window.dispatchEvent(new CustomEvent("auth-state-changed",{detail:{user:l,isAuthenticated:!0}}))):(n.log("User not authenticated"),window.dispatchEvent(new CustomEvent("auth-state-changed",{detail:{user:null,isAuthenticated:!1}})))}catch(e){n.error("Error in auth state change handler:",e)}},l=>{n.error("Auth state change error:",l)});async function ve(){try{n.log("Logging page view");const l=await Q(x(m,"page_visits"),{url:window.location.href,timestamp:S()});n.log("Page visit logged successfully",{id:l.id})}catch(l){n.error("Error logging visit",l)}}const Ee=["text/html","text/css","application/javascript","application/json","image/png","image/jpeg","image/gif","image/svg+xml","text/javascript","application/x-javascript"],Le=[".html",".js",".css",".png",".jpg",".jpeg",".gif",".svg",".json"];window.validateWidgetFiles=function(l){n.log("Validating widget files",{fileCount:l.length});for(let e of l){const t=e.name.slice(e.name.lastIndexOf(".")).toLowerCase();if(!Le.includes(t)||e.type&&!Ee.includes(e.type))return n.warn("Invalid file type detected",{fileName:e.name,fileType:e.type}),!1}return n.log("All files validated successfully"),!0};document.addEventListener("DOMContentLoaded",function(){n.log("DOM Content Loaded - Starting core functionality"),ve();const l=document.querySelector(".light-cursor");l?(n.log("Setting up light cursor effect"),document.addEventListener("mousemove",function(r){l.style.left=r.clientX+"px",l.style.top=r.clientY+"px"})):n.warn("Light cursor element not found");const e=document.querySelectorAll(".nav-btn, .quick-action-btn, .edit-widget-btn, .hamburger-menu");n.log("Found touch elements",{count:e.length}),e.forEach(r=>{r.addEventListener("touchend",function(a){n.log("Touch end event on element",{className:r.className}),a.preventDefault(),this.click()})});const t=document.querySelectorAll('button, a, [role="button"]');n.log("Setting up touch feedback for elements",{count:t.length}),t.forEach(r=>{r.addEventListener("touchstart",function(){this.style.transform="scale(0.98)"}),r.addEventListener("touchend",function(){this.style.transform=""})});let o=0;document.addEventListener("touchstart",function(r){o=r.touches[0].clientY}),document.addEventListener("touchmove",function(r){const a=r.touches[0].clientY;(window.pageYOffset||document.documentElement.scrollTop)<=0&&a>o&&r.preventDefault()});const i=document.querySelector(".sidebar-nav"),s=document.querySelector(".sidebar-overlay"),c=document.querySelector(".hamburger-menu");if(n.log("Sidebar elements found",{sidebar:!!i,overlay:!!s,hamburger:!!c}),i&&s&&c){n.log("All sidebar elements found, setting up functionality"),i.style.position="fixed",i.style.top="0",i.style.left="0",i.style.height="100vh",i.style.zIndex="1002",n.log("Sidebar made sticky"),c.addEventListener("click",function(a){n.log("Hamburger menu clicked"),a.preventDefault(),a.stopPropagation();const A=i.classList.contains("open");n.log("Toggling sidebar",{currentState:A?"open":"closed"}),i.classList.toggle("open"),s.classList.toggle("show"),document.body.style.overflow=i.classList.contains("open")?"hidden":"",n.log("Sidebar toggled",{newState:i.classList.contains("open")?"open":"closed"})});const r=document.querySelector(".sidebar-close-btn");r?(n.log("Setting up close button handler"),r.addEventListener("click",function(a){n.log("Close button clicked"),a.preventDefault(),a.stopPropagation(),i.classList.remove("open"),s.classList.remove("show"),document.body.style.overflow="",n.log("Sidebar closed via close button")})):n.warn("Close button not found"),s.addEventListener("click",function(a){n.log("Overlay clicked"),a.preventDefault(),a.stopPropagation(),i.classList.remove("open"),s.classList.remove("show"),document.body.style.overflow="",n.log("Sidebar closed via overlay click")}),i.addEventListener("touchmove",function(a){i.classList.contains("open")&&(n.log("Preventing touch scroll on sidebar"),a.stopPropagation())}),document.addEventListener("visibilitychange",()=>{document.hidden&&i.classList.contains("open")&&(n.log("Page hidden, closing sidebar"),i.classList.remove("open"),s.classList.remove("show"),document.body.style.overflow="")}),document.addEventListener("keydown",function(a){a.key==="Escape"&&i.classList.contains("open")&&(n.log("Escape key pressed, closing sidebar"),i.classList.remove("open"),s.classList.remove("show"),document.body.style.overflow="")}),n.log("Sidebar functionality setup complete")}else n.warn("Sidebar elements not found - sidebar functionality disabled",{sidebar:!!i,overlay:!!s,hamburger:!!c});const g=document.querySelectorAll(".modal");n.log("Setting up modal touch handling",{modalCount:g.length}),g.forEach(r=>{r.addEventListener("touchmove",function(a){a.stopPropagation()})});const b=document.getElementById("sidebarNotifications"),f=document.getElementById("notificationsHeader"),u=document.getElementById("notificationsToggle");if(n.log("Setting up notifications toggle",{container:!!b,header:!!f,toggle:!!u}),b&&f&&u){n.log("All notifications elements found, setting up toggle functionality");const r=()=>{const a=b.classList.contains("expanded");n.log("Toggling notifications",{currentState:a?"expanded":"collapsed"}),b.classList.toggle("expanded"),u.classList.toggle("expanded"),n.log("Notifications toggled",{newState:b.classList.contains("expanded")?"expanded":"collapsed"})};f.addEventListener("click",function(a){n.log("Notifications header clicked"),a.preventDefault(),a.stopPropagation(),r()}),u.addEventListener("click",function(a){n.log("Notifications toggle button clicked"),a.preventDefault(),a.stopPropagation(),r()}),f.addEventListener("keydown",function(a){(a.key==="Enter"||a.key===" ")&&(n.log("Notifications header keyboard activated"),a.preventDefault(),r())}),u.addEventListener("keydown",function(a){(a.key==="Enter"||a.key===" ")&&(n.log("Notifications toggle keyboard activated"),a.preventDefault(),r())}),n.log("Notifications toggle functionality setup complete")}else n.warn("Missing notifications elements",{container:!!b,header:!!f,toggle:!!u});n.log("Core functionality setup complete")});const Ce=Object.freeze(Object.defineProperty({__proto__:null,auth:E,db:m,onAuthStateChanged:W,storage:R},Symbol.toStringTag,{value:"Module"}));class Se{constructor(){this.currentUser=null,this.userProfile=null,this.isLoading=!1,this.authStateListeners=[],this.debugMode=!0,this.hasShownWelcomeThisSession=!1,this.authListenerSetUp=!1,this.domElements={},this.notificationUnsubscribe=null,document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{this.initializeDOMElements()}):this.initializeDOMElements()}log(e,t=null){this.debugMode&&console.log(`[SOCIAL AUTH] ${e}`,t||"")}error(e,t=null){console.error(`[SOCIAL AUTH ERROR] ${e}`,t||"")}initializeDOMElements(){this.log("Initializing DOM element references"),this.domElements={authModal:document.getElementById("authModal"),authCloseBtn:document.querySelector(".auth-close-button"),loginForm:document.getElementById("loginForm"),signUpForm:document.getElementById("signUpForm"),showSignUp:document.getElementById("showSignUp"),showLogin:document.getElementById("showLogin"),authModalTitle:document.getElementById("authModalTitle"),googleLoginBtn:document.getElementById("googleLoginBtn"),githubLoginBtn:document.getElementById("githubLoginBtn"),profilePicContainer:document.querySelector(".profile-pic-container"),profileName:document.querySelector(".profile-name"),profileBio:document.querySelector(".profile-bio"),profileLvl:document.getElementById("profileLvl"),profileType:document.getElementById("profileType"),profileRole:document.getElementById("profileRole"),profileStatusIndicator:document.getElementById("profileStatusIndicator"),profileStatus:document.getElementById("profileStatus"),sidebarAvatar:document.querySelector(".sidebar-avatar"),sidebarUserName:document.querySelector(".sidebar-user-name"),sidebarUserEmail:document.querySelector(".sidebar-user-email"),sidebarUserStatus:document.querySelector(".sidebar-user-status"),sidebarStatusDot:document.querySelector(".status-dot"),sidebarLoginBtn:document.getElementById("sidebarLoginBtn"),sidebarUserActions:document.getElementById("sidebarUserActions"),sidebarEditProfileBtn:document.getElementById("sidebarEditProfileBtn"),sidebarLogoutBtn:document.getElementById("sidebarLogoutBtn"),sidebarStats:document.querySelector(".sidebar-stats"),sidebarLvl:document.getElementById("sidebarLvl"),sidebarType:document.getElementById("sidebarType"),sidebarRole:document.getElementById("sidebarRole"),notificationCount:document.getElementById("notificationCount"),notificationList:document.getElementById("notificationList"),markAllReadBtn:document.getElementById("markAllReadBtn")},this.log("DOM elements initialized",Object.keys(this.domElements))}async init(){this.log("Initializing Social Auth Manager"),this.authListenerSetUp?this.log("Auth state listener already set up, skipping"):(W(E,async e=>{this.currentUser=e,this.log("Auth state changed",{userId:e?.uid}),e?await this.handleUserLogin(e):await this.handleUserLogout(),this.authStateListeners.forEach(t=>t(e)),this.dispatchAuthStateEvent(e)}),this.authListenerSetUp=!0,this.log("Auth state listener set up")),this.setupEventListeners(),this.log("Social Auth Manager initialized"),window.debugAuthState=()=>{console.log("[AUTH DEBUG] Current auth state:",{currentUser:this.currentUser?.uid,userProfile:this.userProfile,isLoading:this.isLoading,hasShownWelcome:this.hasShownWelcomeThisSession,authListenerSetUp:this.authListenerSetUp})}}dispatchAuthStateEvent(e,t=null){const o=e&&!this.hasShownWelcomeThisSession;e&&(this.hasShownWelcomeThisSession=!0);const i=new CustomEvent("auth-state-changed",{detail:{user:e,profile:t||this.userProfile,isNewLogin:o,timestamp:Date.now()}});window.dispatchEvent(i),this.log("Auth state change event dispatched",{userId:e?.uid,isNewLogin:o,hasProfile:!!t})}async registerUser(e){try{this.isLoading=!0,this.log("Starting user registration",{email:e.email});const o=(await J(E,e.email,e.password)).user;await ge(o);const i={uid:o.uid,email:e.email,displayName:e.displayName||e.email.split("@")[0],bio:e.bio||"Welcome to inque! 🚀",photoURL:e.photoURL||this.getDefaultAvatar(),username:e.username||this.generateUsername(e.email),level:1,experience:0,type:"NEWB",role:"USER",followers:[],following:[],widgets:[],socialLinks:{twitter:e.twitter||"",instagram:e.instagram||"",github:e.github||"",website:e.website||""},preferences:{theme:"auto",notifications:!0,privacy:"public",language:"en"},stats:{widgetsCreated:0,followersCount:0,followingCount:0,totalViews:0,totalLikes:0},createdAt:S(),lastActive:S(),isVerified:!1,isPremium:!1};return await N(v(m,"users",o.uid),i),this.log("User profile created successfully"),await this.createNotification(o.uid,{type:"welcome",title:"Welcome to inque! 🎉",message:"Your account has been created successfully. Start by uploading your first widget!",icon:"🎉",data:{action:"upload_widget"}}),await this.createDefaultWidgetSlots(o.uid),this.log("Registration completed successfully"),{success:!0,user:o,profile:i}}catch(t){return this.error("Registration failed",t),{success:!1,error:this.getUserFriendlyError(t)}}finally{this.isLoading=!1}}async loginUser(e){try{this.isLoading=!0,this.log("Starting user login",{email:e.email});const o=(await Z(E,e.email,e.password)).user;return await k(v(m,"users",o.uid),{lastActive:S()}),await this.createNotification(o.uid,{type:"login",title:"Welcome back! 👋",message:"You've successfully logged into your account.",icon:"🔐",data:{action:"dashboard"}}),this.log("Login completed successfully"),{success:!0,user:o}}catch(t){return this.error("Login failed",t),{success:!1,error:this.getUserFriendlyError(t)}}finally{this.isLoading=!1}}async loginWithProvider(e){try{this.isLoading=!0,this.log("Starting social login",{provider:e});let t;switch(e){case"google":t=new K;break;case"github":t=new X;break;default:throw new Error("Unsupported provider")}const i=(await ee(E,t)).user;return(await D(v(m,"users",i.uid))).exists()?await k(v(m,"users",i.uid),{lastActive:S()}):await this.createSocialUserProfile(i,e),this.log("Social login completed successfully"),{success:!0,user:i}}catch(t){return this.error("Social login failed",t),{success:!1,error:this.getUserFriendlyError(t)}}finally{this.isLoading=!1}}async uploadWidget(e){if(this.log("Widget upload requested, delegating to WidgetUploadManager"),!window.widgetUploadManager){const{default:t}=await ye(async()=>{const{default:o}=await import("./widget-upload-CExyzcPY.js");return{default:o}},__vite__mapDeps([0,1,2]),import.meta.url);window.widgetUploadManager=t}return await window.widgetUploadManager.handleWidgetUpload(e)}async followUser(e){try{if(!this.currentUser)throw new Error("User must be logged in");const t=this.currentUser.uid;return await k(v(m,"users",t),{following:_(e)}),await k(v(m,"users",e),{followers:_(t)}),await this.createNotification(e,{type:"follow",title:"New follower! 👥",message:`${this.userProfile?.displayName||"Someone"} started following you.`,icon:"👥",data:{followerId:t,action:"view_profile"}}),this.log("User followed successfully"),{success:!0}}catch(t){return this.error("Follow action failed",t),{success:!1,error:this.getUserFriendlyError(t)}}}async unfollowUser(e){try{if(!this.currentUser)throw new Error("User must be logged in");const t=this.currentUser.uid;return await k(v(m,"users",t),{following:z(e)}),await k(v(m,"users",e),{followers:z(t)}),this.log("User unfollowed successfully"),{success:!0}}catch(t){return this.error("Unfollow action failed",t),{success:!1,error:this.getUserFriendlyError(t)}}}generateUsername(e){const t=e.split("@")[0],o=Math.floor(Math.random()*1e3);return`${t}${o}`}generateWidgetId(){return`widget_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}getDefaultAvatar(){const e=["https://i.pinimg.com/originals/3c/69/1d/3c691d9047d7fb33383a8b417c8e9b67.jpg","https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face","https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face","https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face"];return e[Math.floor(Math.random()*e.length)]}getUserFriendlyError(e){return{"auth/user-not-found":"No account found with this email address.","auth/wrong-password":"Incorrect password. Please try again.","auth/email-already-in-use":"An account with this email already exists.","auth/weak-password":"Password is too weak. Please choose a stronger password.","auth/invalid-email":"Please enter a valid email address.","auth/too-many-requests":"Too many failed attempts. Please try again later.","auth/network-request-failed":"Network error. Please check your connection.","auth/popup-closed-by-user":"Login was cancelled.","auth/cancelled-popup-request":"Login was cancelled.","auth/popup-blocked":"Popup was blocked. Please allow popups for this site."}[e.code]||"An error occurred. Please try again."}async createNotification(e,t){try{const o={userId:e,type:t.type||"system",title:t.title,message:t.message,read:!1,timestamp:S(),data:t.data||{},icon:t.icon||"🔔"};return await Q(x(m,"notifications"),o),this.log("Notification created",o),o}catch(o){throw this.error("Error creating notification",o),o}}async createDefaultWidgetSlots(e){try{const t=new Blob([`<html>
        <head><title>Widget Placeholder</title></head>
        <body style='display:flex;align-items:center;justify-content:center;height:100vh;background:#222;color:#fff;font-family:Arial,sans-serif;'>
          <div style='text-align:center;'>
            <h2>Widget Placeholder</h2>
            <p>This is a placeholder widget.</p>
            <p>Upload your files to replace this!</p>
            <img src='https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif' alt='Placeholder' style='max-width:200px;border-radius:10px;'/>
          </div>
        </body>
      </html>`],{type:"text/html"});for(let o=1;o<=3;o++){const i=O(R,`users/${e}/app-widget-${o}/index.html`);await F(i,t),this.log(`Created widget slot ${o}`)}}catch(t){this.error("Error creating widget slots",t)}}async uploadWidgetFiles(e,t,o){const i=[];for(const s of e){const c=O(R,`users/${t}/widgets/${o}/${s.name}`);await F(c,s);const g=await he(c);i.push(g)}return i}async createSocialUserProfile(e,t){const o={uid:e.uid,email:e.email,displayName:e.displayName||e.email.split("@")[0],bio:"Welcome to inque! 🚀",photoURL:e.photoURL||this.getDefaultAvatar(),username:this.generateUsername(e.email),level:1,experience:0,type:"NEWB",role:"USER",followers:[],following:[],widgets:[],socialLinks:{},preferences:{theme:"auto",notifications:!0,privacy:"public",language:"en"},stats:{widgetsCreated:0,followersCount:0,followingCount:0,totalViews:0,totalLikes:0},dashboardSettings:{layout:"grid",theme:"neo-brutalist",customColors:{primary:"#00ffff",secondary:"#ff00ff",accent:"#ffff00",background:"#0a0a0a",text:"#ffffff"},widgetDefaults:{borderColor:"#00ffff",borderWidth:"3px",borderRadius:"0px",width:"100%",height:"300px",shadow:"0 0 20px rgba(0, 255, 255, 0.3)"},spacing:{widgetGap:"24px",sectionPadding:"40px",cardPadding:"24px"},animations:{enabled:!0,duration:"0.3s",easing:"ease-out"}},createdAt:S(),lastActive:S(),isVerified:!1,isPremium:!1,loginProvider:t};await N(v(m,"users",e.uid),o),await this.createDefaultWidgetSlots(e.uid)}async updateDashboardSettings(e,t){try{this.log("Updating dashboard settings",{userId:e,settings:t});const o=v(m,"users",e);return await k(o,{dashboardSettings:t,updatedAt:S()}),this.log("Dashboard settings updated successfully"),{success:!0}}catch(o){return this.error("Failed to update dashboard settings",o),{success:!1,error:o.message}}}async getDashboardSettings(e){try{this.log("Getting dashboard settings",{userId:e});const t=await D(v(m,"users",e));if(t.exists()){const i=t.data().dashboardSettings||this.getDefaultDashboardSettings();return this.log("Dashboard settings retrieved",i),{success:!0,settings:i}}else throw new Error("User profile not found")}catch(t){return this.error("Failed to get dashboard settings",t),{success:!1,error:t.message}}}getDefaultDashboardSettings(){return{layout:"grid",theme:"neo-brutalist",customColors:{primary:"#00ffff",secondary:"#ff00ff",accent:"#ffff00",background:"#0a0a0a",text:"#ffffff"},widgetDefaults:{borderColor:"#00ffff",borderWidth:"3px",borderRadius:"0px",width:"100%",height:"300px",shadow:"0 0 20px rgba(0, 255, 255, 0.3)"},spacing:{widgetGap:"24px",sectionPadding:"40px",cardPadding:"24px"},animations:{enabled:!0,duration:"0.3s",easing:"ease-out"}}}setupEventListeners(){}onAuthStateChanged(e){this.authStateListeners.push(e)}async handleUserLogin(e){this.log("Handling user login",{uid:e.uid});try{const t=await D(v(m,"users",e.uid));if(t.exists())this.userProfile=t.data(),this.log("User profile loaded",this.userProfile),this.updateUIForLoggedInUser(),this.setupNotificationListener(e.uid),this.dispatchAuthStateEvent(e,this.userProfile);else{this.log("User profile not found, creating default profile");const o={uid:e.uid,email:e.email,displayName:e.displayName||e.email?.split("@")[0],name:e.displayName||e.email?.split("@")[0],bio:"Welcome to inque! 🚀",photoURL:e.photoURL||this.getDefaultAvatar(),username:this.generateUsername(e.email),level:1,experience:0,type:"NEWB",role:"USER",followers:[],following:[],widgets:[],socialLinks:{},preferences:{theme:"auto",notifications:!0,privacy:"public",language:"en"},stats:{widgetsCreated:0,followersCount:0,followingCount:0,totalViews:0,totalLikes:0},createdAt:S(),lastActive:S(),isVerified:!1,isPremium:!1};await N(v(m,"users",e.uid),o),this.userProfile=o,this.updateUIForLoggedInUser(),this.setupNotificationListener(e.uid),this.dispatchAuthStateEvent(e,this.userProfile)}}catch(t){this.error("Error handling user login",t)}}async handleUserLogout(){this.log("Handling user logout"),this.userProfile=null,this.updateUIForLoggedOutUser(),this.notificationUnsubscribe&&this.notificationUnsubscribe()}updateUIForLoggedInUser(){this.log("Updating UI for logged in user"),this.dispatchAuthStateEvent(this.currentUser)}updateUIForLoggedOutUser(){this.log("Updating UI for logged out user"),this.dispatchAuthStateEvent(null)}updateProfileBanner(e,t=!1){this.log("Profile banner update delegated to ProfileHub")}updateSidebarUserInfo(e,t=!1,o=null){this.log("Sidebar user info update delegated to ProfileHub")}async markNotificationAsRead(e){try{const t=v(m,"notifications",e);await k(t,{read:!0}),this.log("Notification marked as read",{notificationId:e})}catch(t){this.error("Error marking notification as read",t)}}async markAllNotificationsAsRead(e){try{const t=Y(x(m,"notifications"),M("userId","==",e),M("read","==",!1)),i=(await ae(t)).docs.map(s=>k(s.ref,{read:!0}));await Promise.all(i),this.log("All notifications marked as read")}catch(t){this.error("Error marking all notifications as read",t)}}setupNotificationListener(e){this.log("Setting up notification listener",{userId:e}),this.notificationUnsubscribe&&this.notificationUnsubscribe();const{notificationCount:t,notificationList:o,markAllReadBtn:i}=this.domElements,s=Y(x(m,"notifications"),M("userId","==",e),re("timestamp","desc"),le(20));this.notificationUnsubscribe=ce(s,c=>{o&&(o.innerHTML="");let g=0,b=!1;if(c.forEach(f=>{const u={id:f.id,...f.data()};b=!0,u.read||g++;const r=this.createNotificationElement(u);o&&o.appendChild(r)}),t&&(t.textContent=g,t.style.display=g>0?"inline-block":"none"),i&&(i.style.display=g>0?"inline-block":"none"),!b&&o){const f=document.createElement("div");f.className="notification-item empty-notification",f.innerHTML='<span class="notification-text">No new notifications</span>',o.appendChild(f)}},c=>{this.error("Error listening to notifications",c)})}createNotificationElement(e){const t=document.createElement("div");t.className=`notification-item ${e.type} ${e.read?"read":"unread"}`,t.dataset.notificationId=e.id;const o=e.timestamp?new Date(e.timestamp.toDate()).toLocaleString():"Just now";return t.innerHTML=`
      <div class="notification-content">
        <div class="notification-header">
          <span class="notification-icon">${e.icon}</span>
          <span class="notification-title">${e.title}</span>
          ${e.read?"":'<span class="unread-indicator"></span>'}
        </div>
        <div class="notification-message">${e.message}</div>
        <div class="notification-time">${o}</div>
      </div>
      <button class="notification-close" aria-label="Dismiss notification">&times;</button>
    `,t.addEventListener("click",s=>{s.target.classList.contains("notification-close")||(this.markNotificationAsRead(e.id),this.handleNotificationAction(e))}),t.querySelector(".notification-close").addEventListener("click",s=>{s.stopPropagation(),t.remove()}),t}handleNotificationAction(e){switch(this.log("Handling notification action",{type:e.type}),e.type){case"mention":e.data.postId&&this.log("Navigate to post:",e.data.postId);break;case"like":e.data.postId&&this.log("Navigate to liked post:",e.data.postId);break;case"follow":e.data.followerId&&this.log("Navigate to follower profile:",e.data.followerId);break;case"widget":e.data.widgetId&&this.log("Open widget:",e.data.widgetId);break;default:this.log("Notification clicked:",e)}}showToast(e,t="info",o=5e3){this.log("Showing toast",{message:e,type:t,duration:o});const i=document.getElementById("toast-container");if(!i){this.log("Toast container not found");return}const s=document.createElement("div");s.className=`toast ${t}`,s.innerHTML=`
      <span class="toast-message">${e}</span>
      <button class="toast-close">&times;</button>
    `,i.appendChild(s),setTimeout(()=>s.classList.add("show"),100);const c=setTimeout(()=>{s.classList.remove("show"),setTimeout(()=>{s.parentNode&&s.parentNode.removeChild(s)},300)},o);s.querySelector(".toast-close").addEventListener("click",()=>{clearTimeout(c),s.classList.remove("show"),setTimeout(()=>{s.parentNode&&s.parentNode.removeChild(s)},300)})}}const h=new Se;window.socialAuth=h;document.addEventListener("DOMContentLoaded",()=>{h.init();const l=document.getElementById("authModal"),e=document.querySelector(".auth-close-button"),t=document.getElementById("loginForm"),o=document.getElementById("signUpForm"),i=document.getElementById("showSignUp"),s=document.getElementById("showLogin"),c=document.getElementById("authModalTitle"),g=document.getElementById("googleLoginBtn"),b=document.getElementById("githubLoginBtn"),f=document.getElementById("forgotPasswordForm");document.querySelector(".profile-pic-container"),document.querySelector(".profile-name"),document.querySelector(".profile-bio"),document.getElementById("profileLvl"),document.getElementById("profileType"),document.getElementById("profileRole"),document.getElementById("profileStatusIndicator"),document.getElementById("profileStatus");const u=document.getElementById("editProfileQuickBtn");document.getElementById("editProfileModal"),document.getElementById("editProfileForm"),document.getElementById("editPhoto"),document.querySelector(".edit-profile-close-button"),u&&u.addEventListener("click",()=>{console.log("[PROFILE EDIT] Edit profile quick button clicked"),window.openEditProfile?window.openEditProfile():h.showToast("Edit Profile not available","error")}),document.querySelector(".sidebar-avatar"),document.querySelector(".sidebar-user-name"),document.querySelector(".sidebar-user-email"),document.querySelector(".sidebar-user-status"),document.querySelector(".status-dot");const r=document.getElementById("sidebarLoginBtn");document.getElementById("sidebarUserActions");const a=document.getElementById("sidebarEditProfileBtn"),A=document.getElementById("sidebarLogoutBtn");document.querySelector(".sidebar-stats"),document.getElementById("sidebarLvl"),document.getElementById("sidebarType"),document.getElementById("sidebarRole"),document.getElementById("notificationCount"),document.getElementById("notificationList");const U=document.getElementById("markAllReadBtn"),P={name:"Welcome to inque!",bio:"This is a space to create, share, and display your interactive projects. Sign up to start building your personal widget dashboard.",lvl:"LVL • ?",type:"TYPE • ?",role:"ROLE • GUEST",photoURL:"https://i.pinimg.com/originals/3c/69/1d/3c691d9047d7fb33383a8b417c8e9b67.jpg"};i&&i.addEventListener("click",d=>{d.preventDefault(),console.log("Switching to sign up form"),t.style.display="none",o.style.display="block",f.style.display="none",c.textContent="Sign Up"}),s&&s.addEventListener("click",d=>{d.preventDefault(),console.log("Switching to login form"),o.style.display="none",t.style.display="block",f.style.display="none",c.textContent="Login"});const B=document.getElementById("showLoginFromForgot");B&&B.addEventListener("click",d=>{d.preventDefault(),console.log("Switching from forgot password to login form"),f.style.display="none",t.style.display="block",c.textContent="Login"}),r&&r.addEventListener("click",()=>{console.log("[SIDEBAR LOGIN] Login button clicked"),window.openAuthModal?window.openAuthModal("login"):(l.style.display="block",document.body.style.overflow="hidden")}),a&&a.addEventListener("click",()=>{console.log("[SIDEBAR EDIT PROFILE] Edit profile button clicked"),window.openEditProfile?window.openEditProfile():h.showToast("Edit Profile not available","error")}),e&&e.addEventListener("click",()=>{console.log("Closing auth modal"),l.style.display="none",document.body.style.overflow=""}),window.addEventListener("click",d=>{d.target===l&&(console.log("Closing auth modal via outside click"),l.style.display="none",document.body.style.overflow="")}),document.addEventListener("keydown",d=>{d.key==="Escape"&&l.style.display==="block"&&(console.log("Closing auth modal via escape key"),l.style.display="none",document.body.style.overflow="")}),A&&A.addEventListener("click",()=>{G(E).then(()=>{console.log("User signed out.")}).catch(d=>{console.error("Sign out error:",d)})});const $=async d=>{try{const y=await ee(E,d);console.log("Logged in with provider:",y.user)}catch(y){alert(y.message),console.error("Provider login error:",y)}};g&&g.addEventListener("click",()=>{$(new K)}),b&&b.addEventListener("click",()=>{$(new X)}),f&&f.addEventListener("submit",async d=>{d.preventDefault();const y=document.getElementById("forgotPasswordEmail").value,p=f.querySelector(".auth-submit-btn"),L=p?p.textContent:"RESET PASSWORD";try{p.textContent="Sending...",p.disabled=!0,await ue(E,y),h.showToast("Password reset email sent! Check your inbox.","success"),f.style.display="none",t.style.display="block",c.textContent="Login"}catch(w){console.error("Password reset error:",w);let I="Failed to send reset email. Please try again.";w.code==="auth/user-not-found"&&(I="No account found with this email address."),h.showToast(I,"error")}finally{p&&(p.textContent=L,p.disabled=!1)}}),o&&o.addEventListener("submit",async d=>{d.preventDefault();const y=document.getElementById("signUpEmail").value,p=document.getElementById("signUpPassword").value,L=o.querySelector(".auth-submit-btn");L&&L.textContent;try{L.textContent="Creating Account...",L.disabled=!0,typeof grecaptcha<"u"&&grecaptcha.enterprise?grecaptcha.enterprise.ready(async()=>{const C=await grecaptcha.enterprise.execute("6Ldt0YYrAAAAAKyNgAPO8Te96_m5innDHsSkppQc",{action:"SIGNUP"});console.log("reCAPTCHA token (Sign Up):",C)}):console.log("reCAPTCHA not available, proceeding without verification (development mode)");const I=(await J(E,y,p)).user;console.log("User created:",I.uid);const te={name:y.split("@")[0],bio:"A new user ready to create amazing things.",lvl:"LVL • 1",type:"TYPE • NEWB",role:"ROLE • USER",photoURL:P.photoURL,email:y,createdAt:S(),lastLogin:S()};console.log("Creating user profile in Firestore..."),await N(v(m,"users",I.uid),te),console.log("User profile created in Firestore");try{console.log("Creating widget slots in Storage...");const C=new Blob([`<html>
              <head><title>Widget Placeholder</title></head>
              <body style='display:flex;align-items:center;justify-content:center;height:100vh;background:#222;color:#fff;font-family:Arial,sans-serif;'>
                <div style='text-align:center;'>
                  <h2>Widget Placeholder</h2>
                  <p>This is a placeholder widget.</p>
                  <p>Upload your files to replace this!</p>
                  <img src='https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif' alt='Placeholder' style='max-width:200px;border-radius:10px;'/>
                </div>
              </body>
            </html>`],{type:"text/html"});for(let T=1;T<=3;T++){const oe=O(R,`users/${I.uid}/app-widget-${T}/index.html`);await F(oe,C),console.log(`Created widget slot ${T}`)}console.log("All widget slots created successfully")}catch(C){console.warn("Storage setup failed (this is okay for now):",C)}try{await h.createNotification(I.uid,{type:"system",title:"Welcome to inque! 🎉",message:"Your account has been created successfully. Start by uploading your first widget!",icon:"🎉"})}catch(C){console.warn("Failed to create welcome notification:",C)}console.log("Signup completed successfully!");const j=document.getElementById("authModal");j&&(j.style.display="none",document.body.style.overflow=""),h.showToast("Account created successfully! Welcome to inque! 🎉","success",5e3)}catch(w){console.error("Signup error:",w);let I="Signup failed. Please try again.";w.code==="auth/email-already-in-use"?I="This email is already registered. Please try logging in instead.":w.code==="auth/weak-password"?I="Password is too weak. Please choose a stronger password.":w.code==="auth/invalid-email"&&(I="Please enter a valid email address."),h.showToast(I,"error",5e3)}finally{L&&(L.textContent="Create Account",L.disabled=!1)}}),t&&t.addEventListener("submit",d=>{d.preventDefault(),typeof grecaptcha<"u"&&grecaptcha.enterprise?grecaptcha.enterprise.ready(async()=>{const p=await grecaptcha.enterprise.execute("6Ldt0YYrAAAAAKyNgAPO8Te96_m5innDHsSkppQc",{action:"LOGIN"});console.log("reCAPTCHA token (Login):",p),y()}):(console.log("reCAPTCHA not available, proceeding without verification (development mode)"),y());function y(){const p=document.getElementById("loginEmail").value,L=document.getElementById("loginPassword").value;Z(E,p,L).then(w=>{console.log("Logged in:",w.user)}).catch(w=>{alert(w.message),console.error("Login error:",w)})}}),A&&A.addEventListener("click",()=>{G(E).then(()=>{console.log("User signed out.")}).catch(d=>{console.error("Sign out error:",d)})}),U&&U.addEventListener("click",()=>{E.currentUser?(h.markAllNotificationsAsRead(E.currentUser.uid),h.showToast("All notifications marked as read!","success")):h.showToast("Please log in to mark all notifications as read.","info")});const H=document.getElementById("forgotPasswordLink");H&&H.addEventListener("click",d=>{d.preventDefault(),console.log("Forgot password link clicked"),t.style.display="none",o.style.display="none",f.style.display="block",c.textContent="Reset Password"}),document.querySelectorAll(".quick-action-btn").forEach(d=>{d.addEventListener("click",()=>{const y=d.getAttribute("data-action");console.log("Quick action clicked:",y);const p=()=>{if(window.sidebarHandler)window.sidebarHandler.closeSidebar();else{const L=document.querySelector(".sidebar-nav"),w=document.querySelector(".sidebar-overlay");L&&w&&(L.classList.remove("open"),w.classList.remove("show"),document.body.style.overflow="")}};switch(y){case"newWidget":h.showToast("Opening Widget Studio...","info"),p(),window.openWidgetStudio?(window.openWidgetStudio(),console.log("[QUICK ACTION] Widget Studio modal opened successfully")):h.showToast("Widget Studio not available","error");break;case"shareProfile":p(),navigator.share?navigator.share({title:"Check out my profile!",url:window.location.href}):(navigator.clipboard.writeText(window.location.href),h.showToast("Profile URL copied to clipboard!","success"));break;case"settings":p(),h.showToast("Settings panel opening...","info");break;case"testNotifications":p(),E.currentUser?h.showToast("Test notifications feature coming soon!","info"):h.showToast("Please log in to test notifications.","info");break;case"openChatbot":p(),h.showToast("Opening AI Assistant...","info"),typeof openChatbot=="function"?(openChatbot(),console.log("[QUICK ACTION] AI Assistant opened successfully")):(h.showToast("AI Assistant not available","error"),console.error("[QUICK ACTION] openChatbot function not found"));break;default:h.showToast(`Action "${y}" not implemented yet.`,"warning")}})})});const Te=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));export{ye as _,E as a,Te as b,m as d,Ce as f};
