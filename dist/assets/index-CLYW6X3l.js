import{initializeApp as ye}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-app.js";import{getAnalytics as be}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-analytics.js";import{getFirestore as ve,addDoc as Ee,collection as te,serverTimestamp as oe,doc as A,updateDoc as V,query as Se,where as Le,getDocs as ke,getDoc as q,deleteDoc as Ce,arrayRemove as Ie}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js";import{getAuth as Te,onAuthStateChanged as ie}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-auth.js";import{getStorage as Be}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-storage.js";import{getFunctions as Me,httpsCallable as O}from"https://www.gstatic.com/firebasejs/11.10.0/firebase-functions.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const a of n)if(a.type==="childList")for(const r of a.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function t(n){const a={};return n.integrity&&(a.integrity=n.integrity),n.referrerPolicy&&(a.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?a.credentials="include":n.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(n){if(n.ep)return;n.ep=!0;const a=t(n);fetch(n.href,a)}})();const Pe="modulepreload",Ae=function(o){return"/"+o},Y={},y=function(e,t,i){let n=Promise.resolve();if(t&&t.length>0){let u=function(c){return Promise.all(c.map(g=>Promise.resolve(g).then(h=>({status:"fulfilled",value:h}),h=>({status:"rejected",reason:h}))))};document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),l=r?.nonce||r?.getAttribute("nonce");n=u(t.map(c=>{if(c=Ae(c),c in Y)return;Y[c]=!0;const g=c.endsWith(".css"),h=g?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${h}`))return;const d=document.createElement("link");if(d.rel=g?"stylesheet":Pe,g||(d.as="script"),d.crossOrigin="",d.href=c,l&&d.setAttribute("nonce",l),document.head.appendChild(d),g)return new Promise((m,f)=>{d.addEventListener("load",m),d.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${c}`)))})}))}function a(r){const l=new Event("vite:preloadError",{cancelable:!0});if(l.payload=r,window.dispatchEvent(l),!l.defaultPrevented)throw r}return n.then(r=>{for(const l of r||[])l.status==="rejected"&&a(l.reason);return e().catch(a)})},s={log:(o,e=null)=>{console.log(`[MAIN DEBUG] ${o}`,e||"")},error:(o,e=null)=>{console.error(`[MAIN DEBUG ERROR] ${o}`,e||"")},warn:(o,e=null)=>{console.warn(`[MAIN DEBUG WARN] ${o}`,e||"")}};s.log("Starting enhanced inque social app initialization");window.authState={isInitialized:!1,lastLoginTime:null,hasShownWelcome:!1,currentUser:null};s.log("Importing firebase-core.js");try{y(()=>Promise.resolve().then(()=>E),void 0).then(o=>{o&&o.db?(window.db=o.db,s.log("firebase-core.js imported successfully (db exposed)")):s.warn("firebase-core.js imported but db was not found in exports")}).catch(o=>{s.error("Failed to import firebase-core.js",o)})}catch(o){s.error("Error importing firebase-core.js",o)}s.log("Importing enhanced auth system");try{y(()=>import("./auth-D3vBVk11.js"),[]).then(()=>{s.log("Enhanced auth system imported successfully")}).catch(o=>{s.error("Failed to import enhanced auth system",o)})}catch(o){s.error("Error importing enhanced auth system",o),s.log("Attempting fallback auth system load")}s.log("Importing enhanced widget upload system");try{y(()=>Promise.resolve().then(()=>de),void 0).then(()=>{s.log("Enhanced widget upload system imported successfully")}).catch(o=>{s.error("Failed to import enhanced widget upload system",o)})}catch(o){s.error("Error importing enhanced widget upload system",o)}s.log("Importing Firestore functions");try{y(()=>import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js"),[]).then(o=>{window.firestore=o,s.log("Firestore functions imported successfully")}).catch(o=>{s.error("Failed to import Firestore functions",o)})}catch(o){s.error("Error importing Firestore functions",o)}s.log("Importing social features");try{y(()=>Promise.resolve().then(()=>Lt),void 0).then(()=>{s.log("Social features imported successfully")}).catch(o=>{s.error("Failed to import social features",o)})}catch(o){s.error("Error importing social features",o)}s.log("Importing navigation system");try{y(()=>import("./navigation-CjmpSgsy.js"),[]).then(()=>{s.log("Navigation system imported successfully")}).catch(o=>{s.error("Failed to import navigation system",o)})}catch(o){s.error("Error importing navigation system",o)}s.log("Importing tools filter system");try{y(()=>import("./tools-filter-qyJYBFYl.js"),[]).then(()=>{s.log("Tools filter system imported successfully")}).catch(o=>{s.error("Failed to import tools filter system",o)})}catch(o){s.error("Error importing tools filter system",o)}s.log("Importing floating orb system");try{y(()=>Promise.resolve().then(()=>ct),void 0).then(()=>{s.log("Floating orb system imported successfully")}).catch(o=>{s.error("Failed to import floating orb system",o)})}catch(o){s.error("Error importing floating orb system",o)}document.addEventListener("DOMContentLoaded",async()=>{s.log("DOM Content Loaded - Starting enhanced initialization");try{xe(),De(),Ue(),We(),Re(),qe(),await D.init(),Ve(),Fe(),Ne(),ot(),Qe(),s.log("Enhanced initialization completed successfully"),Ke()}catch(o){s.error("Error during enhanced initialization",o)}});function xe(){s.log("Initializing authentication modal functionality");const o=document.getElementById("authModal"),e=document.querySelector(".auth-close-button"),t=document.getElementById("loginForm"),i=document.getElementById("signUpForm"),n=document.getElementById("showSignUp"),a=document.getElementById("showLogin"),r=document.getElementById("showLoginFromForgot"),l=document.getElementById("authModalTitle"),u=document.getElementById("forgotPasswordLink"),c=document.getElementById("forgotPasswordForm");if(!o||!e||!t||!i){s.warn("Some auth modal elements not found",{authModal:!!o,authCloseBtn:!!e,loginForm:!!t,signUpForm:!!i});return}n&&n.addEventListener("click",g=>{g.preventDefault(),s.log("Switching to sign up form"),t.style.display="none",i.style.display="block",c.style.display="none",l.textContent="Sign Up"}),a&&a.addEventListener("click",g=>{g.preventDefault(),s.log("Switching to login form"),i.style.display="none",t.style.display="block",c.style.display="none",l.textContent="Login"}),r&&r.addEventListener("click",g=>{g.preventDefault(),s.log("Switching from forgot password to login form"),c.style.display="none",t.style.display="block",l.textContent="Login"}),u&&u.addEventListener("click",g=>{g.preventDefault(),s.log("Switching to forgot password form"),t.style.display="none",i.style.display="none",c.style.display="block",l.textContent="Reset Password"}),e&&e.addEventListener("click",()=>{s.log("Closing auth modal"),o.style.display="none",document.body.style.overflow=""}),window.addEventListener("click",g=>{g.target===o&&(s.log("Closing auth modal via outside click"),o.style.display="none",document.body.style.overflow="")}),document.addEventListener("keydown",g=>{g.key==="Escape"&&o.style.display==="block"&&(s.log("Closing auth modal via escape key"),o.style.display="none",document.body.style.overflow="")}),s.log("Authentication modal functionality initialized")}function H(o){s.log("Updating home section for auth state",{userId:o?.uid});const e=document.getElementById("home-greeting"),t=document.getElementById("home-subtitle"),i=document.getElementById("guest-cta-section"),n=document.getElementById("user-quick-actions");if(o){if(e){const a=o.displayName||o.email?.split("@")[0]||"Developer";e.textContent=`welcome back, ${a}.`}t&&(t.textContent="Ready to build something amazing? Choose your path:"),i&&(i.style.display="none"),n&&(n.style.display="block")}else e&&(e.textContent="welcome home."),t&&(t.textContent="Join 1,200+ developers building the future with AI IDEs. Share your projects, learn from others, and showcase your creativity."),i&&(i.style.display="block"),n&&(n.style.display="none")}function De(){s.log("Initializing home section button handlers");const o=document.getElementById("guest-signup-btn"),e=document.getElementById("guest-login-btn");o&&o.addEventListener("click",()=>{s.log("Guest signup button clicked");const a=document.getElementById("authModal");a&&(a.style.display="block",document.body.style.overflow="hidden",setTimeout(()=>{const r=document.querySelector('[data-tab="signup"]');r&&r.click()},100))}),e&&e.addEventListener("click",()=>{s.log("Guest login button clicked");const a=document.getElementById("authModal");a&&(a.style.display="block",document.body.style.overflow="hidden",setTimeout(()=>{const r=document.querySelector('[data-tab="login"]');r&&r.click()},100))});const t=document.getElementById("explore-projects-btn"),i=document.getElementById("my-dashboard-btn"),n=document.getElementById("improve-craft-btn");t&&t.addEventListener("click",()=>{s.log("Explore projects button clicked"),window.location.href="pages/explore.html"}),i&&i.addEventListener("click",()=>{s.log("My dashboard button clicked"),window.location.href="pages/my-projects.html"}),n&&n.addEventListener("click",()=>{s.log("Improve craft button clicked"),ze()})}function ze(){if(s.log("Opening knowledge base"),!window.authState||!window.authState.currentUser){window.showToast("Please sign in to access the knowledge base","info");return}window.location.href="pages/knowledge-base.html"}const j={isInitialized:!1,updateInterval:null,lastUpdate:null,async init(){if(s.log("Initializing live stats manager"),this.isInitialized){s.log("Live stats already initialized");return}try{await this.loadAndUpdateStats(),this.updateInterval=setInterval(async()=>{await this.loadAndUpdateStats()},3e4),this.isInitialized=!0,s.log("Live stats manager initialized successfully")}catch(o){s.error("Failed to initialize live stats manager",o)}},async loadAndUpdateStats(){s.log("Loading live stats from Firestore");try{const o=document.querySelector(".live-stats-container");if(o&&o.classList.add("loading"),!window.firestore||!window.db){s.warn("Firestore not available yet, using fallback stats"),this.updateStatsDisplay({users:1247,widgets:856,posts:342});return}const e=await this.fetchStatsFromFirestore();this.updateStatsDisplay(e),this.updateLastUpdatedTime(),o&&o.classList.remove("loading")}catch(o){s.error("Failed to load live stats",o),this.updateStatsDisplay({users:1247,widgets:856,posts:342})}},async fetchStatsFromFirestore(){s.log("Fetching stats from Firestore collections");try{const o={};try{const e=window.firestore.collection(window.db,"users"),t=await window.firestore.getDocs(e);o.users=t.size,s.log("Users count fetched",{count:o.users})}catch(e){s.warn("Failed to fetch users count",e),o.users=1247}try{const e=window.firestore.collection(window.db,"widgets"),t=await window.firestore.getDocs(e);o.widgets=t.size,s.log("Widgets count fetched",{count:o.widgets})}catch(e){s.warn("Failed to fetch widgets count",e),o.widgets=856}try{o.posts=Math.floor(o.users*.28+o.widgets*.15),s.log("Posts count calculated",{count:o.posts})}catch(e){s.warn("Failed to calculate posts count",e),o.posts=342}return o}catch(o){return s.error("Error fetching stats from Firestore",o),{users:1247,widgets:856,posts:342}}},updateStatsDisplay(o){s.log("Updating stats display",o);const e=document.querySelector(".stats-grid");e&&(e.classList.add("updating"),setTimeout(()=>{e.classList.remove("updating")},1500)),setTimeout(()=>this.animateCounter("live-users-count",o.users),200),setTimeout(()=>this.animateCounter("live-widgets-count",o.widgets),400),setTimeout(()=>this.animateCounter("live-posts-count",o.posts),600),setTimeout(()=>this.updateTrendIndicators(o),800),this.addSparkleEffect()},animateCounter(o,e){const t=document.getElementById(o);if(!t){s.warn("Counter element not found",{elementId:o});return}const i=t.querySelector(".count-value");if(!i){s.warn("Count value span not found",{elementId:o});return}const n=parseInt(i.textContent)||0,a=e-n;if(a===0){s.log("No change in counter value",{elementId:o,value:e});return}s.log("Animating counter",{elementId:o,from:n,to:e}),i.classList.add("updating");const r=1500,l=50,u=a/l,c=r/l;let g=0;const h=()=>{if(g>=l){i.textContent=e.toLocaleString(),i.classList.remove("updating"),i.classList.add("bounce"),setTimeout(()=>{i.classList.remove("bounce")},400);return}const d=Math.round(n+u*g);i.textContent=d.toLocaleString(),g++,setTimeout(h,c)};h()},updateTrendIndicators(o){const e={users:Math.floor(Math.random()*20)+5,widgets:Math.floor(Math.random()*15)+3,posts:Math.floor(Math.random()*10)+2},t=document.querySelector('[data-stat="users"] .trend-text'),i=document.querySelector('[data-stat="widgets"] .trend-text'),n=document.querySelector('[data-stat="posts"] .trend-text');t&&(t.textContent=`+${e.users} this week`),i&&(i.textContent=`+${e.widgets} today`),n&&(n.textContent=`+${e.posts} this week`),this.updateHotIndicators(e,o)},updateHotIndicators(o,e){document.querySelectorAll(".hot-indicator").forEach(i=>i.remove());const t={users:15,widgets:10,posts:8};Object.keys(o).forEach(i=>{if(o[i]>=t[i]){const n=document.querySelector(`[data-stat="${i}"]`);if(n){const a=document.createElement("div");a.className="hot-indicator",a.style.cssText=`
            position: absolute;
            top: 8px;
            right: 8px;
            background: linear-gradient(135deg, #ff4444, #ff8800);
            color: white;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.7rem;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            animation: hot-pulse 1.5s ease-in-out infinite;
            box-shadow: 0 2px 8px rgba(255, 68, 68, 0.4);
            z-index: 10;
          `,a.textContent="🔥 HOT",n.appendChild(a)}}})},addSparkleEffect(){s.log("Adding sparkle effect to stats"),document.querySelectorAll(".live-stat-card").forEach((e,t)=>{setTimeout(()=>{const i=document.createElement("div");i.style.cssText=`
          position: absolute;
          top: 20px;
          right: 20px;
          font-size: 20px;
          color: var(--primary-neon);
          animation: sparkle 1s ease-out forwards;
          pointer-events: none;
          z-index: 10;
        `,i.textContent="✨",e.style.position="relative",e.appendChild(i),setTimeout(()=>{i.parentNode&&i.parentNode.removeChild(i)},1e3)},t*200)})},updateLastUpdatedTime(){const o=document.getElementById("stats-last-updated");if(o){const e=new Date,t=e.toLocaleTimeString("en-US",{hour12:!0,hour:"numeric",minute:"2-digit"});o.textContent=t,this.lastUpdate=e}},destroy(){this.updateInterval&&(clearInterval(this.updateInterval),this.updateInterval=null),this.isInitialized=!1,s.log("Live stats manager destroyed")}};function Ue(){s.log("Initializing live stats functionality"),setTimeout(async()=>{await j.init()},1e3),window.addEventListener("beforeunload",()=>{j.destroy()}),Oe();const o=document.getElementById("refresh-stats-btn");o&&(o.addEventListener("keydown",e=>{(e.key==="Enter"||e.key===" ")&&(e.preventDefault(),K())}),o.setAttribute("tabindex","0"),o.setAttribute("aria-label","Refresh live community statistics"))}function Oe(){s.log("Setting up stats card interactions"),document.querySelectorAll(".live-stat-card").forEach(t=>{t.addEventListener("click",()=>{const i=t.getAttribute("data-stat");J(i)}),t.setAttribute("tabindex","0"),t.setAttribute("role","button"),t.setAttribute("aria-label",`View details for ${t.getAttribute("data-stat")} statistics`),t.addEventListener("keydown",i=>{if(i.key==="Enter"||i.key===" "){i.preventDefault();const n=t.getAttribute("data-stat");J(n)}}),t.addEventListener("focus",()=>{t.style.transform="translateY(-2px)",t.style.borderColor="var(--primary-neon)"}),t.addEventListener("blur",()=>{t.style.transform="",t.style.borderColor=""})});const e=document.querySelector(".live-stats-container");if(e){let t=0;e.addEventListener("click",()=>{t++,t===1&&setTimeout(()=>{t===2&&(s.log("Double-click detected on stats container - refreshing"),K()),t=0},300)})}}function J(o){s.log("Stats card clicked",{statType:o});const t={users:"👥 Active developers building amazing projects with AI IDEs! Join the community to connect with fellow creators.",widgets:"🎨 Interactive widgets created by our talented community! Share your own creations in the Widget Studio.",posts:"📚 Knowledge base posts with tips, guides, and insights! Contribute your expertise to help others learn."}[o]||"Click to learn more about our growing community!";window.showToast(t,"info");const i=document.querySelector(`[data-stat="${o}"]`);i&&(i.style.transform="scale(0.98)",setTimeout(()=>{i.style.transform=""},150))}async function K(){s.log("Manual stats refresh triggered");const o=document.getElementById("refresh-stats-btn"),e=document.querySelector(".live-stats-container");o&&(o.classList.add("refreshing"),o.style.pointerEvents="none"),e&&e.classList.add("updating"),window.showToast("🔄 Refreshing live stats...","info");try{await j.loadAndUpdateStats(),e&&(e.classList.remove("updating"),e.classList.add("success"),setTimeout(()=>{e.classList.remove("success")},2e3)),window.showToast("✅ Stats updated successfully!","success")}catch(t){s.error("Manual stats refresh failed",t),e&&e.classList.remove("updating"),window.showToast("❌ Failed to refresh stats","error")}finally{o&&setTimeout(()=>{o.classList.remove("refreshing"),o.style.pointerEvents="auto"},1e3)}}window.manualRefreshStats=K;function Fe(){s.log("Initializing auth state tracking"),window.addEventListener("auth-state-changed",o=>{const{user:e,isNewLogin:t}=o.detail;s.log("Auth state change event received",{userId:e?.uid,isNewLogin:t,currentState:window.authState.isInitialized}),e&&!window.authState.isInitialized?(window.authState.isInitialized=!0,window.authState.currentUser=e,window.authState.lastLoginTime=Date.now(),t&&(window.authState.hasShownWelcome=!0,s.log("New login detected, will show welcome message"))):e||(window.authState.isInitialized=!1,window.authState.currentUser=null,window.authState.lastLoginTime=null,window.authState.hasShownWelcome=!1,s.log("User logged out, reset auth state")),H(e)}),setTimeout(()=>{window.authState&&window.authState.currentUser?H(window.authState.currentUser):H(null)},100),s.log("Auth state tracking initialized")}function Ne(){s.log("Initializing additional modals");const o=document.getElementById("widgetStudioModal"),e=document.querySelector(".widget-studio-close-button");if(o&&e){e.addEventListener("click",()=>{s.log("Closing Widget Studio modal"),o.style.display="none",document.body.style.overflow=""}),window.addEventListener("click",c=>{c.target===o&&(s.log("Closing Widget Studio modal via outside click"),o.style.display="none",document.body.style.overflow="")}),document.addEventListener("keydown",c=>{c.key==="Escape"&&o.style.display==="block"&&(s.log("Closing Widget Studio modal via escape key"),o.style.display="none",document.body.style.overflow="")});const r=document.getElementById("widgetFileInput"),l=document.getElementById("uploadedFiles"),u=document.getElementById("createWidgetBtn");r&&l&&u&&(r.addEventListener("change",c=>{const g=Array.from(c.target.files);s.log("Widget files selected",{count:g.length}),l.innerHTML="",g.forEach(d=>{const m=document.createElement("div");m.className="file-item",m.style.cssText="display: flex; align-items: center; gap: 10px; padding: 12px; background: rgba(0, 240, 255, 0.1); border-radius: 8px; border: 1px solid rgba(0, 240, 255, 0.2); margin-bottom: 8px;";const f=h(d.name);m.innerHTML=`
            <span style="font-size: 1.2rem;">${f}</span>
            <span style="flex: 1; color: var(--text-light); font-weight: 500;">${d.name}</span>
            <span style="color: var(--primary-color); font-size: 0.9rem; font-weight: 600;">${(d.size/1024).toFixed(1)} KB</span>
          `,l.appendChild(m)}),window.showToast(`${g.length} file${g.length>1?"s":""} selected successfully! 📁`,"success");function h(d){const m=d.split(".").pop().toLowerCase();return{html:"🌐",css:"🎨",js:"⚡",png:"🖼️",jpg:"🖼️",jpeg:"🖼️",gif:"🖼️",svg:"🖼️",json:"📋",txt:"📄",md:"📝"}[m]||"📁"}u.disabled=g.length===0}),u.addEventListener("click",async()=>{s.log("Create widget button clicked");try{if(Array.from(r.files).length===0){window.showToast("Please select files to create a widget","warning");return}u.disabled=!0,u.innerHTML='<span class="btn-loader">Creating...</span>',await new Promise(g=>setTimeout(g,2e3)),window.showToast("Widget created successfully! 🎉","success"),r.value="",l.innerHTML="",u.disabled=!0,setTimeout(()=>{const g=document.getElementById("widgetStudioModal");g&&(g.style.display="none",document.body.style.overflow="")},1500),s.log("Widget created successfully")}catch(c){s.error("Failed to create widget",c),window.showToast("Failed to create widget: "+c.message,"error")}finally{u.disabled=!1,u.innerHTML="Create Widget"}})),s.log("Widget Studio modal initialized")}const t=document.getElementById("editProfileModal"),i=document.querySelector(".edit-profile-close-button"),n=document.getElementById("editProfileForm"),a=document.getElementById("cancelEditBtn");if(t&&i){i.addEventListener("click",()=>{s.log("Closing Edit Profile modal"),t.style.display="none",document.body.style.overflow=""}),a&&a.addEventListener("click",()=>{s.log("Canceling profile edit"),t.style.display="none",document.body.style.overflow=""}),window.addEventListener("click",u=>{u.target===t&&(s.log("Closing Edit Profile modal via outside click"),t.style.display="none",document.body.style.overflow="")}),document.addEventListener("keydown",u=>{u.key==="Escape"&&t.style.display==="block"&&(s.log("Closing Edit Profile modal via escape key"),t.style.display="none",document.body.style.overflow=""),u.key==="Enter"&&u.ctrlKey&&t.style.display==="block"&&(u.preventDefault(),s.log("Form submission triggered via Ctrl+Enter"),n.dispatchEvent(new Event("submit")))}),n&&n.addEventListener("submit",async u=>{u.preventDefault(),s.log("Edit profile form submitted");const c=n.querySelector(".save-btn"),g=c.textContent;c.disabled=!0,c.innerHTML='<span class="btn-loader">Saving...</span>';try{const h=new FormData(n),d=document.getElementById("editDisplayName").value,m=document.getElementById("editBio").value,f=document.getElementById("editTwitter").value,b=document.getElementById("editInstagram").value,k=document.getElementById("editGithub").value,C=document.getElementById("editWebsite").value;if(!window.authState||!window.authState.currentUser){window.showToast("Please log in to update your profile","error");return}if(window.firestore&&window.firestore.doc&&window.firestore.updateDoc){const z=window.firestore.doc(db,"users",window.authState.currentUser.uid);await window.firestore.updateDoc(z,{name:d,bio:m,socialLinks:{twitter:f,instagram:b,github:k,website:C},updatedAt:new Date})}else throw new Error("Firestore functions not available");window.authState.currentUser&&(window.authState.currentUser.displayName=d),window.showToast(`Profile updated successfully! Welcome back, ${d}! ✨`,"success"),t.style.display="none",document.body.style.overflow="";const I=document.querySelector(".profile-name");I&&(I.textContent=d),s.log("Profile updated successfully",{displayName:d,bio:m})}catch(h){s.error("Failed to update profile",h),window.showToast("Failed to update profile: "+h.message,"error")}finally{c.disabled=!1,c.innerHTML=g}});const r=document.getElementById("editPhoto"),l=document.getElementById("photoPreview");r&&l&&r.addEventListener("change",u=>{const c=u.target.files[0];if(c){const g=new FileReader;g.onload=h=>{l.innerHTML=`<img src="${h.target.result}" alt="Profile preview" style="max-width: 100px; border-radius: 50%;" />`},g.readAsDataURL(c)}}),s.log("Edit Profile modal initialized")}window.openWidgetStudio=function(){s.log("Opening Widget Studio modal"),o?(s.log("Widget Studio modal found, opening..."),o.style.display="block",document.body.style.overflow="hidden",s.log("Widget Studio modal opened successfully")):(s.error("Widget Studio modal not found"),console.error("Widget Studio modal element not found in DOM"))},window.openEditProfile=function(){if(s.log("Opening Edit Profile modal"),t){s.log("Edit Profile modal found, opening..."),t.style.display="block",document.body.style.overflow="hidden";const r=document.getElementById("editDisplayName");document.getElementById("editBio"),r&&window.authState&&window.authState.currentUser?(r.value=window.authState.currentUser.displayName||"",s.log("Populated form with user data")):s.log("No user data available for form population"),s.log("Edit Profile modal opened successfully")}else s.error("Edit Profile modal not found"),console.error("Edit Profile modal element not found in DOM")},window.openChatbot=function(){s.log("Opening Chatbot card");const r=document.getElementById("chatbotCard");r?(r.classList.add("open"),r.classList.remove("minimized"),setTimeout(()=>{typeof initializeChatbot=="function"?(initializeChatbot(),s.log("Chatbot initialized successfully")):s.warn("initializeChatbot function not found")},100),s.log("Chatbot card opened successfully")):(s.error("Chatbot card not found"),console.error("Chatbot card element not found in DOM"))},window.openWorkflowManager=function(){s.log("Opening Workflow Manager modal");const r=document.getElementById("workflowManagerModal");r?(r.style.display="block",setTimeout(()=>{typeof initializeWorkflowManager=="function"?(initializeWorkflowManager(),s.log("Workflow Manager initialized successfully")):s.warn("initializeWorkflowManager function not found")},100),s.log("Workflow Manager modal opened successfully")):(s.error("Workflow Manager modal not found"),console.error("Workflow Manager modal element not found in DOM"))},s.log("Additional modals initialization completed"),window.debugModals=function(){const r=document.getElementById("chatbotCard");s.log("=== MODAL DEBUG INFO ==="),s.log("Widget Studio Modal:",{element:!!o,display:o?o.style.display:"N/A",id:o?o.id:"N/A"}),s.log("Edit Profile Modal:",{element:!!t,display:t?t.style.display:"N/A",id:t?t.id:"N/A"}),s.log("Chatbot Card:",{element:!!r,classes:r?r.className:"N/A",id:r?r.id:"N/A"}),s.log("Global functions:",{openWidgetStudio:typeof window.openWidgetStudio,openEditProfile:typeof window.openEditProfile,openChatbot:typeof window.openChatbot}),s.log("=== END MODAL DEBUG ===")}}function We(){document.querySelectorAll(".password-toggle").forEach(e=>{e.addEventListener("click",t=>{t.preventDefault();const i=e.previousElementSibling,n=i.type==="password"?"text":"password";i.type=n,e.textContent=n==="password"?"👁️":"🙈",s.log("Password visibility toggled",{type:n})})}),s.log("Password toggles initialized")}function Re(){const o=document.getElementById("signUpUsername");if(o){let i;o.addEventListener("input",()=>{clearTimeout(i),i=setTimeout(()=>{$e(o.value)},500)})}const e=document.getElementById("signUpPassword");e&&e.addEventListener("input",()=>{He(e.value)});const t=document.getElementById("confirmPassword");t&&t.addEventListener("input",()=>{_e()}),s.log("Form validation initialized")}async function $e(o){const e=document.getElementById("usernameAvailability");if(!(!e||!o)){e.className="username-availability checking",e.textContent="Checking availability...";try{await new Promise(i=>setTimeout(i,1e3));const t=!o.toLowerCase().includes("test");e.className=`username-availability ${t?"available":"unavailable"}`,e.textContent=t?"Username available":"Username taken",s.log("Username availability checked",{username:o,isAvailable:t})}catch(t){e.className="username-availability unavailable",e.textContent="Error checking availability",s.error("Username availability check failed",t)}}}function He(o){const e=document.getElementById("passwordStrength");if(!e)return;let t=0;o.length>=8&&t++,/[a-z]/.test(o)&&t++,/[A-Z]/.test(o)&&t++,/[0-9]/.test(o)&&t++,/[^A-Za-z0-9]/.test(o)&&t++;const i=["weak","medium","strong","very-strong"],n=["Weak","Medium","Strong","Very Strong"];e.className=`password-strength ${i[Math.min(t-1,3)]}`,e.textContent=n[Math.min(t-1,3)]||"Weak"}function _e(){const o=document.getElementById("signUpPassword"),e=document.getElementById("confirmPassword"),t=document.getElementById("signUpSubmitBtn");if(!o||!e||!t)return;const i=o.value===e.value;t.disabled=!i,e.value&&!i?e.style.borderColor="#f44336":e.style.borderColor=""}function qe(){document.addEventListener("click",o=>{if(o.target.matches(".follow-btn")){o.preventDefault();const e=o.target.dataset.userId,t=o.target.dataset.following==="true";o.target.dataset.following=(!t).toString(),o.target.textContent=t?"Follow":"Following",o.target.className=t?"follow-btn":"follow-btn following",s.log("Follow button clicked",{userId:e,isFollowing:t})}}),document.addEventListener("click",o=>{if(o.target.matches(".like-btn")){o.preventDefault();const e=o.target.dataset.widgetId,t=o.target.dataset.liked==="true";o.target.dataset.liked=(!t).toString(),o.target.innerHTML=t?"🤍 Like":"❤️ Liked",o.target.className=t?"like-btn":"like-btn liked",s.log("Like button clicked",{widgetId:e,isLiked:t})}}),document.addEventListener("click",o=>{o.target.matches("#editProfileSocialBtn")&&(o.preventDefault(),s.log("Edit profile social button clicked"),window.openEditProfile&&window.openEditProfile()),o.target.matches("#shareProfileBtn")&&(o.preventDefault(),s.log("Share profile button clicked"),je()),o.target.matches("#viewActivityBtn")&&(o.preventDefault(),s.log("View activity button clicked"),Ge())}),s.log("Social interactions initialized")}let D={currentUser:null,socialFeatures:null,debugMode:!0,async init(){s.log("Initializing social stats manager");try{await this.waitForSocialFeatures(),this.setupAuthListener(),s.log("Social stats manager initialized successfully")}catch(o){s.error("Failed to initialize social stats manager",o)}},async waitForSocialFeatures(){let o=0;const e=50;for(;o<e;){if(window.socialFeatures){this.socialFeatures=window.socialFeatures,s.log("Social features found for stats manager",{attempts:o});return}this.debugMode&&console.log(`[SOCIAL STATS] Waiting for social features... attempt ${o+1}/${e}`),await new Promise(t=>setTimeout(t,100)),o++}throw new Error("Social features not available after maximum attempts")},setupAuthListener(){document.addEventListener("authStateChanged",async o=>{s.log("Auth state changed event received in stats manager",o.detail),await this.handleAuthStateChange(o.detail)}),window.authState&&window.authState.currentUser&&this.handleAuthStateChange(window.authState.currentUser)},async handleAuthStateChange(o){s.log("Handling auth state change in stats manager",{userId:o?.uid}),o?(this.currentUser=o,await this.loadAndDisplaySocialData(o.uid),this.showSocialElements(!0)):(this.currentUser=null,this.showSocialElements(!1),this.clearSocialData())},async loadAndDisplaySocialData(o){try{s.log("Loading social data for user",o),await this.socialFeatures.loadUserSocialData(o);const e=await this.getUserStats(o);this.updateSocialStats(e),s.log("Social data loaded and displayed successfully")}catch(e){s.error("Failed to load social data",e)}},async getUserStats(o){try{const{db:e}=await y(async()=>{const{db:f}=await Promise.resolve().then(()=>E);return{db:f}},void 0),{doc:t,getDoc:i,collection:n,query:a,where:r,getDocs:l}=await y(async()=>{const{doc:f,getDoc:b,collection:k,query:C,where:I,getDocs:z}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:f,getDoc:b,collection:k,query:C,where:I,getDocs:z}},[]),u=await i(t(e,"users",o)),c=u.exists()?u.data():{},g=a(n(e,"widgets"),r("userId","==",o)),h=await l(g),d=h.size;let m=0;return h.forEach(f=>{const b=f.data();m+=b.stats?.likes||0}),{followers:this.socialFeatures.followers.size,following:this.socialFeatures.following.size,widgets:d,likes:m,displayName:c.displayName||"User",bio:c.bio||""}}catch(e){return s.error("Failed to get user stats",e),{followers:0,following:0,widgets:0,likes:0,displayName:"User",bio:""}}},updateSocialStats(o){s.log("Updating social stats in UI",o);const e=document.getElementById("profileFollowers");e&&(e.textContent=o.followers);const t=document.getElementById("profileFollowing");t&&(t.textContent=o.following);const i=document.getElementById("profileWidgets");i&&(i.textContent=o.widgets);const n=document.getElementById("profileLikes");if(n&&(n.textContent=o.likes),o.displayName&&o.displayName!=="User"){const a=document.getElementById("profileName");a&&(a.textContent=o.displayName)}if(o.bio){const a=document.getElementById("profileBio");a&&(a.textContent=o.bio)}},showSocialElements(o){const e=document.getElementById("profileSocialStats"),t=document.getElementById("profileSocialActions");e&&(e.style.display=o?"flex":"none"),t&&(t.style.display=o?"flex":"none")},clearSocialData(){s.log("Clearing social data from UI"),["profileFollowers","profileFollowing","profileWidgets","profileLikes"].forEach(e=>{const t=document.getElementById(e);t&&(t.textContent="0")})}};async function je(){try{if(!D.currentUser){window.showToast("Please log in to share your profile","error");return}const o=`${window.location.origin}/profile/${D.currentUser.uid}`,e="Check out my profile on inque!";navigator.share?await navigator.share({title:"My inque Profile",text:e,url:o}):(await navigator.clipboard.writeText(`${e}
${o}`),window.showToast("Profile link copied to clipboard!","success")),s.log("Profile shared successfully")}catch(o){s.error("Failed to share profile",o),window.showToast("Failed to share profile","error")}}function Ge(){s.log("Showing user activity"),window.showToast("Activity feature coming soon! Check back for updates.","info")}window.testSocialFeatures=function(){s.log("Testing social features..."),console.log("Social Stats Manager:",D),console.log("Window Social Features:",window.socialFeatures),console.log("Social Stats Elements:",{followers:document.getElementById("profileFollowers"),following:document.getElementById("profileFollowing"),widgets:document.getElementById("profileWidgets"),likes:document.getElementById("profileLikes"),socialStats:document.getElementById("profileSocialStats"),socialActions:document.getElementById("profileSocialActions")}),D.currentUser?console.log("Current User:",D.currentUser):console.log("No current user - try logging in first")};function Ve(){document.querySelectorAll(".modal").forEach(t=>{t.addEventListener("show.bs.modal",()=>{t.querySelector(".modal-content").style.animation="slideInUp 0.3s ease-out"})}),document.querySelectorAll(".auth-form").forEach(t=>{t.addEventListener("submit",i=>{const n=t.querySelector(".auth-submit-btn");n&&(n.classList.add("loading"),n.querySelector(".btn-text").style.display="none",n.querySelector(".btn-loader").style.display="inline-block")})}),window.showToast=function(t,i="info",n=5e3){s.log(`Showing toast notification: ${i} - ${t}`);const a=document.createElement("div");a.className=`toast ${i}`,a.innerHTML=`
      <span class="toast-message">${t}</span>
      <button class="toast-close">&times;</button>
    `;const r=document.getElementById("toast-container")||document.body;document.getElementById("toast-container")||s.warn("Toast container not found, appending to body"),r.appendChild(a),s.log("Toast element created and added to DOM"),setTimeout(()=>{a.classList.add("show"),s.log("Toast animation triggered")},100),setTimeout(()=>{a.classList.remove("show"),s.log("Toast auto-removal started"),setTimeout(()=>{a.parentNode&&(a.parentNode.removeChild(a),s.log("Toast element removed from DOM"))},300)},n),a.querySelector(".toast-close").addEventListener("click",()=>{s.log("Toast manually closed by user"),a.classList.remove("show"),setTimeout(()=>{a.parentNode&&(a.parentNode.removeChild(a),s.log("Toast element removed from DOM after manual close"))},300)}),s.log(`Toast notification displayed successfully: ${i} - ${t}`)},s.log("Enhanced UI features initialized")}function Ke(){sessionStorage.getItem("isNewUser")&&!window.authState.hasShownWelcome&&setTimeout(()=>{window.showToast("Welcome to inque! 🎉 Start by uploading your first widget!","success",8e3),sessionStorage.removeItem("isNewUser"),window.authState.hasShownWelcome=!0,s.log("Welcome message shown for new user")},2e3)}function Qe(){s.log("Initializing header quick actions and sidebar login bindings");try{const o=document.getElementById("tutorialBtn");o?(o.addEventListener("click",c=>{c.preventDefault(),c.stopPropagation(),s.log("Tutorial button clicked"),window.showToast?window.showToast("Tutorial feature coming soon! This will explain everything about inque.","info",5e3):alert("Tutorial feature coming soon! This will explain everything about inque.")}),s.log("Tutorial button listener attached successfully")):s.warn("Tutorial button not found in DOM");const e=document.getElementById("editProfileQuickBtn");e?(e.addEventListener("click",c=>{if(c.preventDefault(),c.stopPropagation(),s.log("Edit Profile quick button clicked"),window.openEditProfile)window.openEditProfile(),s.log("Edit Profile modal opened via global function");else{s.warn("openEditProfile global function not available, using fallback");const g=document.getElementById("editProfileModal");g?(g.style.display="block",document.body.style.overflow="hidden",s.log("Edit Profile modal shown via fallback")):(s.error("Edit Profile modal not found"),window.showToast&&window.showToast("Edit Profile not available","error"))}}),s.log("Edit Profile quick button listener attached successfully")):s.warn("Edit Profile quick button not found in DOM");const t=document.getElementById("sidebarLoginBtn");t?(t.addEventListener("click",c=>{if(c.preventDefault(),c.stopPropagation(),s.log("Sidebar Login button clicked"),window.openAuthModal)window.openAuthModal("login"),s.log("Auth modal opened via global function");else{s.warn("openAuthModal global function not available, using fallback");const g=document.getElementById("authModal");g?(g.style.display="block",document.body.style.overflow="hidden",s.log("Auth modal shown via fallback")):(s.error("Auth modal not found"),window.showToast&&window.showToast("Login not available","error"))}}),s.log("Sidebar login button listener attached successfully")):s.warn("Sidebar login button not found in DOM");const i=document.querySelector('[data-action="openChatbot"]');i?(i.addEventListener("click",c=>{c.preventDefault(),c.stopPropagation(),s.log("AI Assistant button clicked"),typeof openChatbot=="function"?(openChatbot(),s.log("AI Assistant opened successfully")):(s.error("openChatbot function not found"),window.showToast&&window.showToast("AI Assistant not available","error"))}),s.log("AI Assistant button listener attached successfully")):s.warn("AI Assistant button not found in DOM");const n=document.querySelectorAll(".nav-btn[data-page]");n.length>0?(n.forEach(c=>{c.addEventListener("click",()=>{const g=c.getAttribute("data-page");if(g)switch(s.log("Profile navigation button clicked",{page:g}),g){case"about":window.location.href="core/personal/about.html";break;case"explore":window.location.href="pages/explore.html";break;case"inventory":window.location.href="pages/inventory.html";break;default:s.warn("Unknown page navigation",{page:g})}})}),s.log("Profile navigation buttons initialized",{count:n.length})):s.warn("Profile navigation buttons not found in DOM");const a=document.getElementById("profileLoginBtn");if(a){const c=()=>{const g=window.authState&&window.authState.isInitialized;a.style.display=g?"none":"inline-flex",s.log("Profile login button visibility updated",{isLoggedIn:g})};c(),window.addEventListener("auth-state-changed",()=>{s.log("Auth state changed, updating profile login button"),c()}),a.addEventListener("click",()=>{if(s.log("Profile login button clicked"),window.openAuthModal)window.openAuthModal("login");else{const g=document.getElementById("authModal");g?(g.style.display="block",document.body.style.overflow="hidden",s.log("Auth modal shown via fallback")):s.error("Auth modal not found")}}),s.log("Profile login button listener attached successfully")}else s.log("Profile login button not found (this is normal on pages without login forms)");const r=document.getElementById("collapseProfileBtn"),l=document.getElementById("profile-banner");if(r&&l){const c=r.querySelector(".collapse-icon");let g=!1;c?(r.addEventListener("click",()=>{g=!g,s.log("Profile banner collapse toggled",{collapsed:g}),g?(l.classList.add("collapsed"),l.style.maxHeight="120px",l.style.overflow="hidden",r.classList.add("collapsed"),c.textContent="▲"):(l.classList.remove("collapsed"),l.style.maxHeight="none",l.style.overflow="visible",r.classList.remove("collapsed"),c.textContent="▼")}),s.log("Profile banner collapse functionality initialized")):s.warn("Profile banner collapse icon not found")}else s.warn("Profile banner collapse elements not found",{collapseBtn:!!r,profileBanner:!!l});const u=document.getElementById("leaveNoteBtn");u?(u.addEventListener("click",c=>{c.preventDefault(),c.stopPropagation(),s.log("Leave a Note button clicked"),window.showToast?window.showToast("Leave a Note feature coming soon! This will let you leave messages in the yearbook.","info",5e3):alert("Leave a Note feature coming soon! This will let you leave messages in the yearbook.")}),s.log("Leave a Note button listener attached successfully")):s.warn("Leave a Note button not found in DOM"),s.log("Header quick actions initialization completed successfully"),Ye()}catch(o){s.error("Error during header quick actions initialization",o)}}function Ye(){s.log("Validating button states...");const o=[{id:"tutorialBtn",name:"Tutorial Button"},{id:"editProfileQuickBtn",name:"Edit Profile Quick Button"},{id:"sidebarLoginBtn",name:"Sidebar Login Button"},{id:"leaveNoteBtn",name:"Leave a Note Button"},{id:"collapseProfileBtn",name:"Profile Collapse Button"}],e=[],t=[];o.forEach(a=>{document.getElementById(a.id)?t.push(a.name):e.push(a.name)}),t.length>0&&s.log("✅ Working buttons",t),e.length>0&&s.warn("⚠️ Missing buttons",e),document.querySelector('[data-action="openChatbot"]')?s.log("✅ AI Assistant button found"):s.log("AI Assistant button not found (this is normal on pages without chatbot)");const n=document.querySelectorAll(".nav-btn[data-page]");n.length>0?s.log("✅ Profile navigation buttons found",{count:n.length}):s.log("Profile navigation buttons not found (this is normal on pages without profile navigation)")}window.openAuthModal=function(o="login"){s.log("Opening auth modal",{formType:o});const e=document.getElementById("authModal"),t=document.getElementById("loginForm"),i=document.getElementById("signUpForm"),n=document.getElementById("authModalTitle");e&&t&&i&&n?(o==="signup"?(t.style.display="none",i.style.display="block",n.textContent="Sign Up"):(i.style.display="none",t.style.display="block",n.textContent="Login"),e.style.display="block",document.body.style.overflow="hidden",s.log("Auth modal opened successfully",{formType:o})):s.error("Failed to open auth modal - elements not found")};s.log("Initializing enhanced scroll and fullscreen functionality");window.fullscreenState={isFullscreen:!1,originalScrollPosition:0,isInitialized:!1};function Je(){s.log("Setting up enhanced scroll and fullscreen features");try{createFullscreenToggleButton(),setupScrollEventListeners(),Ze(),Xe(),window.fullscreenState.isInitialized=!0,s.log("Enhanced scroll and fullscreen features initialized successfully")}catch(o){s.error("Failed to initialize enhanced scroll and fullscreen features",o)}}function Ze(){s.log("Setting up keyboard shortcuts for fullscreen"),document.addEventListener("keydown",o=>{o.key==="F11"&&(o.preventDefault(),s.log("F11 key pressed - toggling fullscreen"),toggleFullscreenMode()),o.key==="Escape"&&window.fullscreenState.isFullscreen&&(s.log("Escape key pressed - exiting fullscreen"),toggleFullscreenMode()),o.ctrlKey&&o.shiftKey&&o.key==="D"&&(o.preventDefault(),et(),s.log("Debug mode toggled via keyboard shortcut"))}),s.log("Keyboard shortcuts setup complete")}function Xe(){s.log("Initializing scroll position restoration"),window.addEventListener("load",()=>{const o=sessionStorage.getItem("scrollPosition");o&&setTimeout(()=>{window.scrollTo(0,parseInt(o)),s.log("Scroll position restored from session storage",{position:o})},100)}),window.addEventListener("beforeunload",()=>{sessionStorage.setItem("scrollPosition",window.pageYOffset.toString()),s.log("Scroll position saved to session storage",{position:window.pageYOffset})}),s.log("Scroll position restoration initialized")}function et(){const o=document.body;o.classList.contains("debug-mode")?(o.classList.remove("debug-mode"),s.log("Debug mode disabled"),window.showToast&&window.showToast("Debug mode disabled","info",2e3)):(o.classList.add("debug-mode"),s.log("Debug mode enabled"),window.showToast&&window.showToast("Debug mode enabled - Press Ctrl+Shift+D to toggle","success",3e3))}function tt(){s.log("Setting up smooth scrolling for anchor links"),document.addEventListener("click",o=>{const e=o.target.closest('a[href^="#"]');if(e){o.preventDefault();const t=e.getAttribute("href").substring(1),i=document.getElementById(t);if(i){const n=document.querySelector("header")?.offsetHeight||0,a=i.offsetTop-n-20;window.scrollTo({top:a,behavior:"smooth"}),s.log("Smooth scroll to element",{targetId:t,position:a})}}}),s.log("Smooth scrolling setup complete")}window.toggleFullscreen=function(){s.log("Fullscreen toggle called via global function"),toggleFullscreenMode()};window.isFullscreen=function(){return window.fullscreenState.isFullscreen};window.enterFullscreen=function(){window.fullscreenState.isFullscreen||(s.log("Entering fullscreen via global function"),toggleFullscreenMode())};window.exitFullscreen=function(){window.fullscreenState.isFullscreen&&(s.log("Exiting fullscreen via global function"),toggleFullscreenMode())};document.addEventListener("DOMContentLoaded",()=>{s.log("DOM Content Loaded - Initializing enhanced scroll and fullscreen features"),setTimeout(()=>{Je(),tt()},500)});s.log("Enhanced scroll and fullscreen functionality loaded");s.log("Setting up global compatibility functions");window.testVibeCodersIntegration=function(){s.log("Testing inQ platform integration"),window.navigationManager?s.log("✅ Navigation manager available"):s.warn("⚠️ Navigation manager not available"),window.toolsFilterManager?s.log("✅ Tools filter manager available"):s.warn("⚠️ Tools filter manager not available"),window.authState&&window.authState.isInitialized?s.log("✅ Auth system initialized"):s.log("Auth system not initialized (this is normal during startup)"),window.showToast&&window.showToast("inQ Platform integration test completed! 🎉","success",3e3),s.log("inQ platform integration test completed")};function ot(){s.log("Initializing banner customization functionality");try{const o=document.getElementById("bannerCustomizationModal"),e=document.getElementById("bannerCustomizationCloseBtn"),t=document.getElementById("customizeBannerBtn"),i=document.getElementById("saveBannerBtn"),n=document.getElementById("resetBannerBtn");if(!o||!e||!t){s.warn("Some banner customization elements not found",{bannerModal:!!o,bannerCloseBtn:!!e,customizeBannerBtn:!!t});return}t.addEventListener("click",l=>{l.preventDefault(),s.log("Opening banner customization modal"),o.style.display="block",document.body.style.overflow="hidden",Z()}),e.addEventListener("click",()=>{s.log("Closing banner customization modal"),o.style.display="none",document.body.style.overflow=""}),window.addEventListener("click",l=>{l.target===o&&(s.log("Closing banner customization modal via outside click"),o.style.display="none",document.body.style.overflow="")}),document.addEventListener("keydown",l=>{l.key==="Escape"&&o.style.display==="block"&&(s.log("Closing banner customization modal via escape key"),o.style.display="none",document.body.style.overflow="")});const a=document.querySelectorAll(".layout-option");a.forEach(l=>{l.addEventListener("click",u=>{u.preventDefault(),s.log("Layout option clicked",{layout:l.dataset.layout}),a.forEach(c=>c.classList.remove("active")),l.classList.add("active"),N(l.dataset.layout)})});const r=document.querySelectorAll(".theme-option");r.forEach(l=>{l.addEventListener("click",u=>{u.preventDefault(),s.log("Theme option clicked",{theme:l.dataset.theme}),r.forEach(c=>c.classList.remove("active")),l.classList.add("active"),W(l.dataset.theme)})}),i&&i.addEventListener("click",l=>{l.preventDefault(),s.log("Saving banner customization"),it()}),n&&n.addEventListener("click",l=>{l.preventDefault(),s.log("Resetting banner customization"),nt()}),window.openProfileCustomization=function(){s.log("Opening profile customization via global function"),o&&(o.style.display="block",document.body.style.overflow="hidden",Z())},lt(),s.log("Banner customization functionality initialized successfully")}catch(o){s.error("Error initializing banner customization",o)}}function Z(){s.log("Populating banner customization options");try{const o=document.getElementById("quickLinksCustomization");if(!o){s.warn("Quick links customization container not found");return}const e=[{id:"projects",label:"📊 Projects",href:"pages/my-projects.html",enabled:!0},{id:"studio",label:"🎨 Studio",href:"pages/widget_studio.html",enabled:!0},{id:"explore",label:"🔍 Explore",href:"pages/explore.html",enabled:!0},{id:"community",label:"👥 Community",href:"pages/users.html",enabled:!0},{id:"inventory",label:"📦 Inventory",href:"pages/inventory.html",enabled:!1},{id:"profile",label:"👤 Profile",href:"pages/profile-edit.html",enabled:!1}];o.innerHTML="",e.forEach(t=>{const i=document.createElement("div");i.className="quick-link-option",i.style.cssText=`
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 12px;
        background: var(--bg-tertiary);
        border: 1px solid var(--primary-neon);
        border-radius: 6px;
        margin-bottom: 8px;
      `,i.innerHTML=`
        <input 
          type="checkbox" 
          id="link-${t.id}" 
          ${t.enabled?"checked":""}
          style="margin: 0;"
        >
        <label for="link-${t.id}" style="color: var(--text-primary); cursor: pointer; flex: 1;">
          ${t.label}
        </label>
        <span style="color: var(--text-secondary); font-size: 0.8rem;">
          ${t.enabled?"Enabled":"Disabled"}
        </span>
      `,o.appendChild(i)}),s.log("Customization options populated successfully")}catch(o){s.error("Error populating customization options",o)}}function N(o){s.log("Applying banner layout",{layout:o});try{const e=document.getElementById("profileBanner"),t=e?.querySelector(".banner-user-section"),i=e?.querySelector(".banner-quick-links"),n=e?.querySelector(".banner-actions");if(!e){s.warn("Profile banner not found");return}switch(e.style.flexDirection="row",e.style.gap="20px",e.style.padding="12px 20px",o){case"horizontal":e.style.flexDirection="row",e.style.gap="20px";break;case"compact":e.style.flexDirection="row",e.style.gap="12px",e.style.padding="8px 16px";break;case"minimal":e.style.flexDirection="column",e.style.gap="8px",e.style.padding="16px 20px";break}s.log("Banner layout applied successfully",{layout:o})}catch(e){s.error("Error applying banner layout",e)}}function W(o){s.log("Applying banner theme",{theme:o});try{const e=document.getElementById("profileBanner"),t=e?.querySelectorAll(".banner-quick-link");if(!e){s.warn("Profile banner not found");return}switch(e.style.background="linear-gradient(135deg, var(--bg-secondary) 0%, var(--bg-tertiary) 100%)",e.style.borderColor="var(--primary-neon)",o){case"neon":e.style.background="linear-gradient(135deg, var(--bg-secondary) 0%, var(--bg-tertiary) 100%)",e.style.borderColor="var(--primary-neon)";break;case"monochrome":e.style.background="linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%)",e.style.borderColor="#ffffff";break;case"pastel":e.style.background="linear-gradient(135deg, #2a1a2a 0%, #3a2a3a 100%)",e.style.borderColor="#ff69b4";break}s.log("Banner theme applied successfully",{theme:o})}catch(e){s.error("Error applying banner theme",e)}}function it(){s.log("Saving banner customization");try{const o=document.querySelector(".layout-option.active")?.dataset.layout||"horizontal",e=document.querySelector(".theme-option.active")?.dataset.theme||"neon",t=[];document.querySelectorAll("#quickLinksCustomization input[type='checkbox']:checked").forEach(l=>{const u=l.id.replace("link-","");t.push(u)});const n={layout:o,theme:e,enabledLinks:t,lastUpdated:new Date().toISOString()};localStorage.setItem("bannerCustomization",JSON.stringify(n)),N(o),W(e),Q(t),window.showToast&&window.showToast("Banner customization saved! 🎨","success",3e3);const a=document.getElementById("bannerCustomizationIndicator");a&&(a.style.display="block",setTimeout(()=>{a.style.display="none"},3e3));const r=document.getElementById("bannerCustomizationModal");r&&(r.style.display="none",document.body.style.overflow=""),s.log("Banner customization saved successfully",n)}catch(o){s.error("Error saving banner customization",o),window.showToast&&window.showToast("Failed to save banner customization","error")}}function nt(){s.log("Resetting banner customization");try{localStorage.removeItem("bannerCustomization"),N("horizontal"),W("neon"),Q(["projects","studio","explore","community"]),document.querySelectorAll(".layout-option").forEach(t=>{t.classList.remove("active"),t.dataset.layout==="horizontal"&&t.classList.add("active")}),document.querySelectorAll(".theme-option").forEach(t=>{t.classList.remove("active"),t.dataset.theme==="neon"&&t.classList.add("active")}),window.showToast&&window.showToast("Banner customization reset! 🔄","info",3e3),s.log("Banner customization reset successfully")}catch(o){s.error("Error resetting banner customization",o),window.showToast&&window.showToast("Failed to reset banner customization","error")}}function Q(o){s.log("Updating quick links",{enabledLinks:o});try{const e=document.querySelector(".banner-quick-links");if(!e){s.warn("Banner quick links container not found");return}e.innerHTML="";const t={projects:{label:"📊 Projects",href:"pages/my-projects.html",color:"primary"},studio:{label:"🎨 Studio",href:"pages/widget_studio.html",color:"secondary"},explore:{label:"🔍 Explore",href:"pages/explore.html",color:"accent"},community:{label:"👥 Community",href:"pages/users.html",color:"error"},inventory:{label:"📦 Inventory",href:"pages/inventory.html",color:"success"},profile:{label:"👤 Profile",href:"pages/profile-edit.html",color:"warning"}};o.forEach(i=>{const n=t[i];if(n){const a=document.createElement("a");a.href=n.href,a.className="banner-quick-link",a.setAttribute("data-color",n.color),a.title=n.label,a.style.cssText=`
          padding: 8px 12px;
          background: rgba(0, 240, 255, 0.15);
          border: 1px solid #00f0ff;
          border-radius: 6px;
          color: #00f0ff;
          text-decoration: none;
          font-size: 11px;
          font-weight: 600;
          text-transform: uppercase;
          letter-spacing: 0.5px;
          transition: all 0.3s ease;
          display: flex;
          align-items: center;
          gap: 4px;
        `,a.textContent=n.label,e.appendChild(a)}}),s.log("Quick links updated successfully")}catch(e){s.error("Error updating quick links",e)}}function st(){s.log("Loading saved banner customization");try{const o=localStorage.getItem("bannerCustomization");if(o){const e=JSON.parse(o);N(e.layout||"horizontal"),W(e.theme||"neon"),Q(e.enabledLinks||["projects","studio","explore","community"]),s.log("Banner customization loaded successfully",e)}else s.log("No saved banner customization found, using defaults")}catch(o){s.error("Error loading banner customization",o)}}function X(){s.log("Adding banner restore button to header");try{if(document.getElementById("bannerRestoreBtn"))return;const o=document.querySelector("header");if(!o){s.warn("Header not found for restore button");return}const e=document.createElement("button");e.id="bannerRestoreBtn",e.innerHTML="🏴‍☠️",e.title="Restore Profile Banner",e.style.cssText=`
      width: 40px;
      height: 40px;
      background: rgba(0, 255, 255, 0.2);
      border: 2px solid var(--primary-neon);
      border-radius: 50%;
      color: var(--primary-neon);
      font-size: 16px;
      cursor: pointer;
      transition: all 0.3s ease;
      animation: pulse 2s infinite;
      margin-left: 20px;
    `,e.addEventListener("mouseenter",()=>{e.style.background="rgba(0, 255, 255, 0.3)",e.style.transform="scale(1.1)",e.style.boxShadow="0 0 20px rgba(0, 255, 255, 0.5)"}),e.addEventListener("mouseleave",()=>{e.style.background="rgba(0, 255, 255, 0.2)",e.style.transform="scale(1)",e.style.boxShadow="none"}),e.addEventListener("click",()=>{s.log("Restoring banner from closed state"),document.getElementById("profileBanner")&&(M("visible",!0),localStorage.removeItem("bannerClosed"),setTimeout(()=>{e.remove()},100),window.showToast&&window.showToast("Profile banner restored! 🏴‍☠️","success",3e3))});const t=o.querySelector('div[style*="display: flex"]');if(t){const i=t.querySelector("nav");if(i)i.appendChild(e);else{const n=t.querySelector('div[style*="display: flex"][style*="align-items: center"]');n?n.appendChild(e):t.appendChild(e)}}else o.appendChild(e);s.log("Banner restore button added successfully")}catch(o){s.error("Error adding banner restore button",o)}}function at(){s.log("Adding banner activation button");try{if(document.getElementById("bannerActivationBtn"))return;const o=document.querySelector("header");if(!o){s.warn("Header not found for activation button");return}const e=document.createElement("button");e.id="bannerActivationBtn",e.innerHTML="🔗",e.title="Expand Profile Banner",e.style.cssText=`
      width: 40px;
      height: 40px;
      background: rgba(0, 255, 255, 0.2);
      border: 2px solid var(--primary-neon);
      border-radius: 50%;
      color: var(--primary-neon);
      font-size: 16px;
      cursor: pointer;
      transition: all 0.3s ease;
      animation: pulse 2s infinite;
      margin-left: 20px;
    `,e.addEventListener("mouseenter",()=>{e.style.background="rgba(0, 255, 255, 0.3)",e.style.transform="scale(1.1)",e.style.boxShadow="0 0 20px rgba(0, 255, 255, 0.5)"}),e.addEventListener("mouseleave",()=>{e.style.background="rgba(0, 255, 255, 0.2)",e.style.transform="scale(1)",e.style.boxShadow="none"}),e.addEventListener("click",()=>{s.log("Activating banner from minimized state"),M("visible",!0),setTimeout(()=>{e.remove()},100),window.showToast&&window.showToast("Profile banner expanded! 🔗","success",2e3)});const t=o.querySelector('div[style*="display: flex"]');if(t){const i=t.querySelector("nav");if(i)i.appendChild(e);else{const n=t.querySelector('div[style*="display: flex"][style*="align-items: center"]');n?n.appendChild(e):t.appendChild(e)}}else o.appendChild(e);s.log("Banner activation button added successfully")}catch(o){s.error("Error adding banner activation button",o)}}function M(o,e=!0){s.log(`Updating banner state to: ${o}`);const t=document.getElementById("profileBanner"),i=document.getElementById("profile-banner-section"),n=document.getElementById("bannerChain"),a=document.getElementById("chainLink"),r=document.getElementById("header-banner-container");if(!t||!i||!r){s.warn("Banner elements not found for state update");return}switch(t.classList.remove("hidden","minimized","entered"),r.classList.remove("hidden","minimized","fullscreen-hidden"),o){case"visible":t.classList.add("entered"),r.style.opacity="1",r.style.pointerEvents="auto",e&&(t.style.animation="bannerDropAndSway 1.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards"),n&&(n.style.opacity="1"),a&&(a.style.opacity="1");const l=document.getElementById("bannerActivationBtn");l&&l.remove(),localStorage.removeItem("bannerMinimized"),s.log("Banner visible state restored, minimized state cleared");break;case"minimized":t.classList.add("minimized"),r.classList.add("minimized"),r.style.opacity="1",r.style.pointerEvents="auto",t.style.animation="none",n&&(n.style.opacity="0"),a&&(a.style.opacity="0"),at(),localStorage.setItem("bannerMinimized","true"),s.log("Banner minimized state stored");break;case"hidden":t.classList.add("hidden"),r.classList.add("hidden"),r.style.opacity="0",r.style.pointerEvents="none",e&&(t.style.animation="zipUpToHeader 0.6s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards"),n&&(n.style.opacity="0"),a&&(a.style.opacity="0");break;case"fullscreen-hidden":r.classList.add("fullscreen-hidden"),r.style.opacity="0",r.style.pointerEvents="none",t.style.animation="none",n&&(n.style.opacity="0"),a&&(a.style.opacity="0");break}s.log(`Banner state updated to: ${o}`),window.dispatchEvent(new CustomEvent("banner-state-changed",{detail:{state:o}}))}function rt(){s.log("Initializing UI positioning adjustments");try{const o=document.getElementById("fullscreenToggle"),e=document.getElementById("toast-container"),t=document.getElementById("header-banner-container");if(!o||!e){s.warn("UI elements not found for positioning adjustments");return}const i=()=>{const n=window.innerWidth<=768,a=t&&!t.classList.contains("hidden")&&!t.classList.contains("fullscreen-hidden");n&&a?(o.style.top="200px",e.style.top="200px",s.log("UI positioning adjusted for mobile with visible banner")):n?(o.style.top="100px",e.style.top="100px",s.log("UI positioning adjusted for mobile without banner")):(o.style.top="140px",e.style.top="140px",s.log("UI positioning adjusted for desktop"))};i(),window.addEventListener("banner-state-changed",i),window.addEventListener("resize",()=>{setTimeout(i,100)}),s.log("UI positioning adjustments initialized successfully")}catch(o){s.error("Error initializing UI positioning adjustments",o)}}function ne(){s.log("Initializing mobile-specific banner behavior");try{const o=document.getElementById("profileBanner"),e=document.getElementById("header-banner-container");if(!o||!e){s.warn("Banner elements not found for mobile behavior");return}const t=window.innerWidth<=768;if(t){s.log("Mobile device detected - applying mobile banner optimizations"),e.classList.add("mobile-optimized"),o.classList.add("mobile-optimized"),o.style.touchAction="manipulation",o.style.webkitTouchCallout="none",o.style.webkitUserSelect="none",o.style.userSelect="none",o.addEventListener("touchstart",n=>{n.preventDefault()},{passive:!1}),window.addEventListener("orientationchange",()=>{s.log("Orientation changed - recalculating banner position"),setTimeout(()=>{e.style.transform="translateZ(0)",setTimeout(()=>{e.style.transform=""},100)},100)});let i;window.addEventListener("resize",()=>{clearTimeout(i),i=setTimeout(()=>{window.innerWidth<=768!==t&&(s.log("Screen size changed - reinitializing mobile behavior"),ne())},250)})}else s.log("Desktop device detected - using standard banner behavior"),e.classList.remove("mobile-optimized"),o.classList.remove("mobile-optimized")}catch(o){s.error("Error initializing mobile banner behavior",o)}}function lt(){s.log("Initializing hanging banner controls");try{const o=document.getElementById("profileBanner"),e=document.getElementById("minimizeBannerBtn"),t=document.getElementById("closeBannerBtn");if(!o){s.warn("Profile banner not found for controls");return}o.addEventListener("animationend",a=>{a.animationName==="bannerDropAndSway"&&(s.log("Hanging banner entrance animation completed"),o.classList.add("entered"),window.showToast&&setTimeout(()=>{window.showToast("Welcome! Your hanging profile banner is ready 🏴‍☠️","info",4e3)},1e3))}),e&&e.addEventListener("click",a=>{a.preventDefault(),a.stopPropagation(),s.log("Toggling banner minimize state");const r=o.classList.contains("minimized");M(r?"visible":"minimized",!1),e.textContent=r?"−":"+",e.title=r?"Minimize Banner":"Expand Banner",window.showToast&&window.showToast(r?"Banner expanded":"Banner minimized","info",2e3)}),t&&t.addEventListener("click",a=>{a.preventDefault(),a.stopPropagation(),s.log("Closing banner with zip-up animation"),M("hidden",!0),window.showToast&&window.showToast("Banner zipped up! Use restore button to bring it back 🏴‍☠️","info",3e3),localStorage.setItem("bannerClosed","true"),setTimeout(()=>{X()},700)});const i=localStorage.getItem("bannerClosed"),n=localStorage.getItem("bannerMinimized");i==="true"?(s.log("Banner was previously closed, hiding it"),M("hidden",!1),X()):n==="true"?(s.log("Banner was previously minimized, showing minimized state"),M("minimized",!1)):(s.log("Banner is visible, starting entrance animation"),M("visible",!0)),s.log("Banner positioning fixed to header - drag functionality removed for better mobile UX"),localStorage.removeItem("bannerPosition"),ne(),dt(),s.log("Banner card controls initialized successfully"),rt()}catch(o){s.error("Error initializing banner card controls",o)}}function dt(){s.log("Initializing mobile drawer functionality");try{const o=document.getElementById("mobileMenuToggle"),e=document.getElementById("mobileDrawer"),t=document.getElementById("mobileDrawerClose"),i=document.getElementById("mobileDrawerOverlay"),n=document.getElementById("mobileAuthBtn"),a=document.getElementById("authBtn");if(!o||!e||!t){s.warn("Mobile drawer elements not found");return}const r=()=>{s.log("Opening mobile drawer"),e.classList.add("active"),document.body.style.overflow="hidden"},l=()=>{s.log("Closing mobile drawer"),e.classList.remove("active"),document.body.style.overflow=""};o.addEventListener("click",d=>{d.preventDefault(),d.stopPropagation(),r()}),t.addEventListener("click",d=>{d.preventDefault(),d.stopPropagation(),l()}),i.addEventListener("click",d=>{d.preventDefault(),d.stopPropagation(),l()}),document.querySelectorAll(".mobile-nav-item").forEach(d=>{d.addEventListener("click",m=>{d.href&&d.href.includes("pages/")?setTimeout(()=>{l()},100):l()})}),n&&a&&n.addEventListener("click",d=>{d.preventDefault(),d.stopPropagation(),l(),a.click()}),document.addEventListener("keydown",d=>{d.key==="Escape"&&e.classList.contains("active")&&l()}),window.addEventListener("resize",()=>{window.innerWidth>768&&e.classList.contains("active")&&l()});const c=()=>{const d=document.getElementById("userName"),m=document.getElementById("userStatus"),f=document.getElementById("mobileUserName"),b=document.getElementById("mobileUserStatus");d&&f&&(f.textContent=d.textContent),m&&b&&(b.textContent=m.textContent)};c();const g=new MutationObserver(c),h=document.getElementById("userName");h&&g.observe(h,{childList:!0,subtree:!0}),s.log("Mobile drawer functionality initialized successfully")}catch(o){s.error("Error initializing mobile drawer",o)}}document.addEventListener("DOMContentLoaded",()=>{setTimeout(()=>{st()},1e3)});s.log("Enhanced inque social app initialization complete");const v={log:(o,e=null)=>{console.log(`[FLOATING ORB] ${o}`,e||"")},error:(o,e=null)=>{console.error(`[FLOATING ORB ERROR] ${o}`,e||"")},warn:(o,e=null)=>{console.warn(`[FLOATING ORB WARN] ${o}`,e||"")}};class se{constructor(e={}){this.options={debugMode:!1,maxNotifications:6,autoRemoveDelay:3e4,enableSounds:!0,useThreeJS:!0,threeJsCdn:"https://unpkg.com/three@0.160.0/build/three.module.js",...e},this.notifications=[],this.container=null,this.orb=null,this.isInitialized=!1,this.popupTimeout=null,v.log("Floating Orb Manager initialized",this.options)}async init(){if(this.isInitialized){v.warn("Orb already initialized");return}try{await this.createOrb(),this.setupEventListeners(),this.adjustSidebarSpacing(),this.isInitialized=!0,v.log("Floating orb system initialized successfully"),this.options.debugMode&&this.addDemoNotifications()}catch(e){v.error("Failed to initialize floating orb",e)}}async createOrb(){this.container=document.createElement("div"),this.container.className="floating-orb-container",this.container.setAttribute("data-debug",this.options.debugMode),this.orb=document.createElement("div"),this.orb.className="floating-orb",this.orb.title="Notification Center - Click to expand",this.orbit=document.createElement("div"),this.orbit.className="notification-orbit",this.popup=document.createElement("div"),this.popup.className="notification-popup",this.container.appendChild(this.orb),this.container.appendChild(this.orbit),this.container.appendChild(this.popup),document.body.appendChild(this.container),v.log("Orb DOM structure created"),this.options.useThreeJS&&this.tryInitThreeJS().catch(e=>{v.warn("Three.js enhancement unavailable; using CSS orb only",e)})}async tryInitThreeJS(){if(window.__orbThree)return this.initThreeScene(window.__orbThree);try{const e=await import(this.options.threeJsCdn);window.__orbThree=e,await this.initThreeScene(e)}catch(e){throw e}}async initThreeScene(e){const t=document.createElement("div");t.className="orb-3d-layer",this.container.appendChild(t);const i=t.clientWidth||200,n=t.clientHeight||200,a=new e.WebGLRenderer({antialias:!0,alpha:!0});a.setSize(i,n),t.appendChild(a.domElement);const r=new e.Scene,l=new e.PerspectiveCamera(45,i/n,.1,100);l.position.z=3.2;const u=new e.SphereGeometry(1,64,64),c=new e.MeshStandardMaterial({color:3470847,roughness:.25,metalness:.6,emissive:848127,emissiveIntensity:.2,transparent:!0,opacity:.95}),g=new e.Mesh(u,c);r.add(g);const h=new e.AmbientLight(6750207,.6);r.add(h);const d=new e.PointLight(8956671,1.5);d.position.set(2,2,2),r.add(d);const m=new e.Clock,f=()=>{const b=m.getElapsedTime();g.rotation.y=b*.4,g.rotation.x=Math.sin(b*.6)*.15,a.render(r,l),requestAnimationFrame(f)};f(),v.log("Three.js orb enhancement initialized")}setupEventListeners(){this.orb.addEventListener("click",e=>{e.preventDefault(),this.toggleNotificationsList(),v.log("Orb clicked - toggling notifications")}),this.orb.addEventListener("mouseenter",()=>{this.showLatestNotification()}),this.orb.addEventListener("mouseleave",()=>{this.hideNotificationPopup()}),document.addEventListener("click",e=>{this.container.contains(e.target)||this.hideNotificationPopup()}),this.orb.addEventListener("keydown",e=>{(e.key==="Enter"||e.key===" ")&&(e.preventDefault(),this.toggleNotificationsList())}),this.orb.setAttribute("tabindex","0"),this.orb.setAttribute("role","button"),this.orb.setAttribute("aria-label","Notification Center"),v.log("Event listeners set up")}adjustSidebarSpacing(){const e=document.querySelector(".sidebar-nav");e&&(e.style.paddingLeft="120px",v.log("Sidebar spacing adjusted for orb"));const t=document.querySelector(".hamburger-menu");if(t){const i=window.matchMedia("(max-width: 768px)"),n=a=>{a.matches?t.style.left="100px":t.style.left=""};n(i),i.addListener(n)}}addNotification(e){const t=Date.now()+Math.random(),i={id:t,title:e.title||"New Notification",message:e.message||"",type:e.type||"info",timestamp:new Date,icon:this.getIconForType(e.type),priority:e.priority||"normal",actions:e.actions||[],...e};if(this.notifications.unshift(i),this.notifications.length>this.options.maxNotifications){const n=this.notifications.pop();this.removeNotificationCard(n.id)}return this.createNotificationCard(i),this.updateOrbState(),this.options.autoRemoveDelay>0&&e.autoRemove!==!1&&setTimeout(()=>{this.removeNotification(t)},this.options.autoRemoveDelay),v.log("Notification added",i),t}removeNotification(e){const t=this.notifications.findIndex(i=>i.id===e);if(t!==-1){const i=this.notifications.splice(t,1)[0];this.removeNotificationCard(e),this.updateOrbState(),v.log("Notification removed",i)}}createNotificationCard(e){const t=document.createElement("div");t.className="notification-card",t.setAttribute("data-id",e.id),t.innerHTML=e.icon,t.title=e.title,t.addEventListener("click",i=>{i.stopPropagation(),this.showNotificationDetails(e),v.log("Notification card clicked",e)}),t.addEventListener("mouseenter",()=>{this.showNotificationPreview(e)}),this.orbit.appendChild(t),requestAnimationFrame(()=>{t.style.transform="scale(1.2)",setTimeout(()=>{t.style.transform=""},300)})}removeNotificationCard(e){const t=this.orbit.querySelector(`[data-id="${e}"]`);t&&(t.style.animation="none",t.style.transform="scale(0)",t.style.opacity="0",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},300))}updateOrbState(){const e=this.notifications.length>0;this.container.classList.toggle("has-notifications",e),this.orb.setAttribute("aria-label",e?`Notification Center - ${this.notifications.length} notifications`:"Notification Center - No notifications")}showNotificationDetails(e){this.popup.innerHTML=`
            <h4>${this.escapeHtml(e.title)}</h4>
            <p>${this.escapeHtml(e.message)}</p>
            ${e.actions?this.renderNotificationActions(e.actions):""}
            <div class="timestamp">${this.formatTimestamp(e.timestamp)}</div>
        `,this.popup.classList.add("show"),clearTimeout(this.popupTimeout),this.popupTimeout=setTimeout(()=>{this.hideNotificationPopup()},5e3)}showNotificationPreview(e){this.popup.innerHTML=`
            <h4>${this.escapeHtml(e.title)}</h4>
            <p>${this.escapeHtml(e.message.substring(0,100))}${e.message.length>100?"...":""}</p>
        `,this.popup.classList.add("show")}showLatestNotification(){this.notifications.length>0&&this.showNotificationPreview(this.notifications[0])}hideNotificationPopup(){this.popup.classList.remove("show"),clearTimeout(this.popupTimeout)}toggleNotificationsList(){this.notifications.length===0?this.addNotification({title:"No Notifications",message:"You're all caught up! 🎉",type:"info",autoRemove:!1}):this.showNotificationDetails(this.notifications[0])}getIconForType(e){const t={info:"💬",success:"✅",warning:"⚠️",error:"❌",update:"🔄",like:"❤️",comment:"💭",follow:"👥",system:"⚙️"};return t[e]||t.info}formatTimestamp(e){const i=new Date-e;return i<6e4?"Just now":i<36e5?`${Math.floor(i/6e4)}m ago`:i<864e5?`${Math.floor(i/36e5)}h ago`:e.toLocaleDateString()}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}renderNotificationActions(e){return e.map(t=>`<button class="notification-action-btn" onclick="window.floatingOrb.handleNotificationAction('${t.id}', '${t.handler}')">${t.label}</button>`).join("")}handleNotificationAction(e,t){v.log("Notification action triggered",{actionId:e,handler:t}),typeof window[t]=="function"&&window[t](e)}addDemoNotifications(){[{title:"Welcome!",message:"Your floating orb is now active and ready for notifications! 🚀",type:"success"},{title:"New Feature",message:"Check out the latest widget studio updates.",type:"info"},{title:"System Update",message:"Your profile has been synced successfully.",type:"update"}].forEach((t,i)=>{setTimeout(()=>{this.addNotification(t)},i*1e3)})}clear(){this.notifications=[],this.orbit.innerHTML="",this.updateOrbState(),this.hideNotificationPopup(),v.log("All notifications cleared")}destroy(){this.container&&this.container.parentNode&&this.container.parentNode.removeChild(this.container);const e=document.querySelector(".sidebar-nav");e&&(e.style.paddingLeft=""),this.isInitialized=!1,v.log("Floating orb destroyed")}}document.addEventListener("DOMContentLoaded",()=>{window.floatingOrb=new se({debugMode:!0,maxNotifications:6,autoRemoveDelay:3e4}),window.floatingOrb.init(),v.log("Floating orb system loaded and ready!")});const ct=Object.freeze(Object.defineProperty({__proto__:null,default:se},Symbol.toStringTag,{value:"Module"})),p={log:(o,e=null)=>{console.log(`[DEBUG] Firebase Core: ${o}`,e||"")},error:(o,e=null)=>{console.error(`[DEBUG ERROR] Firebase Core: ${o}`,e||"")},warn:(o,e=null)=>{console.warn(`[DEBUG WARN] Firebase Core: ${o}`,e||"")}};p.log("Starting initialization");const ut={apiKey:"AIzaSyBIZcD-L5jD84hEYLxWOwHTE2iTY6EJ0zI",authDomain:"inque-31cb5.firebaseapp.com",databaseURL:"https://inque-31cb5-default-rtdb.firebaseio.com",projectId:"inque-31cb5",storageBucket:"inque-31cb5.firebasestorage.app",messagingSenderId:"338722493567",appId:"1:338722493567:web:4c46ecdfe92ddf2a5d5b4a",measurementId:"G-KQT58LWVSK"},gt=window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1";gt&&(p.log("Running on localhost - using development configuration"),p.log("IMPORTANT: To enable Firebase Auth on localhost, add 'localhost' to Authorized Domains in Firebase Console > Authentication > Settings"));p.log("Initializing Firebase app");const R=ye(ut);be(R);const T=ve(R),S=Te(R),ht=Be(R);p.log("Firebase services initialized successfully");async function mt(){try{p.log("Logging page view");const o=await Ee(te(T,"page_visits"),{url:window.location.href,timestamp:oe()});p.log("Page visit logged successfully",{id:o.id})}catch(o){p.error("Error logging visit",o)}}const pt=["text/html","text/css","application/javascript","application/json","image/png","image/jpeg","image/gif","image/svg+xml","text/javascript","application/x-javascript"],ft=[".html",".js",".css",".png",".jpg",".jpeg",".gif",".svg",".json"];window.validateWidgetFiles=function(o){p.log("Validating widget files",{fileCount:o.length});for(let e of o){const t=e.name.slice(e.name.lastIndexOf(".")).toLowerCase();if(!ft.includes(t)||e.type&&!pt.includes(e.type))return p.warn("Invalid file type detected",{fileName:e.name,fileType:e.type}),!1}return p.log("All files validated successfully"),!0};document.addEventListener("DOMContentLoaded",function(){p.log("DOM Content Loaded - Starting core functionality"),mt();const o=document.querySelector(".light-cursor");o?(p.log("Setting up light cursor effect"),document.addEventListener("mousemove",function(h){o.style.left=h.clientX+"px",o.style.top=h.clientY+"px"})):p.warn("Light cursor element not found");const e=document.querySelectorAll(".nav-btn, .quick-action-btn, .edit-widget-btn, .hamburger-menu");p.log("Found touch elements",{count:e.length}),e.forEach(h=>{h.addEventListener("touchend",function(d){p.log("Touch end event on element",{className:h.className}),d.preventDefault(),this.click()})});const t=document.querySelectorAll('button, a, [role="button"]');p.log("Setting up touch feedback for elements",{count:t.length}),t.forEach(h=>{h.addEventListener("touchstart",function(){this.style.transform="scale(0.98)"}),h.addEventListener("touchend",function(){this.style.transform=""})});let i=0;document.addEventListener("touchstart",function(h){i=h.touches[0].clientY}),document.addEventListener("touchmove",function(h){const d=h.touches[0].clientY;(window.pageYOffset||document.documentElement.scrollTop)<=0&&d>i&&h.preventDefault()});const n=document.querySelector(".sidebar-nav"),a=document.querySelector(".sidebar-overlay"),r=document.querySelector(".hamburger-menu");if(p.log("Sidebar elements found",{sidebar:!!n,overlay:!!a,hamburger:!!r}),n&&a&&r){p.log("All sidebar elements found, setting up functionality"),n.style.position="fixed",n.style.top="0",n.style.left="0",n.style.height="100vh",n.style.zIndex="1002",p.log("Sidebar made sticky"),r.addEventListener("click",function(d){p.log("Hamburger menu clicked"),d.preventDefault(),d.stopPropagation();const m=n.classList.contains("open");p.log("Toggling sidebar",{currentState:m?"open":"closed"}),n.classList.toggle("open"),a.classList.toggle("show"),document.body.style.overflow=n.classList.contains("open")?"hidden":"",p.log("Sidebar toggled",{newState:n.classList.contains("open")?"open":"closed"})});const h=document.querySelector(".sidebar-close-btn");h?(p.log("Setting up close button handler"),h.addEventListener("click",function(d){p.log("Close button clicked"),d.preventDefault(),d.stopPropagation(),n.classList.remove("open"),a.classList.remove("show"),document.body.style.overflow="",p.log("Sidebar closed via close button")})):p.warn("Close button not found"),a.addEventListener("click",function(d){p.log("Overlay clicked"),d.preventDefault(),d.stopPropagation(),n.classList.remove("open"),a.classList.remove("show"),document.body.style.overflow="",p.log("Sidebar closed via overlay click")}),n.addEventListener("touchmove",function(d){n.classList.contains("open")&&(p.log("Preventing touch scroll on sidebar"),d.stopPropagation())}),document.addEventListener("visibilitychange",()=>{document.hidden&&n.classList.contains("open")&&(p.log("Page hidden, closing sidebar"),n.classList.remove("open"),a.classList.remove("show"),document.body.style.overflow="")}),document.addEventListener("keydown",function(d){d.key==="Escape"&&n.classList.contains("open")&&(p.log("Escape key pressed, closing sidebar"),n.classList.remove("open"),a.classList.remove("show"),document.body.style.overflow="")}),p.log("Sidebar functionality setup complete")}else p.warn("Sidebar elements not found - sidebar functionality disabled",{sidebar:!!n,overlay:!!a,hamburger:!!r});const l=document.querySelectorAll(".modal");p.log("Setting up modal touch handling",{modalCount:l.length}),l.forEach(h=>{h.addEventListener("touchmove",function(d){d.stopPropagation()})});const u=document.getElementById("sidebarNotifications"),c=document.getElementById("notificationsHeader"),g=document.getElementById("notificationsToggle");if(p.log("Setting up notifications toggle",{container:!!u,header:!!c,toggle:!!g}),u&&c&&g){p.log("All notifications elements found, setting up toggle functionality");const h=()=>{const d=u.classList.contains("expanded");p.log("Toggling notifications",{currentState:d?"expanded":"collapsed"}),u.classList.toggle("expanded"),g.classList.toggle("expanded"),p.log("Notifications toggled",{newState:u.classList.contains("expanded")?"expanded":"collapsed"})};c.addEventListener("click",function(d){p.log("Notifications header clicked"),d.preventDefault(),d.stopPropagation(),h()}),g.addEventListener("click",function(d){p.log("Notifications toggle button clicked"),d.preventDefault(),d.stopPropagation(),h()}),c.addEventListener("keydown",function(d){(d.key==="Enter"||d.key===" ")&&(p.log("Notifications header keyboard activated"),d.preventDefault(),h())}),g.addEventListener("keydown",function(d){(d.key==="Enter"||d.key===" ")&&(p.log("Notifications toggle keyboard activated"),d.preventDefault(),h())}),p.log("Notifications toggle functionality setup complete")}else p.warn("Missing notifications elements",{container:!!u,header:!!c,toggle:!!g});p.log("Core functionality setup complete")});const E=Object.freeze(Object.defineProperty({__proto__:null,auth:S,db:T,onAuthStateChanged:ie,storage:ht},Symbol.toStringTag,{value:"Module"})),w={log:(o,e=null)=>{console.log(`[TIMELINE DEBUG] ${o}`,e||"")},error:(o,e=null)=>{console.error(`[TIMELINE DEBUG ERROR] ${o}`,e||"")},warn:(o,e=null)=>{console.warn(`[TIMELINE DEBUG WARN] ${o}`,e||"")}};let P=[],_=!1,F=null;async function wt(){w.log("Timeline Manager: Loading timeline widgets from Firestore");try{const o=S.currentUser;if(!o){w.log("Timeline Manager: User not authenticated, showing guest state"),P=[];return}w.log("Timeline Manager: User authenticated",{uid:o.uid});const e=te(T,"widgets"),t=Se(e,Le("userId","==",o.uid)),i=await ke(t);w.log("Timeline Manager: Widgets query executed",{querySnapshotSize:i.size}),P=i.docs.map(n=>{const a=n.data();return w.log("Timeline Manager: Processing widget",{id:n.id,title:a.title,slot:a.slot,userId:a.userId,fileCount:a.files?.length||0}),{id:n.id,title:a.title||"Untitled Widget",desc:a.description||"No description available",slot:a.slot,files:a.files||[],createdAt:a.createdAt}}),w.log("Timeline Manager: Widgets loaded successfully",{count:P.length,widgets:P.map(n=>({id:n.id,title:n.title,slot:n.slot}))})}catch(o){w.error("Timeline Manager: Failed to load widgets",o),o.message!=="Not logged in."&&console.error("Timeline Manager: Widget loading error",o),P=[]}}async function B(){w.log("Timeline Manager: Rendering all widget cards"),await wt();const o=document.querySelectorAll(".timeline-event");if(w.log("Timeline Manager: Found timeline events",{count:o.length}),o.length===0){w.warn("Timeline Manager: No timeline events found in DOM");return}o.forEach((e,t)=>{const i=e.querySelector(".timeline-event-card");i&&(w.log("Timeline Manager: Removing old card",{index:t}),i.remove());const n=P[t],a=document.createElement("div");if(a.className="timeline-event-card",n)if(w.log("Timeline Manager: Rendering project card",{index:t,projectId:n.id,title:n.title}),F===n.id)w.log("Timeline Manager: Rendering edit mode for card",{projectId:n.id}),a.innerHTML=`
          <input class="widget-edit-title" value="${n.title||""}" style="width:100%;margin-bottom:8px;" />
          <textarea class="widget-edit-desc" style="width:100%;margin-bottom:8px;">${n.desc||""}</textarea>
          <button class="widget-save-btn">💾 Save</button>
          <button class="widget-cancel-btn">Cancel</button>
        `,a.querySelector(".widget-save-btn").addEventListener("click",async()=>{w.log("Timeline Manager: Save button clicked",{projectId:n.id});const r=a.querySelector(".widget-edit-title").value,l=a.querySelector(".widget-edit-desc").value;try{const u=A(T,"widgets",n.id);await V(u,{title:r,description:l,updatedAt:new Date}),w.log("Timeline Manager: Widget updated successfully",{projectId:n.id}),F=null,B()}catch(u){w.error("Timeline Manager: Failed to update widget",u),alert("Failed to update widget: "+u.message)}}),a.querySelector(".widget-cancel-btn").addEventListener("click",()=>{w.log("Timeline Manager: Cancel button clicked"),F=null,B()});else{a.innerHTML=`
          <div class="widget-preview" style="margin-bottom:8px;">
            <iframe class="widget-iframe custom-styled" title="Widget Preview" style="width:100%;height:240px;border:0;border-radius:8px;background:#0b0b0b"></iframe>
          </div>
          <h3>${n.title||"Untitled Widget"}</h3>
          <p>${n.desc||"No description available"}</p>
          <button class="widget-edit-btn">✏️ Edit</button>
        `;const r=a.querySelector(".widget-iframe");r.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),yt(n,r).catch(l=>{w.error("Timeline Manager: Failed to load widget into iframe",l),r.replaceWith(Object.assign(document.createElement("div"),{className:"widget-preview-error",textContent:"Failed to load widget preview"}))}),a.querySelector(".widget-edit-btn").addEventListener("click",()=>{w.log("Timeline Manager: Edit button clicked",{projectId:n.id}),F=n.id,B()})}else w.log("Timeline Manager: Rendering empty slot",{index:t}),a.innerHTML=`
        <div style="text-align: center; padding: 20px;">
          <div style="font-size: 3rem; margin-bottom: 10px;">+</div>
          <p style="color: #aaa; margin: 0;">Empty Slot</p>
        </div>
      `;e.appendChild(a)}),w.log("Timeline Manager: All widget cards rendered")}async function yt(o,e){try{const t=Array.isArray(o.files)?o.files:[];if(t.length===0){w.warn("Timeline Manager: Project has no files",{projectId:o.id});return}const i={};t.forEach(h=>{h&&h.fileName&&h.downloadURL&&(i[h.fileName]=h.downloadURL)}),w.log("Timeline Manager: File map created",{fileCount:Object.keys(i).length,files:Object.keys(i)});const n=Object.keys(i).find(h=>/index\.html?$/i.test(h))||Object.keys(i).find(h=>/\.html?$/i.test(h));if(!n){w.warn("Timeline Manager: No HTML file found for widget",{projectId:o.id});return}w.log("Timeline Manager: Loading widget HTML",{htmlFileName:n});const r=await(await fetch(i[n])).text(),l=h=>{if(!h)return null;const d=h.replace(/^\.\//,"").replace(/^\//,"");if(i[d])return i[d];const m=d.split("/").pop();return i[m]||null},u=r.replace(/(href|src)=["']([^"']+)["']/gi,(h,d,m)=>{const f=l(m);return f?`${d}="${f}"`:h}),c=new Blob([u],{type:"text/html"}),g=URL.createObjectURL(c);e.src=g,w.log("Timeline Manager: Widget iframe set with blob URL")}catch(t){throw w.error("Timeline Manager: Error preparing widget iframe",t),t}}async function ae(){w.log("Timeline Manager: Initializing timeline functionality");const o=document.getElementById("editProfileQuickBtn");o?(w.log("Timeline Manager: Setting up edit profile button handler"),o.addEventListener("click",async()=>{if(w.log("Timeline Manager: Edit profile button clicked, toggling widget edit mode"),!S.currentUser){w.log("Timeline Manager: User not authenticated, showing login prompt"),alert("Please log in to edit your profile and manage your widgets.");return}_=!_,w.log("Timeline Manager: Widget edit mode toggled",{widgetEditMode:_}),B()})):w.warn("Timeline Manager: Edit profile button not found"),w.log("Timeline Manager: Performing initial render"),B(),w.log("Timeline Manager: Setting up auth state listener"),ie(S,e=>{e?(w.log("Timeline Manager: User authenticated, re-rendering timeline",{uid:e.uid}),B()):(w.log("Timeline Manager: User signed out, clearing timeline"),P=[],B())}),w.log("Timeline Manager: Initialization complete")}document.addEventListener("DOMContentLoaded",async function(){w.log("Timeline Manager: DOM Content Loaded - Starting initialization"),await ae()});window.timelineManager={renderAllWidgetCards:B,renderWidgetCard,initializeTimeline:ae};w.log("Timeline Manager: Script loaded successfully");class bt{constructor(){this.currentUser=null,this.userWidgets=[],this.widgetData={},this.debugMode=!0}log(e,t=null){this.debugMode&&console.log(`[WidgetDisplay] ${e}`,t)}error(e,t=null){console.error(`[WidgetDisplay] ${e}`,t)}async init(){if(this.currentUser=S.currentUser,!this.currentUser){this.log("No user logged in for widget display");return}this.log("Initializing widget display system"),await this.loadUserWidgets(),this.setupWidgetSlots(),this.setupProfileMenuIntegration()}async loadUserWidgets(){try{const e=await q(A(T,"users",this.currentUser.uid));if(e.exists()){const t=e.data();this.userWidgets=t.widgets||[],this.log("Loaded user widgets",{widgetCount:this.userWidgets.length}),await this.loadWidgetMetadata()}}catch(e){this.error("Error loading user widgets",e)}}async loadWidgetMetadata(){try{for(const e of this.userWidgets){const t=await q(A(T,"widgets",e));t.exists()&&(this.widgetData[e]=t.data())}this.log("Loaded widget metadata",{widgetCount:Object.keys(this.widgetData).length})}catch(e){this.error("Error loading widget metadata",e)}}findHtmlFile(e){if(!Array.isArray(e)||e.length===0)return null;const t=e.find(i=>i.fileName&&/index\.html?$/i.test(i.fileName));return t||e.find(i=>i.fileName&&/\.html?$/i.test(i.fileName))}setupWidgetSlots(){document.querySelectorAll("[data-widget-slot]").forEach(t=>{const i=t.dataset.widgetSlot;this.renderWidgetSlot(t,i)})}async renderWidgetSlot(e,t){const i=Object.values(this.widgetData).find(n=>n.slot===parseInt(t));if(i&&i.files&&this.findHtmlFile(i.files)){const n=this.findHtmlFile(i.files);this.showWidgetIframe(e,n.downloadURL,i)}else this.showUploadInterface(e,t)}showWidgetIframe(e,t,i){e.innerHTML=`
      <div class="widget-container">
        <div class="widget-header">
          <h3>${i.title||"Untitled Widget"}</h3>
          <div class="widget-actions">
            <button class="btn btn-secondary edit-widget-btn" data-widget-id="${i.id}">
              <span class="material-icons">edit</span>
              Edit
            </button>
            <button class="btn btn-secondary preview-widget-btn" data-widget-id="${i.id}">
              <span class="material-icons">open_in_new</span>
              Full View
            </button>
            <button class="btn btn-danger delete-widget-btn" data-widget-id="${i.id}">
              <span class="material-icons">delete</span>
              Delete
            </button>
          </div>
        </div>
        <div class="widget-frame-container">
          <iframe 
            src="${t}" 
            class="widget-iframe"
            frameborder="0"
            sandbox="allow-scripts allow-same-origin allow-forms"
            title="Widget ${i.title}"
          ></iframe>
        </div>
        <div class="widget-info">
          <p><strong>Description:</strong> ${i.description||"No description"}</p>
          <p><strong>Category:</strong> ${i.category||"General"}</p>
          <p><strong>Tags:</strong> ${i.tags?.join(", ")||"No tags"}</p>
          <p><strong>Last Updated:</strong> ${new Date(i.updatedAt?.toDate()||i.updatedAt).toLocaleDateString()}</p>
          <div class="widget-stats">
            <span class="stat">👁️ ${i.stats?.views||0} views</span>
            <span class="stat">❤️ ${i.stats?.likes||0} likes</span>
            <span class="stat">📤 ${i.stats?.shares||0} shares</span>
          </div>
        </div>
      </div>
    `,this.setupWidgetActionHandlers(e)}showUploadInterface(e,t){e.innerHTML=`
      <div class="widget-upload-container">
        <h3>Widget Slot ${t}</h3>
        <p>Upload your widget files to get started</p>
        <div class="upload-area" data-slot="${t}">
          <input type="file" id="widgetFiles${t}" multiple accept=".html,.js,.css,.png,.jpg,.jpeg,.gif,.svg,.json,.mp3,.mp4,.wav,.ogg" style="display: none;">
          <div class="upload-placeholder">
            <span class="material-icons">cloud_upload</span>
            <p>Drop files here or click to upload</p>
            <p class="upload-hint">Supports: HTML, CSS, JS, Images, Audio, Video</p>
          </div>
        </div>
        <div class="upload-form" style="display: none;">
          <input type="text" placeholder="Widget Title" class="widget-title-input" data-slot="${t}">
          <textarea placeholder="Widget Description" class="widget-desc-input" data-slot="${t}" rows="3"></textarea>
          <input type="text" placeholder="Category (e.g., game, tool, art)" class="widget-category-input" data-slot="${t}">
          <input type="text" placeholder="Tags (comma separated)" class="widget-tags-input" data-slot="${t}">
          <button class="btn btn-primary upload-widget-btn" data-slot="${t}">
            <span class="material-icons">upload</span>
            Upload Widget
          </button>
        </div>
      </div>
    `,this.setupUploadHandlers(e,t)}setupUploadHandlers(e,t){const i=e.querySelector(".upload-area"),n=e.querySelector(`#widgetFiles${t}`),a=e.querySelector(".upload-form");n.addEventListener("change",l=>{l.target.files.length>0&&this.handleFileSelection(l.target.files,a)}),i.addEventListener("dragover",l=>{l.preventDefault(),i.classList.add("drag-over")}),i.addEventListener("dragleave",l=>{l.preventDefault(),i.classList.remove("drag-over")}),i.addEventListener("drop",l=>{l.preventDefault(),i.classList.remove("drag-over");const u=l.dataTransfer.files;u.length>0&&(n.files=u,this.handleFileSelection(u,a))}),i.addEventListener("click",()=>{n.click()}),e.querySelector(".upload-widget-btn").addEventListener("click",()=>{this.uploadWidget(t)})}handleFileSelection(e,t){t.style.display="block";const i=Array.from(e).map(n=>n.name).join(", ");t.querySelector(".upload-placeholder p").textContent=`Selected: ${i}`}async uploadWidget(e){if(this.log("Widget upload requested, delegating to WidgetUploadManager"),!window.widgetUploadManager){const{default:i}=await y(async()=>{const{default:n}=await Promise.resolve().then(()=>de);return{default:n}},[]);window.widgetUploadManager=i}const t=document.querySelector(`.upload-widget-btn[data-slot="${e}"]`);t?await window.widgetUploadManager.handleUploadButtonClick(t):this.error("Upload button not found for slot",{slotNumber:e})}setupWidgetActionHandlers(e){const t=e.querySelector(".edit-widget-btn");t&&t.addEventListener("click",a=>{const r=a.target.closest(".edit-widget-btn").dataset.widgetId;this.editWidget(r)});const i=e.querySelector(".preview-widget-btn");i&&i.addEventListener("click",a=>{const r=a.target.closest(".preview-widget-btn").dataset.widgetId;this.previewWidget(r)});const n=e.querySelector(".delete-widget-btn");n&&n.addEventListener("click",a=>{const r=a.target.closest(".delete-widget-btn").dataset.widgetId;this.deleteWidget(r)})}previewWidget(e){const t=this.widgetData[e];if(!t){this.showToast("Widget not found","error");return}const i=this.findHtmlFile(t.files);if(!i||!i.downloadURL){this.showToast("Widget HTML file not found","error");return}let n=document.getElementById("widgetPreviewModal");n||(n=document.createElement("div"),n.id="widgetPreviewModal",n.className="modal",n.innerHTML=`
        <div class="modal-content widget-preview-modal">
          <div class="modal-header">
            <h3>${t.title}</h3>
            <button class="close-modal">×</button>
          </div>
          <div class="modal-body">
            <iframe 
              src="${i.downloadURL}" 
              class="widget-preview-iframe"
              frameborder="0"
              sandbox="allow-scripts allow-same-origin allow-forms"
              title="Widget Preview"
            ></iframe>
          </div>
        </div>
      `,document.body.appendChild(n),n.querySelector(".close-modal").addEventListener("click",()=>{n.style.display="none"}),n.addEventListener("click",r=>{r.target===n&&(n.style.display="none")})),n.querySelector("h3").textContent=t.title,n.querySelector("iframe").src=i.downloadURL,n.style.display="block"}editWidget(e){const t=this.widgetData[e];if(!t){this.showToast("Widget not found","error");return}const i=document.querySelector(`[data-widget-slot="${t.slot}"]`);if(i){this.showUploadInterface(i,t.slot);const n=i.querySelector(".widget-title-input"),a=i.querySelector(".widget-desc-input"),r=i.querySelector(".widget-category-input"),l=i.querySelector(".widget-tags-input");n&&(n.value=t.title||""),a&&(a.value=t.description||""),r&&(r.value=t.category||""),l&&(l.value=t.tags?.join(", ")||"")}}async deleteWidget(e){const t=this.widgetData[e];if(!t){this.showToast("Widget not found","error");return}if(confirm(`Are you sure you want to delete "${t.title}"?`))try{await Ce(A(T,"widgets",e)),await V(A(T,"users",this.currentUser.uid),{widgets:Ie(e)}),await this.loadUserWidgets(),this.setupWidgetSlots(),this.showToast(`Widget "${t.title}" deleted successfully`,"success"),this.log("Widget deleted successfully",{widgetId:e})}catch(i){this.error("Error deleting widget",i),this.showToast("Failed to delete widget: "+i.message,"error")}}setupProfileMenuIntegration(){this.updateProfileMenuWidgetCount(),this.addWidgetManagementToProfile()}updateProfileMenuWidgetCount(){const e=document.querySelector(".profile-menu");if(e){const t=e.querySelector(".widget-count");if(t)t.textContent=this.userWidgets.length;else{const i=document.createElement("div");i.className="widget-count",i.textContent=this.userWidgets.length,e.appendChild(i)}}}addWidgetManagementToProfile(){const e=document.querySelector(".profile-menu");if(e&&!e.querySelector(".widget-management")){const t=document.createElement("div");t.className="widget-management",t.innerHTML=`
        <h4>My Widgets (${this.userWidgets.length})</h4>
        <div class="widget-list">
          ${this.userWidgets.length===0?'<p>No widgets yet. <a href="#" class="upload-widget-link">Upload your first widget!</a></p>':this.userWidgets.map(i=>{const n=this.widgetData[i];return n?`
                <div class="widget-item" data-widget-id="${i}">
                  <div class="widget-info">
                    <h5>${n.title}</h5>
                    <p>${n.description||"No description"}</p>
                    <span class="widget-category">${n.category}</span>
                  </div>
                  <div class="widget-actions">
                    <button class="btn btn-sm preview-widget-btn" data-widget-id="${i}">Preview</button>
                    <button class="btn btn-sm edit-widget-btn" data-widget-id="${i}">Edit</button>
                    <button class="btn btn-sm btn-danger delete-widget-btn" data-widget-id="${i}">Delete</button>
                  </div>
                </div>
              `:""}).join("")}
        </div>
      `,e.appendChild(t),this.setupProfileMenuEventListeners(t)}}setupProfileMenuEventListeners(e){e.querySelectorAll(".preview-widget-btn").forEach(i=>{i.addEventListener("click",n=>{const a=n.target.dataset.widgetId;this.previewWidget(a)})}),e.querySelectorAll(".edit-widget-btn").forEach(i=>{i.addEventListener("click",n=>{const a=n.target.dataset.widgetId;this.editWidget(a)})}),e.querySelectorAll(".delete-widget-btn").forEach(i=>{i.addEventListener("click",n=>{const a=n.target.dataset.widgetId;this.deleteWidget(a)})});const t=e.querySelector(".upload-widget-link");t&&t.addEventListener("click",i=>{i.preventDefault();const n=document.querySelector("[data-widget-slot]");n&&n.scrollIntoView({behavior:"smooth"})})}showToast(e,t="info"){window.showToast?window.showToast(e,t):console.log(`[${t.toUpperCase()}] ${e}`)}}window.previewWidget=function(o){window.widgetDisplay&&window.widgetDisplay.previewWidget(o)};window.uploadWidget=function(o){window.widgetDisplay&&window.widgetDisplay.uploadWidget(o)};window.editWidget=function(o){window.widgetDisplay&&window.widgetDisplay.editWidget(o)};window.deleteWidget=function(o){window.widgetDisplay&&window.widgetDisplay.deleteWidget(o)};let U=null;S.onAuthStateChanged(o=>{o?U||(U=new bt,U.init(),window.widgetDisplay=U):(U=null,window.widgetDisplay=null)});class vt{constructor(){this.functions=Me(void 0,"us-central1"),this.log("Cloud Upload Manager initialized with region: us-central1")}log(e,t=null){console.log(`[CLOUD UPLOAD] ${e}`,t||"")}error(e,t=null){console.error(`[CLOUD UPLOAD ERROR] ${e}`,t||"")}async fileToBase64(e){return new Promise((t,i)=>{const n=new FileReader;n.onload=()=>{const a=n.result.split(",")[1];t({name:e.name,type:e.type,size:e.size,data:a})},n.onerror=i,n.readAsDataURL(e)})}async uploadWidgetFiles(e,t,i={}){try{if(this.log("Starting widget upload via Cloud Functions",{fileCount:e.length,slot:t}),!S.currentUser)throw new Error("User must be authenticated to upload files");const n=Array.from(e).map(u=>this.fileToBase64(u)),a=await Promise.all(n);this.log("Files converted to base64",{count:a.length});const l=await O(this.functions,"uploadWidgetFiles")({files:a,slot:t,widgetData:i});return this.log("Widget upload successful",l.data),l.data}catch(n){throw this.error("Widget upload failed",n),new Error(`Upload failed: ${n.message}`)}}async uploadProfilePhoto(e){try{if(this.log("Starting profile photo upload via Cloud Functions"),!S.currentUser)throw new Error("User must be authenticated to upload profile photo");const t=await this.fileToBase64(e);this.log("Profile photo converted to base64");const n=await O(this.functions,"uploadProfilePhoto")({file:t});return this.log("Profile photo upload successful",n.data),n.data}catch(t){throw this.error("Profile photo upload failed",t),new Error(`Profile photo upload failed: ${t.message}`)}}async deleteWidget(e){try{if(this.log("Starting widget deletion via Cloud Functions",{widgetId:e}),!S.currentUser)throw new Error("User must be authenticated to delete widgets");const i=await O(this.functions,"deleteWidget")({widgetId:e});return this.log("Widget deletion successful",i.data),i.data}catch(t){throw this.error("Widget deletion failed",t),new Error(`Widget deletion failed: ${t.message}`)}}async getWidgetDownloadUrls(e){try{if(this.log("Getting widget download URLs via Cloud Functions",{widgetId:e}),!S.currentUser)throw new Error("User must be authenticated to access widget URLs");const i=await O(this.functions,"getWidgetDownloadUrls")({widgetId:e});return this.log("Download URLs retrieved successfully",i.data),i.data}catch(t){throw this.error("Failed to get download URLs",t),new Error(`Failed to get download URLs: ${t.message}`)}}validateFiles(e){const t=["text/html","text/css","application/javascript","application/json","image/png","image/jpeg","image/gif","image/svg+xml","text/javascript","application/x-javascript"],i=[".html",".js",".css",".png",".jpg",".jpeg",".gif",".svg",".json"];for(const n of e){const a=n.name.slice(n.name.lastIndexOf(".")).toLowerCase();if(!i.includes(a)||n.type&&!t.includes(n.type))return this.error("Invalid file type",{fileName:n.name,fileType:n.type}),!1}return!0}async uploadWithProgress(e,t,i={},n=null){try{if(n&&n(0,"Preparing files..."),!this.validateFiles(e))throw new Error("Invalid file types detected");n&&n(25,"Converting files...");const a=Array.from(e).map(u=>this.fileToBase64(u)),r=await Promise.all(a);n&&n(50,"Uploading to server...");const l=await this.uploadWidgetFiles(e,t,i);return n&&n(100,"Upload complete!"),l}catch(a){throw this.error("Upload with progress failed",a),a}}}const x=new vt;window.cloudUploadManager=x;class Et{constructor(){this.previewContainer=null,this.currentFiles=new Map,this.log("Widget Preview Manager initialized")}log(e,t=null){console.log(`[WIDGET PREVIEW] ${e}`,t||"")}error(e,t=null){console.error(`[WIDGET PREVIEW ERROR] ${e}`,t||"")}async init(){try{return this.log("Initializing widget preview system"),this.setupPreviewContainer(),this.setupEventListeners(),!0}catch(e){return this.error("Failed to initialize widget preview system",e),!1}}setupPreviewContainer(){this.previewContainer=document.getElementById("widgetPreviewContainer"),this.previewContainer||(this.previewContainer=document.createElement("div"),this.previewContainer.id="widgetPreviewContainer",this.previewContainer.className="widget-preview-container",this.previewContainer.innerHTML=`
        <div class="preview-header">
          <h3>File Preview</h3>
          <button class="preview-close-btn" id="previewCloseBtn">&times;</button>
        </div>
        <div class="preview-content" id="previewContent">
          <div class="preview-placeholder">
            <span class="preview-icon">👁️</span>
            <p>Select files to preview your widget</p>
          </div>
        </div>
      `,document.body.appendChild(this.previewContainer))}setupEventListeners(){const e=document.getElementById("previewCloseBtn");e&&e.addEventListener("click",()=>{this.hidePreview()}),this.previewContainer.addEventListener("click",t=>{t.target===this.previewContainer&&this.hidePreview()})}showPreview(){this.previewContainer&&(this.previewContainer.style.display="block",this.log("Preview shown"))}hidePreview(){this.previewContainer&&(this.previewContainer.style.display="none",this.clearPreview(),this.log("Preview hidden"))}clearPreview(){const e=document.getElementById("previewContent");e&&(e.innerHTML=`
        <div class="preview-placeholder">
          <span class="preview-icon">👁️</span>
          <p>Select files to preview your widget</p>
        </div>
      `),this.currentFiles.clear()}async handleFiles(e){try{this.log("Handling files for preview",{count:e.length});const t=Array.from(e);this.currentFiles.clear(),t.forEach(n=>{this.currentFiles.set(n.name,n)});const i=t.filter(n=>n.name.match(/\.html?$/i));if(i.length>0)await this.showProjectPreview(t,i[0]);else for(const n of t)await this.showFilePreview(n);this.showPreview()}catch(t){this.error("Error handling files for preview",t),this.showError("Failed to preview files: "+t.message)}}async showFilePreview(e){const t=document.getElementById("previewContent");if(!t)return;const i=URL.createObjectURL(e);let n;try{if(e.type.startsWith("image/"))n=document.createElement("img"),n.src=i,n.className="preview-image",n.alt=e.name;else if(e.type.startsWith("audio/"))n=document.createElement("audio"),n.controls=!0,n.src=i,n.className="preview-audio";else if(e.type.startsWith("video/"))n=document.createElement("video"),n.controls=!0,n.src=i,n.className="preview-video";else if(e.name.match(/\.html?$/i))n=document.createElement("iframe"),n.src=i,n.className="preview-iframe",n.sandbox="allow-scripts allow-same-origin";else if(e.name.match(/\.(js|css|json|txt)$/i)){const l=await this.readFileAsText(e);n=this.createCodePreview(l,e.name)}else n=document.createElement("div"),n.className="preview-unsupported",n.innerHTML=`
          <span class="file-icon">📄</span>
          <p>${e.name}</p>
          <small>File type not supported for preview</small>
        `;const a=document.createElement("div");a.className="file-info",a.innerHTML=`
        <span class="file-name">${e.name}</span>
        <span class="file-size">${this.formatFileSize(e.size)}</span>
      `;const r=document.createElement("div");r.className="preview-item",r.appendChild(a),r.appendChild(n),t.appendChild(r)}catch(a){this.error("Error creating preview for file",{fileName:e.name,error:a})}}async showProjectPreview(e,t){const i=document.getElementById("previewContent");if(i)try{const n={};e.forEach(d=>n[d.name]=d);let r=await this.readFileAsText(t);r=r.replace(/<link[^>]+href="([^"]+\.css)"[^>]*>/gi,async(d,m)=>n[m]?`<style>${await this.readFileAsText(n[m])}</style>`:d),r=r.replace(/<script[^>]+src="([^"]+\.js)"[^>]*><\/script>/gi,async(d,m)=>n[m]?`<script>${await this.readFileAsText(n[m])}<\/script>`:d);const l=new Blob([r],{type:"text/html"}),u=URL.createObjectURL(l),c=document.createElement("iframe");c.src=u,c.className="preview-iframe project-preview",c.sandbox="allow-scripts allow-same-origin allow-forms",c.title="Widget Preview";const g=document.createElement("div");g.className="project-info",g.innerHTML=`
        <h4>Project Preview</h4>
        <p>${e.length} files loaded</p>
        <ul class="file-list">
          ${e.map(d=>`<li>${d.name} (${this.formatFileSize(d.size)})</li>`).join("")}
        </ul>
      `;const h=document.createElement("div");h.className="preview-item project-preview-item",h.appendChild(g),h.appendChild(c),i.appendChild(h)}catch(n){this.error("Error creating project preview",n),this.showError("Failed to preview project: "+n.message)}}createCodePreview(e,t){const i=document.createElement("div");i.className="code-preview";const n=document.createElement("div");n.className="code-header",n.innerHTML=`
      <span class="file-name">${t}</span>
      <button class="copy-btn" onclick="navigator.clipboard.writeText(\`${e.replace(/`/g,"\\`")}\`)">📋 Copy</button>
    `;const a=document.createElement("pre");return a.className="code-content",a.textContent=e,i.appendChild(n),i.appendChild(a),i}async readFileAsText(e){return new Promise((t,i)=>{const n=new FileReader;n.onload=()=>t(n.result),n.onerror=()=>i(n.error),n.readAsText(e)})}formatFileSize(e){if(e===0)return"0 Bytes";const t=1024,i=["Bytes","KB","MB","GB"],n=Math.floor(Math.log(e)/Math.log(t));return parseFloat((e/Math.pow(t,n)).toFixed(2))+" "+i[n]}showError(e){const t=document.getElementById("previewContent");t&&(t.innerHTML=`
        <div class="preview-error">
          <span class="error-icon">❌</span>
          <p>${e}</p>
        </div>
      `)}getCurrentFiles(){return Array.from(this.currentFiles.values())}clearFiles(){this.currentFiles.clear(),this.clearPreview()}}const G=new Et;document.addEventListener("DOMContentLoaded",()=>{G.init()});class re{constructor(){this.uploadingSlots=new Set,this.log("Widget Upload Manager initialized with Cloud Functions")}log(e,t=null){console.log(`[WIDGET UPLOAD] ${e}`,t||"")}error(e,t=null){console.error(`[WIDGET UPLOAD ERROR] ${e}`,t||"")}async init(){try{return this.log("Initializing widget upload system"),this.log("Widget upload system initialized"),this.setupEventListeners(),!0}catch(e){return this.error("Failed to initialize widget upload system",e),!1}}setupEventListeners(){this.log("Setting up event listeners"),document.querySelectorAll(".upload-widget-btn").forEach(a=>{a.addEventListener("click",r=>{r.preventDefault(),r.stopPropagation(),this.handleUploadButtonClick(a)})}),document.querySelectorAll(".preview-widget-btn").forEach(a=>{a.addEventListener("click",r=>{r.preventDefault(),r.stopPropagation(),this.handlePreviewButtonClick(a)})}),document.querySelectorAll(".widget-file-input").forEach(a=>{a.addEventListener("change",r=>{this.handleFileInputChange(r.target)})}),document.querySelectorAll(".widget-upload-area").forEach(a=>{this.setupDragAndDrop(a)}),this.log("Event listeners setup complete")}setupDragAndDrop(e){const t=e.querySelector(".widget-file-input");e.addEventListener("dragover",i=>{i.preventDefault(),e.style.borderColor="var(--primary-color)",e.style.background="rgba(0, 240, 255, 0.1)"}),e.addEventListener("dragleave",i=>{i.preventDefault(),e.style.borderColor="#555",e.style.background="#0f0f0f"}),e.addEventListener("drop",i=>{i.preventDefault(),e.style.borderColor="#555",e.style.background="#0f0f0f";const n=i.dataTransfer.files;n.length>0&&(t.files=n,this.handleFileInputChange(t))}),e.addEventListener("click",i=>{i.target.closest(".file-list")||i.target.closest(".action-buttons")||(t.value="",t.click())})}handleFileInputChange(e){const t=e.files;t.length>0&&(this.log("Files selected",{count:t.length}),this.updateFileList(e,t),G.handleFiles(t))}updateFileList(e,t){const i=e.closest(".widget-upload-area"),n=i.querySelector(".upload-placeholder p");if(t.length>0){n.textContent=`${t.length} file(s) selected`;let a=i.querySelector(".file-list");a||(a=document.createElement("div"),a.className="file-list",i.appendChild(a)),a.innerHTML="",Array.from(t).forEach(r=>{const l=document.createElement("div");l.className="file-item",l.innerHTML=`
          <span class="file-name">${r.name}</span>
          <span class="file-size">${this.formatFileSize(r.size)}</span>
        `,a.appendChild(l)})}}formatFileSize(e){if(e===0)return"0 Bytes";const t=1024,i=["Bytes","KB","MB","GB"],n=Math.floor(Math.log(e)/Math.log(t));return parseFloat((e/Math.pow(t,n)).toFixed(2))+" "+i[n]}async handlePreviewButtonClick(e){const t=e.getAttribute("data-slot"),i=document.querySelector(`.widget-file-input[data-slot="${t}"]`);if(!i.files.length){this.showToast("Please select files to preview.","warning");return}this.log("Showing preview for slot",{slot:t}),await G.handleFiles(i.files)}async handleUploadButtonClick(e){const t=e.getAttribute("data-slot");if(this.uploadingSlots.has(t)){this.log("Upload already in progress for slot",{slot:t});return}const i=document.querySelector(`.widget-file-input[data-slot="${t}"]`),n=document.querySelector(`.widget-title-input[data-slot="${t}"]`),a=document.querySelector(`.widget-desc-input[data-slot="${t}"]`);if(!i.files.length){this.showToast("Please select files to upload.","warning");return}if(!x.validateFiles(i.files)){this.showToast("Invalid file type selected. Allowed: html, js, css, png, jpg, jpeg, gif, svg, json.","error");return}const r=n.value.trim()||"Untitled Widget",l=a.value.trim()||"";this.uploadingSlots.add(t),e.textContent="Uploading...",e.disabled=!0;try{this.log("Starting widget upload",{slot:t,fileCount:i.files.length});const u=await x.uploadWithProgress(i.files,t,{title:r,description:l},(c,g)=>{e.textContent=`${g} (${c}%)`});this.log("Widget upload successful",u),e.textContent=`Uploaded to Slot ${t}!`,e.style.background="linear-gradient(45deg, #4caf50, #45a049)",this.showToast(`Successfully uploaded ${u.files.length} files! 🎉`,"success"),window.widgetDisplay&&(this.log("Refreshing widget display..."),await window.widgetDisplay.loadUserWidgets(),window.widgetDisplay.setupWidgetSlots(),this.log("Widget display refreshed.")),setTimeout(()=>{e.textContent=`Upload to Slot ${t}`,e.disabled=!1,e.style.background="linear-gradient(45deg, #4caf50, #45a049)",i.value="",n.value="",a.value="";const c=i.closest(".widget-upload-area"),g=c.querySelector(".file-list");g&&g.remove();const h=c.querySelector(".upload-placeholder p");h.textContent="Drop files here or click to upload"},2e3)}catch(u){this.error("Widget upload failed",u),e.textContent="Upload Failed",e.style.background="linear-gradient(45deg, #f44336, #d32f2f)",this.showToast(`Upload failed: ${u.message}`,"error"),setTimeout(()=>{e.textContent=`Upload to Slot ${t}`,e.disabled=!1,e.style.background="linear-gradient(45deg, #4caf50, #45a049)"},2e3)}finally{this.uploadingSlots.delete(t)}}showToast(e,t="info"){window.showToast?window.showToast(e,t):console.log(`[TOAST ${t.toUpperCase()}] ${e}`)}async deleteWidget(e){try{this.log("Deleting widget",{widgetId:e});const t=await x.deleteWidget(e);return this.log("Widget deleted successfully",t),t}catch(t){throw this.error("Widget deletion failed",t),t}}async getWidgetDownloadUrls(e){try{this.log("Getting widget download URLs",{widgetId:e});const t=await x.getWidgetDownloadUrls(e);return this.log("Download URLs retrieved",t),t}catch(t){throw this.error("Failed to get download URLs",t),t}}async handleWidgetUpload(e){try{this.log("Handling widget upload from auth module",{title:e.title});const t=await x.uploadWidgetFiles(e.files,"slot-upload",{title:e.title,description:e.description||"",category:e.category||"general",tags:e.tags||[]});return this.log("Widget upload completed successfully",t),{success:!0,widgetId:t.widgetId,widget:t}}catch(t){return this.error("Widget upload failed",t),{success:!1,error:t.message}}}}const le=new re;document.addEventListener("DOMContentLoaded",()=>{le.init()});const de=Object.freeze(Object.defineProperty({__proto__:null,WidgetUploadManager:re,default:le},Symbol.toStringTag,{value:"Module"}));class St{constructor(){this.currentUser=null,this.userProfile=null,this.dashboardSettings=null,this.debugMode=!0,console.log("[PROFILE DASHBOARD] Profile Dashboard Manager initialized")}log(e,t=null){this.debugMode&&console.log(`[PROFILE DASHBOARD] ${e}`,t||"")}error(e,t=null){console.error(`[PROFILE DASHBOARD ERROR] ${e}`,t||"")}async init(){try{this.log("Initializing Profile Dashboard Manager"),await this.waitForAuth(),await this.loadUserProfile(),this.log("Profile Dashboard Manager initialization complete")}catch(e){this.error("Failed to initialize Profile Dashboard Manager",e)}}async waitForAuth(){return new Promise(e=>{if(S.currentUser)e();else{const t=S.onAuthStateChanged(i=>{i&&(t(),e())})}})}async loadUserProfile(){try{if(this.currentUser=S.currentUser,!this.currentUser){this.log("No authenticated user, using default settings"),this.dashboardSettings=this.getDefaultDashboardSettings();return}this.log("Loading user profile",{uid:this.currentUser.uid});const e=await q(A(T,"users",this.currentUser.uid));e.exists()?(this.userProfile=e.data(),this.dashboardSettings=this.userProfile.dashboardSettings||this.getDefaultDashboardSettings(),this.log("User profile and dashboard settings loaded successfully")):(this.log("User profile not found, using default settings"),this.dashboardSettings=this.getDefaultDashboardSettings())}catch(e){this.error("Failed to load user profile",e),this.dashboardSettings=this.getDefaultDashboardSettings()}}getDefaultDashboardSettings(){return{layout:"grid",theme:"neo-brutalist",customColors:{primary:"#00ffff",secondary:"#ff00ff",accent:"#ffff00",background:"#0a0a0a",text:"#ffffff"},widgetDefaults:{borderColor:"#00ffff",borderWidth:"3px",borderRadius:"0px",width:"100%",height:"300px",shadow:"0 0 20px rgba(0, 255, 255, 0.3)"},spacing:{widgetGap:"24px",sectionPadding:"40px",cardPadding:"24px"},animations:{enabled:!0,duration:"0.3s",easing:"ease-out"}}}applyDashboardSettings(e,t={}){if(!(!e||!this.dashboardSettings))try{const i={...this.dashboardSettings.widgetDefaults,...t};e.style.borderColor=i.borderColor,e.style.borderWidth=i.borderWidth,e.style.borderRadius=i.borderRadius,e.style.boxShadow=i.shadow,i.width&&(e.style.width=i.width),i.height&&(e.style.height=i.height),this.dashboardSettings.animations.enabled&&(e.style.transition=`all ${this.dashboardSettings.animations.duration} ${this.dashboardSettings.animations.easing}`),this.log("Applied dashboard settings to widget",{borderColor:i.borderColor,borderWidth:i.borderWidth,borderRadius:i.borderRadius})}catch(i){this.error("Failed to apply dashboard settings",i)}}createCustomWidgetIframe(e,t){try{if(!t||!e)return null;const i=document.createElement("iframe");return i.className="widget-iframe custom-styled",i.title=`Widget Preview - ${e.title||"Untitled Widget"}`,i.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),this.applyDashboardSettings(i),this.loadWidgetIntoIframe(e,i).catch(n=>{this.error("Failed to load widget into iframe",n),i.replaceWith(Object.assign(document.createElement("div"),{className:"widget-preview-error",textContent:"Failed to load widget preview",style:"padding: 20px; text-align: center; color: #ff4444;"}))}),i}catch(i){return this.error("Failed to create custom widget iframe",i),null}}async loadWidgetIntoIframe(e,t){try{const i=Array.isArray(e.files)?e.files:[];if(i.length===0){this.log("Project has no files",{projectId:e.id});return}const n={};i.forEach(d=>{d&&d.fileName&&d.downloadURL&&(n[d.fileName]=d.downloadURL)}),this.log("File map created",{fileCount:Object.keys(n).length,files:Object.keys(n)});const a=Object.keys(n).find(d=>/index\.html?$/i.test(d))||Object.keys(n).find(d=>/\.html?$/i.test(d));if(!a){this.log("No HTML file found for widget",{projectId:e.id});return}this.log("Loading widget HTML",{htmlFileName:a});const l=await(await fetch(n[a])).text(),u=d=>{if(!d)return null;const m=d.replace(/^\.\//,"").replace(/^\//,"");if(n[m])return n[m];const f=m.split("/").pop();return n[f]||null},c=l.replace(/(href|src)=["']([^"']+)["']/gi,(d,m,f)=>{const b=u(f);return b?`${m}="${b}"`:d}),g=new Blob([c],{type:"text/html"}),h=URL.createObjectURL(g);t.src=h,this.log("Widget iframe set with blob URL")}catch(i){throw this.error("Error preparing widget iframe",i),i}}async updateDashboardSettings(e){try{if(!this.currentUser)throw new Error("User must be authenticated to update dashboard settings");this.log("Updating dashboard settings",e);const t=A(T,"users",this.currentUser.uid);return await V(t,{dashboardSettings:e,updatedAt:oe()}),this.dashboardSettings=e,this.log("Dashboard settings updated successfully"),this.applySettingsToAllWidgets(),{success:!0}}catch(t){return this.error("Failed to update dashboard settings",t),{success:!1,error:t.message}}}applySettingsToAllWidgets(){try{const e=document.querySelectorAll(".widget-iframe, .timeline-event-card .widget-iframe");e.forEach(t=>{this.applyDashboardSettings(t)}),this.log("Applied settings to all widgets",{count:e.length})}catch(e){this.error("Failed to apply settings to all widgets",e)}}getDashboardSettings(){return this.dashboardSettings||this.getDefaultDashboardSettings()}previewDashboardSettings(e){try{const t=document.querySelectorAll(".widget-iframe, .timeline-event-card .widget-iframe");t.forEach(i=>{const n={...this.dashboardSettings.widgetDefaults,...e};this.applyDashboardSettings(i,n)}),this.log("Preview applied to widgets",{count:t.length})}catch(t){this.error("Failed to preview dashboard settings",t)}}resetToDefaults(){try{const e=this.getDefaultDashboardSettings();this.previewDashboardSettings(e),this.log("Reset to default settings")}catch(e){this.error("Failed to reset to default settings",e)}}exportSettings(){try{const e=this.getDashboardSettings(),t={version:"1.0",timestamp:new Date().toISOString(),settings:e},i=new Blob([JSON.stringify(t,null,2)],{type:"application/json"}),n=URL.createObjectURL(i),a=document.createElement("a");a.href=n,a.download=`dashboard-settings-${Date.now()}.json`,a.click(),URL.revokeObjectURL(n),this.log("Settings exported successfully")}catch(e){this.error("Failed to export settings",e)}}async importSettings(e){try{const t=await e.text(),i=JSON.parse(t);if(i.settings)return await this.updateDashboardSettings(i.settings),this.log("Settings imported successfully"),{success:!0};throw new Error("Invalid settings file format")}catch(t){return this.error("Failed to import settings",t),{success:!1,error:t.message}}}}const ce=new St;window.profileDashboardManager=ce;document.addEventListener("DOMContentLoaded",()=>{ce.init()});class ue{constructor(){this.currentUser=null,this.following=new Set,this.followers=new Set,this.debugMode=!0}log(e,t=null){this.debugMode&&console.log(`[SOCIAL FEATURES] ${e}`,t||"")}error(e,t=null){console.error(`[SOCIAL FEATURES ERROR] ${e}`,t||"")}async init(){this.log("Initializing Social Features Manager"),this.setupAuthListener(),this.setupEventListeners(),this.log("Social Features Manager initialized")}async setupAuthListener(){try{this.log("Setting up auth state listener");const{auth:e,onAuthStateChanged:t}=await y(async()=>{const{auth:i,onAuthStateChanged:n}=await Promise.resolve().then(()=>E);return{auth:i,onAuthStateChanged:n}},void 0);this.log("Firebase imports successful",{auth:!!e,onAuthStateChanged:!!t}),t(e,async i=>{this.currentUser=i,i?await this.loadUserSocialData(i.uid):(this.following.clear(),this.followers.clear())})}catch(e){this.error("Failed to setup auth listener",e)}}async loadUserSocialData(e){try{const{db:t}=await y(async()=>{const{db:r}=await Promise.resolve().then(()=>E);return{db:r}},void 0),{doc:i,getDoc:n}=await y(async()=>{const{doc:r,getDoc:l}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:r,getDoc:l}},[]),a=await n(i(t,"users",e));if(a.exists()){const r=a.data();this.following=new Set(r.following||[]),this.followers=new Set(r.followers||[]),this.log("User social data loaded",{following:this.following.size,followers:this.followers.size})}}catch(t){this.error("Failed to load user social data",t)}}async followUser(e){try{if(!this.currentUser)throw new Error("User must be logged in to follow others");const t=this.currentUser.uid;if(t===e)throw new Error("You cannot follow yourself");if(this.following.has(e))throw new Error("You are already following this user");const{db:i}=await y(async()=>{const{db:l}=await Promise.resolve().then(()=>E);return{db:l}},void 0),{doc:n,updateDoc:a,arrayUnion:r}=await y(async()=>{const{doc:l,updateDoc:u,arrayUnion:c}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:l,updateDoc:u,arrayUnion:c}},[]);return await a(n(i,"users",t),{following:r(e)}),await a(n(i,"users",e),{followers:r(t)}),this.following.add(e),await this.createFollowNotification(e,t),this.log("User followed successfully",{targetUserId:e}),{success:!0}}catch(t){return this.error("Follow action failed",t),{success:!1,error:t.message}}}async unfollowUser(e){try{if(!this.currentUser)throw new Error("User must be logged in to unfollow others");const t=this.currentUser.uid;if(!this.following.has(e))throw new Error("You are not following this user");const{db:i}=await y(async()=>{const{db:l}=await Promise.resolve().then(()=>E);return{db:l}},void 0),{doc:n,updateDoc:a,arrayRemove:r}=await y(async()=>{const{doc:l,updateDoc:u,arrayRemove:c}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:l,updateDoc:u,arrayRemove:c}},[]);return await a(n(i,"users",t),{following:r(e)}),await a(n(i,"users",e),{followers:r(t)}),this.following.delete(e),this.log("User unfollowed successfully",{targetUserId:e}),{success:!0}}catch(t){return this.error("Unfollow action failed",t),{success:!1,error:t.message}}}async likeWidget(e){try{if(!this.currentUser)throw new Error("User must be logged in to like widgets");const{db:t}=await y(async()=>{const{db:g}=await Promise.resolve().then(()=>E);return{db:g}},void 0),{doc:i,updateDoc:n,arrayUnion:a,getDoc:r}=await y(async()=>{const{doc:g,updateDoc:h,arrayUnion:d,getDoc:m}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:g,updateDoc:h,arrayUnion:d,getDoc:m}},[]),l=await r(i(t,"widgets",e));if(!l.exists())throw new Error("Widget not found");const u=l.data(),c=this.currentUser.uid;if(u.likes&&u.likes.includes(c))throw new Error("You have already liked this widget");return await n(i(t,"widgets",e),{likes:a(c),"stats.likes":(u.stats?.likes||0)+1}),await this.createLikeNotification(u.userId,c,e,u.title),this.log("Widget liked successfully",{widgetId:e}),{success:!0}}catch(t){return this.error("Like action failed",t),{success:!1,error:t.message}}}async unlikeWidget(e){try{if(!this.currentUser)throw new Error("User must be logged in to unlike widgets");const{db:t}=await y(async()=>{const{db:g}=await Promise.resolve().then(()=>E);return{db:g}},void 0),{doc:i,updateDoc:n,arrayRemove:a,getDoc:r}=await y(async()=>{const{doc:g,updateDoc:h,arrayRemove:d,getDoc:m}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:g,updateDoc:h,arrayRemove:d,getDoc:m}},[]),l=await r(i(t,"widgets",e));if(!l.exists())throw new Error("Widget not found");const u=l.data(),c=this.currentUser.uid;if(!u.likes||!u.likes.includes(c))throw new Error("You have not liked this widget");return await n(i(t,"widgets",e),{likes:a(c),"stats.likes":Math.max(0,(u.stats?.likes||1)-1)}),this.log("Widget unliked successfully",{widgetId:e}),{success:!0}}catch(t){return this.error("Unlike action failed",t),{success:!1,error:t.message}}}async shareWidget(e,t="general"){try{if(!this.currentUser)throw new Error("User must be logged in to share widgets");const{db:i}=await y(async()=>{const{db:g}=await Promise.resolve().then(()=>E);return{db:g}},void 0),{doc:n,getDoc:a,updateDoc:r,increment:l}=await y(async()=>{const{doc:g,getDoc:h,updateDoc:d,increment:m}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:g,getDoc:h,updateDoc:d,increment:m}},[]),u=await a(n(i,"widgets",e));if(!u.exists())throw new Error("Widget not found");const c=u.data();return await r(n(i,"widgets",e),{"stats.shares":l(1)}),await this.createShareNotification(c.userId,this.currentUser.uid,e,c.title,t),await this.handlePlatformSharing(c,t),this.log("Widget shared successfully",{widgetId:e,platform:t}),{success:!0}}catch(i){return this.error("Share action failed",i),{success:!1,error:i.message}}}async handlePlatformSharing(e,t){const i=`${window.location.origin}/widget/${e.id}`,n=`Check out this amazing widget: ${e.title}`;switch(t){case"twitter":window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(n)}&url=${encodeURIComponent(i)}`);break;case"facebook":window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(i)}`);break;case"linkedin":window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(i)}`);break;case"copy":await navigator.clipboard.writeText(`${n}
${i}`),this.showToast("Link copied to clipboard!","success");break;case"native":navigator.share?await navigator.share({title:e.title,text:e.description||n,url:i}):(await navigator.clipboard.writeText(`${n}
${i}`),this.showToast("Link copied to clipboard!","success"));break;default:await navigator.clipboard.writeText(`${n}
${i}`),this.showToast("Link copied to clipboard!","success")}}async discoverUsers(e=10,t=!0){try{const{db:i}=await y(async()=>{const{db:m}=await Promise.resolve().then(()=>E);return{db:m}},void 0),{collection:n,query:a,where:r,orderBy:l,limit:u,getDocs:c}=await y(async()=>{const{collection:m,query:f,where:b,orderBy:k,limit:C,getDocs:I}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{collection:m,query:f,where:b,orderBy:k,limit:C,getDocs:I}},[]);let g=a(n(i,"users"),l("createdAt","desc"),u(e));t&&this.currentUser&&(g=a(n(i,"users"),r("uid","!=",this.currentUser.uid),l("createdAt","desc"),u(e)));const h=await c(g),d=[];return h.forEach(m=>{const f=m.data();d.push({id:m.id,...f,isFollowing:this.following.has(m.id)})}),this.log("Users discovered",{count:d.length}),{success:!0,users:d}}catch(i){return this.error("Failed to discover users",i),{success:!1,error:i.message}}}async getUserFeed(e=20){try{if(!this.currentUser)throw new Error("User must be logged in to view feed");const{db:t}=await y(async()=>{const{db:h}=await Promise.resolve().then(()=>E);return{db:h}},void 0),{collection:i,query:n,where:a,orderBy:r,limit:l,getDocs:u}=await y(async()=>{const{collection:h,query:d,where:m,orderBy:f,limit:b,getDocs:k}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{collection:h,query:d,where:m,orderBy:f,limit:b,getDocs:k}},[]),c=Array.from(this.following),g=[];if(c.length>0){const h=n(i(t,"widgets"),a("userId","in",c),a("isPublic","==",!0),r("createdAt","desc"),l(e));(await u(h)).forEach(m=>{const f=m.data();g.push({type:"widget",id:m.id,data:f,timestamp:f.createdAt})})}return g.sort((h,d)=>d.timestamp?.toDate()-h.timestamp?.toDate()),this.log("User feed loaded",{count:g.length}),{success:!0,feed:g}}catch(t){return this.error("Failed to load user feed",t),{success:!1,error:t.message}}}async createFollowNotification(e,t){try{const{db:i}=await y(async()=>{const{db:d}=await Promise.resolve().then(()=>E);return{db:d}},void 0),{collection:n,addDoc:a,serverTimestamp:r}=await y(async()=>{const{collection:d,addDoc:m,serverTimestamp:f}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{collection:d,addDoc:m,serverTimestamp:f}},[]),{doc:l,getDoc:u}=await y(async()=>{const{doc:d,getDoc:m}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:d,getDoc:m}},[]),c=await u(l(i,"users",t)),g=c.exists()?c.data().displayName:"Someone",h={userId:e,type:"follow",title:"New follower! 👥",message:`${g} started following you.`,icon:"👥",data:{followerId:t,action:"view_profile"},read:!1,timestamp:r()};await a(n(i,"notifications"),h),this.log("Follow notification created",{targetUserId:e,followerId:t})}catch(i){this.error("Failed to create follow notification",i)}}async createLikeNotification(e,t,i,n){try{const{db:a}=await y(async()=>{const{db:f}=await Promise.resolve().then(()=>E);return{db:f}},void 0),{collection:r,addDoc:l,serverTimestamp:u}=await y(async()=>{const{collection:f,addDoc:b,serverTimestamp:k}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{collection:f,addDoc:b,serverTimestamp:k}},[]),{doc:c,getDoc:g}=await y(async()=>{const{doc:f,getDoc:b}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:f,getDoc:b}},[]),h=await g(c(a,"users",t)),d=h.exists()?h.data().displayName:"Someone",m={userId:e,type:"like",title:"New like! ❤️",message:`${d} liked your widget "${n}".`,icon:"❤️",data:{widgetId:i,likerId:t,action:"view_widget"},read:!1,timestamp:u()};await l(r(a,"notifications"),m),this.log("Like notification created",{widgetOwnerId:e,likerId:t,widgetId:i})}catch(a){this.error("Failed to create like notification",a)}}async createShareNotification(e,t,i,n,a){try{const{db:r}=await y(async()=>{const{db:C}=await Promise.resolve().then(()=>E);return{db:C}},void 0),{collection:l,addDoc:u,serverTimestamp:c}=await y(async()=>{const{collection:C,addDoc:I,serverTimestamp:z}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{collection:C,addDoc:I,serverTimestamp:z}},[]),{doc:g,getDoc:h}=await y(async()=>{const{doc:C,getDoc:I}=await import("https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js");return{doc:C,getDoc:I}},[]),d=await h(g(r,"users",t)),m=d.exists()?d.data().displayName:"Someone",b={twitter:"Twitter",facebook:"Facebook",linkedin:"LinkedIn",copy:"copied",native:"shared"}[a]||"shared",k={userId:e,type:"share",title:"Widget shared! 📤",message:`${m} ${b} your widget "${n}".`,icon:"📤",data:{widgetId:i,sharerId:t,platform:a,action:"view_widget"},read:!1,timestamp:c()};await u(l(r,"notifications"),k),this.log("Share notification created",{widgetOwnerId:e,sharerId:t,widgetId:i,platform:a})}catch(r){this.error("Failed to create share notification",r)}}setupEventListeners(){document.addEventListener("click",async e=>{if(e.target.matches(".follow-btn")){e.preventDefault();const t=e.target.dataset.userId,i=e.target.dataset.following==="true";i?await this.unfollowUser(t):await this.followUser(t),this.updateFollowButton(e.target,!i)}}),document.addEventListener("click",async e=>{if(e.target.matches(".like-btn")){e.preventDefault();const t=e.target.dataset.widgetId,i=e.target.dataset.liked==="true";i?await this.unlikeWidget(t):await this.likeWidget(t),this.updateLikeButton(e.target,!i)}}),document.addEventListener("click",async e=>{if(e.target.matches(".share-btn")){e.preventDefault();const t=e.target.dataset.widgetId,i=e.target.dataset.platform||"native";await this.shareWidget(t,i)}})}updateFollowButton(e,t){e.dataset.following=t.toString(),e.textContent=t?"Following":"Follow",e.className=t?"follow-btn following":"follow-btn"}updateLikeButton(e,t){e.dataset.liked=t.toString(),e.innerHTML=t?"❤️ Liked":"🤍 Like",e.className=t?"like-btn liked":"like-btn"}showToast(e,t="info"){const i=document.createElement("div");i.className=`toast ${t}`,i.innerHTML=`
      <span class="toast-message">${e}</span>
      <button class="toast-close">&times;</button>
    `,(document.getElementById("toast-container")||document.body).appendChild(i),setTimeout(()=>{i.parentNode&&i.remove()},5e3),i.querySelector(".toast-close").addEventListener("click",()=>{i.remove()})}}const ge=new ue;window.socialFeatures=ge;document.addEventListener("DOMContentLoaded",()=>{ge.init()});const Lt=Object.freeze(Object.defineProperty({__proto__:null,SocialFeaturesManager:ue},Symbol.toStringTag,{value:"Module"}));console.log("[PROFILE HUB] Initializing modular ProfileHub system...");class kt{constructor(){console.log("[PROFILE HUB] Creating ProfileHubManager..."),this.state={user:{isAuthenticated:!1,profile:null,preferences:this.getDefaultPreferences()},ui:{hubState:"minimized",chatbotState:"closed",customizationState:"closed",position:"top-right",theme:"neo-brutalist",scale:1},navigation:{currentPage:this.getCurrentPage(),history:[],bookmarks:[]},chatbot:{messages:[],isTyping:!1,commands:this.getQuickCommands()},notifications:{unreadCount:0,items:[]}},this.listeners=new Map,this.dom={},this.modules={auth:null,chatbot:null,customization:null,navigation:null},this.init()}async init(){console.log("[PROFILE HUB] Initializing ProfileHub system...");try{document.readyState==="loading"&&await new Promise(e=>{document.addEventListener("DOMContentLoaded",e)}),this.initializeDOMReferences(),await this.initializeModules(),this.setupEventListeners(),this.applySavedPreferences(),this.updateUI(),this.setupAuthListener(),console.log("[PROFILE HUB] ProfileHub initialization complete")}catch(e){console.error("[PROFILE HUB] Initialization failed:",e)}}initializeDOMReferences(){console.log("[PROFILE HUB] Initializing DOM references..."),this.dom={hub:document.getElementById("profileHub"),hubCore:document.querySelector(".hub-core"),expandedContent:document.getElementById("hubExpandedContent"),overlay:document.getElementById("profileHubOverlay"),userAvatar:document.getElementById("hubUserAvatar"),userName:document.getElementById("hubUserName"),userStatus:document.getElementById("hubUserStatus"),userLevel:document.getElementById("hubUserLevel"),statusIndicator:document.getElementById("hubStatusIndicator"),chatbotToggle:document.getElementById("hubChatbotToggle"),customizeToggle:document.getElementById("hubCustomizeToggle"),authToggle:document.getElementById("hubAuthToggle"),hubToggle:document.getElementById("hubToggleBtn"),chatbotContainer:document.getElementById("hubChatbotContainer"),chatbotSlider:document.getElementById("chatbotSlider"),chatMessages:document.getElementById("hubChatMessages"),chatInput:document.getElementById("hubChatInput"),sendChatBtn:document.getElementById("hubSendChatBtn"),chatCommands:document.getElementById("hubChatCommands"),customizationPanel:document.getElementById("hubCustomizationPanel"),userStats:document.getElementById("hubUserStats"),notificationBadge:document.getElementById("hubNotificationBadge")};const t=["hub","hubCore","expandedContent"].filter(i=>!this.dom[i]);if(t.length>0)throw new Error(`Missing required DOM elements: ${t.join(", ")}`);console.log("[PROFILE HUB] DOM references initialized successfully")}async initializeModules(){console.log("[PROFILE HUB] Initializing modules..."),this.modules.auth=new Ct(this),this.modules.chatbot=new It(this),this.modules.customization=new Tt(this),this.modules.navigation=new Bt(this),console.log("[PROFILE HUB] All modules initialized")}setupEventListeners(){console.log("[PROFILE HUB] Setting up event listeners..."),this.addEventListener(this.dom.hubToggle,"click",()=>{this.toggleHub()}),this.addEventListener(this.dom.chatbotToggle,"click",()=>{this.toggleChatbot()}),this.addEventListener(this.dom.customizeToggle,"click",()=>{this.toggleCustomization()}),this.addEventListener(this.dom.authToggle,"click",()=>{this.modules.auth.handleAuthToggle()}),this.addEventListener(this.dom.userAvatar,"click",()=>{this.handleUserAvatarClick()}),this.addEventListener(this.dom.overlay,"click",()=>{this.closeAllPanels()}),this.addEventListener(document,"keydown",e=>{this.handleKeyboardShortcuts(e)}),this.setupNavigationListeners(),this.setupQuickActionListeners(),this.addEventListener(window,"resize",()=>{this.handleResize()}),console.log("[PROFILE HUB] Event listeners set up successfully")}setupNavigationListeners(){const e=this.dom.expandedContent?.querySelectorAll(".nav-link");e&&e.forEach(t=>{this.addEventListener(t,"click",i=>{this.handleNavigation(i,t)})})}setupQuickActionListeners(){const e=this.dom.expandedContent?.querySelectorAll(".quick-action-btn");e&&e.forEach(t=>{this.addEventListener(t,"click",()=>{const i=t.dataset.action;this.handleQuickAction(i)})})}handleNavigation(e,t){const i=t.getAttribute("href"),n=i.startsWith("http");console.log(`[PROFILE HUB] Navigation requested: ${i}`),n||(e.preventDefault(),this.state.navigation.history.push({url:i,timestamp:Date.now(),title:t.textContent.trim()}),t.style.transform="scale(0.95)",setTimeout(()=>{t.style.transform=""},150),setTimeout(()=>{window.location.href=i},200)),setTimeout(()=>{this.setState({ui:{hubState:"minimized"}})},100)}handleQuickAction(e){switch(console.log(`[PROFILE HUB] Quick action: ${e}`),e){case"newWidget":this.modules.navigation.openWidgetStudio();break;case"shareProfile":this.modules.navigation.shareProfile();break;case"notifications":this.modules.navigation.openNotifications();break;case"settings":this.toggleCustomization();break;default:console.warn(`[PROFILE HUB] Unknown action: ${e}`)}}handleKeyboardShortcuts(e){(e.ctrlKey||e.metaKey)&&e.shiftKey&&e.key==="H"&&(e.preventDefault(),this.toggleHub()),(e.ctrlKey||e.metaKey)&&e.shiftKey&&e.key==="C"&&(e.preventDefault(),this.toggleChatbot()),e.key==="Escape"&&this.closeAllPanels()}handleResize(){this.adjustHubPosition()}handleUserAvatarClick(){this.state.user.isAuthenticated?this.toggleHub():this.modules.auth.openAuthModal()}toggleHub(){const t=this.state.ui.hubState==="expanded"?"minimized":"expanded";console.log(`[PROFILE HUB] Toggling hub: ${this.state.ui.hubState} -> ${t}`),this.setState({ui:{hubState:t,customizationState:"closed"}})}toggleChatbot(){const e=this.state.ui.hubState==="chatbot-active",t=e?"minimized":"chatbot-active";console.log(`[PROFILE HUB] Toggling chatbot: ${this.state.ui.hubState} -> ${t}`),this.setState({ui:{hubState:t,customizationState:"closed"}}),e||this.modules.chatbot.initialize()}toggleCustomization(){const e=this.state.ui.customizationState==="open",t=e?"closed":"open";console.log(`[PROFILE HUB] Toggling customization: ${this.state.ui.customizationState} -> ${t}`),this.setState({ui:{customizationState:t,hubState:e?"minimized":"expanded"}})}closeAllPanels(){console.log("[PROFILE HUB] Closing all panels"),this.setState({ui:{hubState:"minimized",customizationState:"closed"}})}updateUI(){if(!this.dom.hub)return;const{ui:e,user:t,notifications:i}=this.state;this.dom.hub.setAttribute("data-state",e.hubState),this.dom.hub.setAttribute("data-theme",e.theme),this.dom.hub.setAttribute("data-position",e.position),this.dom.hub.style.setProperty("--hub-scale",e.scale),this.dom.overlay&&this.dom.overlay.classList.toggle("active",e.hubState==="expanded"||e.hubState==="chatbot-active"||e.customizationState==="open"),this.updateUserInfo(),this.updateNotificationBadge(),this.dom.customizationPanel&&this.dom.customizationPanel.classList.toggle("active",e.customizationState==="open"),console.log("[PROFILE HUB] UI updated")}updateUserInfo(){const{user:e}=this.state;this.dom.userName&&(this.dom.userName.textContent=e.isAuthenticated?e.profile?.displayName||e.profile?.name||"User":"Guest"),this.dom.userStatus&&(this.dom.userStatus.textContent=e.isAuthenticated?"Online • Authenticated":"Click to customize"),this.dom.userLevel&&(this.dom.userLevel.textContent=e.isAuthenticated?`LVL • ${e.profile?.level||1}`:"LVL • ?"),this.dom.statusIndicator&&(this.dom.statusIndicator.className=`avatar-status-indicator ${e.isAuthenticated?"online":"offline"}`),this.dom.authToggle&&(this.dom.authToggle.classList.toggle("logged-in",e.isAuthenticated),this.dom.authToggle.querySelector(".btn-icon").textContent=e.isAuthenticated?"👤":"🔐"),this.dom.userStats&&(this.dom.userStats.style.display=e.isAuthenticated?"block":"none"),console.log("[PROFILE HUB] User info updated")}updateNotificationBadge(){const{notifications:e}=this.state;this.dom.notificationBadge&&(this.dom.notificationBadge.textContent=e.unreadCount,this.dom.notificationBadge.style.display=e.unreadCount>0?"flex":"none")}setupAuthListener(){window.addEventListener("auth-state-changed",e=>{const{user:t}=e.detail;this.handleAuthStateChange(t)})}handleAuthStateChange(e){console.log("[PROFILE HUB] Auth state changed:",e?"logged in":"logged out"),this.setState({user:{isAuthenticated:!!e,profile:e?this.extractUserProfile(e):null}})}extractUserProfile(e){return{uid:e.uid,email:e.email,displayName:e.displayName,photoURL:e.photoURL,name:e.displayName||e.email?.split("@")[0],level:1}}setState(e,t=!0){this.state=this.deepMerge(this.state,e),this.updateUI(),e.ui?.position&&this.handlePositionChange(e.ui.position),t&&e.user?.preferences&&this.savePreferences(),this.emit("state-changed",{state:this.state,changes:e}),console.log("[PROFILE HUB] State updated:",e)}deepMerge(e,t){const i={...e};for(const n in t)t[n]&&typeof t[n]=="object"&&!Array.isArray(t[n])?i[n]=this.deepMerge(i[n]||{},t[n]):i[n]=t[n];return i}addEventListener(e,t,i){if(!e)return;e.addEventListener(t,i);const n=`${t}-${Date.now()}-${Math.random()}`;return this.listeners.set(n,{element:e,event:t,handler:i}),n}removeEventListener(e){const t=this.listeners.get(e);t&&(t.element.removeEventListener(t.event,t.handler),this.listeners.delete(e))}emit(e,t){const i=new CustomEvent(`profilehub-${e}`,{detail:t});window.dispatchEvent(i)}getCurrentPage(){return window.location.pathname.split("/").pop()||"index.html"}getDefaultPreferences(){return{theme:"neo-brutalist",position:"top-right",scale:1,autoMinimize:!0,chatbotEnabled:!0,keyboardShortcuts:!0,animations:!0}}getQuickCommands(){return[{command:"/navigate projects",label:"🔗 Projects",action:"navigate",target:"pages/my-projects.html"},{command:"/help customize",label:"⚙️ Customize",action:"customize",target:null},{command:"/stats",label:"📊 Stats",action:"stats",target:null},{command:"/help",label:"❓ Help",action:"help",target:null}]}savePreferences(){try{localStorage.setItem("profilehub-preferences",JSON.stringify(this.state.user.preferences)),console.log("[PROFILE HUB] Preferences saved")}catch(e){console.warn("[PROFILE HUB] Failed to save preferences:",e)}}applySavedPreferences(){try{const e=localStorage.getItem("profilehub-preferences");if(e){const t=JSON.parse(e);this.setState({user:{preferences:t},ui:{theme:t.theme||"neo-brutalist",position:t.position||"top-right",scale:t.scale||1}},!1),console.log("[PROFILE HUB] Preferences applied")}}catch(e){console.warn("[PROFILE HUB] Failed to load preferences:",e)}}adjustHubPosition(){const e=this.dom.hub.getBoundingClientRect();(e.right>window.innerWidth||e.bottom>window.innerHeight)&&console.log("[PROFILE HUB] Adjusting position for viewport")}handlePositionChange(e){console.log("[PROFILE HUB] Handling position change to:",e),this.updateModalPositions(e),this.emit("position-changed",{position:e,previousPosition:this.state.ui.position}),this.repositionOpenModals(e)}updateModalPositions(e){const t=this.getModalPositionConfigs(e);this.dom.expandedContent&&this.updateModalPosition(this.dom.expandedContent,t.expanded),this.dom.chatbotContainer&&this.updateModalPosition(this.dom.chatbotContainer,t.chatbot),this.dom.customizationPanel&&this.updateModalPosition(this.dom.customizationPanel,t.customization),console.log("[PROFILE HUB] Modal positions updated for:",e)}getModalPositionConfigs(e){const t={expanded:{},chatbot:{},customization:{}};switch(e){case"top-left":t.expanded={top:"100%",left:"0",right:"auto",bottom:"auto",transform:"translateY(0)"},t.chatbot={top:"0",right:"100%",left:"auto",bottom:"auto",marginRight:"12px",transform:"translateX(-20px)"},t.customization={top:"100%",left:"0",right:"auto",bottom:"auto",transform:"translateY(-100%)"};break;case"top-right":t.expanded={top:"100%",right:"0",left:"auto",bottom:"auto",transform:"translateY(0)"},t.chatbot={top:"0",right:"100%",left:"auto",bottom:"auto",marginRight:"12px",transform:"translateX(-20px)"},t.customization={top:"100%",right:"0",left:"auto",bottom:"auto",transform:"translateY(-100%)"};break;case"bottom-left":t.expanded={top:"auto",left:"0",right:"auto",bottom:"100%",transform:"translateY(0)"},t.chatbot={top:"auto",right:"100%",left:"auto",bottom:"0",marginRight:"12px",transform:"translateX(-20px)"},t.customization={top:"auto",left:"0",right:"auto",bottom:"100%",transform:"translateY(100%)"};break;case"bottom-right":t.expanded={top:"auto",right:"0",left:"auto",bottom:"100%",transform:"translateY(0)"},t.chatbot={top:"auto",right:"100%",left:"auto",bottom:"0",marginRight:"12px",transform:"translateX(-20px)"},t.customization={top:"auto",right:"0",left:"auto",bottom:"100%",transform:"translateY(100%)"};break}return t}updateModalPosition(e,t){e&&(Object.keys(t).forEach(i=>{e.style[i]=t[i]}),e.className=e.className.replace(/position-\w+/g,""),e.classList.add(`position-${this.state.ui.position}`))}repositionOpenModals(e){const{ui:t}=this.state;t.hubState==="expanded"&&this.dom.expandedContent&&this.updateModalPositions(e),t.hubState==="chatbot-active"&&this.dom.chatbotContainer&&this.updateModalPositions(e),t.customizationState==="open"&&this.dom.customizationPanel&&this.updateModalPositions(e)}destroy(){console.log("[PROFILE HUB] Destroying ProfileHub..."),this.listeners.forEach((e,t)=>{this.removeEventListener(t)}),Object.values(this.modules).forEach(e=>{e&&typeof e.destroy=="function"&&e.destroy()}),console.log("[PROFILE HUB] ProfileHub destroyed")}}class Ct{constructor(e){this.hub=e,console.log("[AUTH MODULE] Initialized")}handleAuthToggle(){this.hub.state.user.isAuthenticated?this.openProfileMenu():this.openAuthModal()}openAuthModal(){if(console.log("[AUTH MODULE] Opening auth modal..."),window.openAuthModal)window.openAuthModal("login");else{const e=document.getElementById("authModal");e&&(e.style.display="block",document.body.style.overflow="hidden")}this.hub.setState({ui:{hubState:"minimized"}})}openProfileMenu(){console.log("[AUTH MODULE] Opening profile menu..."),this.hub.toggleHub()}}class It{constructor(e){this.hub=e,this.initialized=!1,console.log("[CHATBOT MODULE] Initialized")}initialize(){this.initialized||(console.log("[CHATBOT MODULE] Setting up chatbot integration..."),this.setupChatbotListeners(),this.loadChatHistory(),this.setupQuickCommands(),this.initialized=!0,console.log("[CHATBOT MODULE] Chatbot integration ready"))}setupChatbotListeners(){const{dom:e}=this.hub;this.hub.addEventListener(e.sendChatBtn,"click",()=>{this.sendMessage()}),this.hub.addEventListener(e.chatInput,"keypress",a=>{a.key==="Enter"&&!a.shiftKey&&(a.preventDefault(),this.sendMessage())});const t=e.chatCommands?.querySelectorAll(".command-chip");t&&t.forEach(a=>{this.hub.addEventListener(a,"click",()=>{const r=a.dataset.command;this.executeCommand(r)})});const i=e.chatbotSlider?.querySelector("#chatbotClose"),n=e.chatbotSlider?.querySelector("#chatbotMinimize");i&&this.hub.addEventListener(i,"click",()=>{this.hub.setState({ui:{hubState:"minimized"}})}),n&&this.hub.addEventListener(n,"click",()=>{this.hub.setState({ui:{hubState:"expanded"}})})}async sendMessage(){const{dom:e}=this.hub,t=e.chatInput?.value.trim();if(t){if(console.log("[CHATBOT MODULE] Sending message:",t),e.chatInput.value="",this.addMessage(t,"user"),t.startsWith("/")){this.executeCommand(t);return}this.showTypingIndicator();try{const i=await this.getAIResponse(t);this.hideTypingIndicator(),this.addMessage(i,"ai")}catch(i){console.error("[CHATBOT MODULE] Error getting AI response:",i),this.hideTypingIndicator(),this.addMessage("Sorry, I encountered an error. Please try again.","ai")}}}addMessage(e,t){const{dom:i}=this.hub;if(!i.chatMessages)return;const n=document.createElement("div");n.className=`message ${t}-message`,n.innerHTML=`
      <div class="message-avatar">${t==="user"?"👤":"🤖"}</div>
      <div class="message-content">
        <p>${e}</p>
      </div>
    `,i.chatMessages.appendChild(n),i.chatMessages.scrollTop=i.chatMessages.scrollHeight,this.hub.setState({chatbot:{messages:[...this.hub.state.chatbot.messages,{content:e,sender:t,timestamp:Date.now()}]}}),console.log(`[CHATBOT MODULE] Added ${t} message`)}showTypingIndicator(){const{dom:e}=this.hub;if(!e.chatMessages)return;const t=document.createElement("div");t.className="message ai-message typing",t.id="hubTypingIndicator",t.innerHTML=`
      <div class="message-avatar">🤖</div>
      <div class="message-content">
        <p>Thinking...</p>
      </div>
    `,e.chatMessages.appendChild(t),e.chatMessages.scrollTop=e.chatMessages.scrollHeight,this.hub.setState({chatbot:{isTyping:!0}})}hideTypingIndicator(){const e=document.getElementById("hubTypingIndicator");e&&e.remove(),this.hub.setState({chatbot:{isTyping:!1}})}async getAIResponse(e){try{const t=this.getContextualResponse(e);return t||(window.getAIResponse?await window.getAIResponse(e):this.getFallbackResponse(e))}catch(t){return console.error("[CHATBOT MODULE] AI response error:",t),"I'm here to help you navigate and customize your ProfileHub experience. What would you like to know?"}}getContextualResponse(e){const t=e.toLowerCase();return t.includes("navigate")||t.includes("go to")?"I can help you navigate! Use commands like '/navigate projects' to go to your projects, or click the navigation links in your expanded hub.":t.includes("customize")||t.includes("theme")?"To customize your ProfileHub, click the gear icon or use '/help customize'. You can change themes, colors, position, and more!":t.includes("stats")||t.includes("profile")?"Your profile stats show your widgets, followers, and views. Use '/stats' to see detailed information about your account.":null}getFallbackResponse(e){const t=["I'm your integrated AI assistant! I can help you navigate, customize your hub, and answer questions about the platform.","Try using commands like '/navigate projects' or '/help customize' for quick actions!","I can help you understand ProfileHub features. What would you like to explore?","Your ProfileHub is fully customizable! Ask me about themes, positioning, or navigation."];return t[Math.floor(Math.random()*t.length)]}executeCommand(e){console.log("[CHATBOT MODULE] Executing command:",e);const t=e.split(" "),i=t[0].substring(1),n=t.slice(1).join(" ");switch(i){case"navigate":this.executeNavigateCommand(n);break;case"help":this.executeHelpCommand(n);break;case"stats":this.executeStatsCommand();break;case"customize":this.executeCustomizeCommand();break;default:this.addMessage(`Unknown command: ${e}. Try '/help' for available commands.`,"ai")}}executeNavigateCommand(e){const t={projects:"pages/my-projects.html",studio:"pages/widget_studio.html",explore:"pages/explore.html",community:"pages/users.html"};t[e]?(this.addMessage(`Navigating to ${e}...`,"ai"),setTimeout(()=>{window.location.href=t[e]},1e3)):this.addMessage(`Available navigation targets: ${Object.keys(t).join(", ")}`,"ai")}executeHelpCommand(e){e==="customize"?(this.addMessage("To customize your ProfileHub: Click the gear icon, choose themes, adjust colors and position. Your changes are saved automatically!","ai"),this.hub.toggleCustomization()):this.addMessage(`Available commands:
      • /navigate [projects|studio|explore|community]
      • /help [customize]
      • /stats
      • /customize`,"ai")}executeStatsCommand(){const{user:e}=this.hub.state;e.isAuthenticated?this.addMessage(`Your Stats:
      • Level: ${e.profile?.level||1}
      • Widgets: ${e.profile?.stats?.widgetsCreated||0}
      • Followers: ${e.profile?.stats?.followersCount||0}
      • Views: ${e.profile?.stats?.totalViews||0}`,"ai"):this.addMessage("Please log in to view your stats!","ai")}executeCustomizeCommand(){this.addMessage("Opening customization panel...","ai"),this.hub.toggleCustomization()}setupQuickCommands(){}loadChatHistory(){try{const e=localStorage.getItem("profilehub-chat-history");if(e){const t=JSON.parse(e);this.hub.setState({chatbot:{messages:t}},!1),t.forEach(i=>{this.addMessage(i.content,i.sender)})}}catch(e){console.warn("[CHATBOT MODULE] Failed to load chat history:",e)}}}class Tt{constructor(e){this.hub=e,this.setupCustomizationControls(),console.log("[CUSTOMIZATION MODULE] Initialized")}setupCustomizationControls(){const e=document.getElementById("hubCustomizationPanel");if(!e)return;e.querySelectorAll(".theme-option").forEach(u=>{this.hub.addEventListener(u,"click",()=>{this.setTheme(u.dataset.theme)})});const i=e.querySelector("#hubPrimaryColor");i&&this.hub.addEventListener(i,"change",u=>{this.setPrimaryColor(u.target.value)});const n=e.querySelector("#hubPosition");n&&this.hub.addEventListener(n,"change",u=>{this.setPosition(u.target.value)});const a=e.querySelector("#hubSize");a&&this.hub.addEventListener(a,"input",u=>{this.setSize(parseFloat(u.target.value))});const r=e.querySelector("#saveCustomization"),l=e.querySelector("#resetCustomization");r&&this.hub.addEventListener(r,"click",()=>{this.saveCustomization()}),l&&this.hub.addEventListener(l,"click",()=>{this.resetCustomization()})}setTheme(e){console.log("[CUSTOMIZATION MODULE] Setting theme:",e),this.hub.setState({ui:{theme:e},user:{preferences:{theme:e}}}),document.querySelectorAll(".theme-option").forEach(t=>{t.classList.toggle("active",t.dataset.theme===e)})}setPrimaryColor(e){console.log("[CUSTOMIZATION MODULE] Setting primary color:",e),this.hub.dom.hub.style.setProperty("--hub-primary",e),this.hub.setState({user:{preferences:{primaryColor:e}}})}setPosition(e){console.log("[CUSTOMIZATION MODULE] Setting position:",e),this.hub.setState({ui:{position:e},user:{preferences:{position:e}}}),this.hub.updateUI(),console.log("[CUSTOMIZATION MODULE] Position updated to:",this.hub.state.ui.position),console.log("[CUSTOMIZATION MODULE] Hub element data-position:",this.hub.dom.hub.getAttribute("data-position"))}setSize(e){console.log("[CUSTOMIZATION MODULE] Setting size:",e),this.hub.setState({ui:{scale:e},user:{preferences:{scale:e}}})}saveCustomization(){this.hub.savePreferences(),this.showCustomizationToast("Customization saved!","success")}resetCustomization(){const e=this.hub.getDefaultPreferences();this.hub.setState({ui:{theme:e.theme,position:e.position,scale:e.scale},user:{preferences:e}}),this.updateCustomizationUI(),this.showCustomizationToast("Customization reset to defaults","info")}updateCustomizationUI(){const{ui:e}=this.hub.state;document.querySelectorAll(".theme-option").forEach(n=>{n.classList.toggle("active",n.dataset.theme===e.theme)}),document.getElementById("hubPrimaryColor");const t=document.getElementById("hubPosition"),i=document.getElementById("hubSize");t&&(t.value=e.position),i&&(i.value=e.scale)}showCustomizationToast(e,t){window.socialAuth&&window.socialAuth.showToast?window.socialAuth.showToast(e,t):console.log(`[CUSTOMIZATION MODULE] ${e}`)}}class Bt{constructor(e){this.hub=e,console.log("[NAVIGATION MODULE] Initialized")}openWidgetStudio(){console.log("[NAVIGATION MODULE] Opening Widget Studio..."),window.openWidgetStudio?window.openWidgetStudio():window.location.href="pages/widget_studio.html",this.hub.setState({ui:{hubState:"minimized"}})}shareProfile(){console.log("[NAVIGATION MODULE] Sharing profile...");const e=window.location.href;navigator.share?navigator.share({title:"Check out my profile!",url:e}):navigator.clipboard&&(navigator.clipboard.writeText(e),this.showNavigationToast("Profile URL copied to clipboard!","success"))}openNotifications(){console.log("[NAVIGATION MODULE] Opening notifications..."),window.openNotificationsPanel?window.openNotificationsPanel():this.showNavigationToast("Notifications panel coming soon!","info")}showNavigationToast(e,t){window.socialAuth&&window.socialAuth.showToast&&window.socialAuth.showToast(e,t)}}async function Mt(){try{console.log("[PROFILE HUB] Loading ProfileHub HTML content...");const o=await fetch("pages/page_modals/profile_banner.html");if(!o.ok)throw new Error(`Failed to load ProfileHub HTML: ${o.status}`);const e=await o.text(),t=document.getElementById("profileHubContainer");t?(t.innerHTML=e,console.log("[PROFILE HUB] ProfileHub HTML content loaded successfully")):console.warn("[PROFILE HUB] ProfileHub container not found")}catch(o){console.error("[PROFILE HUB] Error loading ProfileHub HTML:",o),Pt()}}function Pt(){console.log("[PROFILE HUB] Creating fallback ProfileHub structure...");const o=document.getElementById("profileHubContainer");o&&(o.innerHTML=`
    <div id="profileHub" class="profile-hub" data-state="minimized">
      <div class="hub-core">
        <div class="hub-user-section">
          <div class="user-avatar-container">
            <div id="hubUserAvatar" class="hub-user-avatar">
              <span class="avatar-emoji">👤</span>
              <div class="avatar-status-indicator" id="hubStatusIndicator"></div>
            </div>
          </div>
          <div class="hub-user-info">
            <div id="hubUserName" class="hub-user-name">Guest</div>
            <div id="hubUserStatus" class="hub-user-status">Click to customize</div>
            <div id="hubUserLevel" class="hub-user-level">LVL • ?</div>
          </div>
        </div>
        <div class="hub-controls">
          <button id="hubChatbotToggle" class="hub-control-btn" title="AI Assistant">
            <span class="btn-icon">🤖</span>
            <span class="btn-pulse" id="chatbotPulse"></span>
          </button>
          <button id="hubCustomizeToggle" class="hub-control-btn" title="Customize Hub">
            <span class="btn-icon">⚙️</span>
          </button>
          <button id="hubAuthToggle" class="hub-control-btn hub-auth-btn" title="Login / Profile">
            <span class="btn-icon">🔐</span>
          </button>
        </div>
        <button id="hubToggleBtn" class="hub-toggle-btn" title="Expand Hub">
          <span class="toggle-icon">⫷</span>
        </button>
      </div>
      <div class="hub-expanded-content" id="hubExpandedContent">
        <div class="hub-navigation">
          <h3 class="nav-section-title">Navigate</h3>
          <div class="nav-links-grid">
            <a href="pages/my-projects.html" class="nav-link" data-color="primary">
              <span class="nav-icon">📊</span>
              <span class="nav-label">Projects</span>
            </a>
            <a href="pages/widget_studio.html" class="nav-link" data-color="secondary">
              <span class="nav-icon">🎨</span>
              <span class="nav-label">Studio</span>
            </a>
            <a href="pages/explore.html" class="nav-link" data-color="accent">
              <span class="nav-icon">🔍</span>
              <span class="nav-label">Explore</span>
            </a>
            <a href="pages/users.html" class="nav-link" data-color="success">
              <span class="nav-icon">👥</span>
              <span class="nav-label">Community</span>
            </a>
          </div>
        </div>
        <div class="hub-quick-actions">
          <h3 class="nav-section-title">Quick Actions</h3>
          <div class="quick-actions-grid">
            <button class="quick-action-btn" data-action="newWidget">
              <span class="action-icon">➕</span>
              <span class="action-label">New Widget</span>
            </button>
            <button class="quick-action-btn" data-action="shareProfile">
              <span class="action-icon">🔗</span>
              <span class="action-label">Share</span>
            </button>
            <button class="quick-action-btn" data-action="notifications">
              <span class="action-icon">🔔</span>
              <span class="action-label">Notifications</span>
              <span class="notification-badge" id="hubNotificationBadge">0</span>
            </button>
            <button class="quick-action-btn" data-action="settings">
              <span class="action-icon">⚙️</span>
              <span class="action-label">Settings</span>
            </button>
          </div>
        </div>
        <div class="hub-user-stats" id="hubUserStats" style="display: none;">
          <h3 class="nav-section-title">Stats</h3>
          <div class="stats-grid">
            <div class="stat-item">
              <span class="stat-value" id="hubWidgetCount">0</span>
              <span class="stat-label">Widgets</span>
            </div>
            <div class="stat-item">
              <span class="stat-value" id="hubFollowerCount">0</span>
              <span class="stat-label">Followers</span>
            </div>
            <div class="stat-item">
              <span class="stat-value" id="hubViewCount">0</span>
              <span class="stat-label">Views</span>
            </div>
          </div>
        </div>
      </div>
      <div class="hub-chatbot-container" id="hubChatbotContainer">
        <div class="chatbot-slider" id="chatbotSlider">
          <div class="chatbot-header">
            <div class="chatbot-title">
              <span class="chatbot-icon">🤖</span>
              <span>AI Assistant</span>
            </div>
            <div class="chatbot-controls">
              <button id="chatbotMinimize" class="chatbot-control-btn" title="Minimize">−</button>
              <button id="chatbotClose" class="chatbot-control-btn" title="Close">×</button>
            </div>
          </div>
          <div class="chatbot-content">
            <div class="chat-messages" id="hubChatMessages">
              <div class="message ai-message">
                <div class="message-avatar">🤖</div>
                <div class="message-content">
                  <p>Hi! I'm your AI assistant integrated into your ProfileHub. How can I help you navigate or customize your experience?</p>
                </div>
              </div>
            </div>
            <div class="chat-input-container">
              <input type="text" id="hubChatInput" class="chat-input" placeholder="Ask me anything..." maxlength="500">
              <button id="hubSendChatBtn" class="send-chat-btn">
                <span class="btn-icon">📤</span>
              </button>
            </div>
            <div class="chat-quick-commands" id="hubChatCommands">
              <button class="command-chip" data-command="/navigate projects">🔗 Projects</button>
              <button class="command-chip" data-command="/help customize">⚙️ Customize</button>
              <button class="command-chip" data-command="/stats">📊 Stats</button>
              <button class="command-chip" data-command="/help">❓ Help</button>
            </div>
          </div>
        </div>
      </div>
      <div class="hub-customization-panel" id="hubCustomizationPanel">
        <div class="customization-content">
          <h3>Customize Your Hub</h3>
          <div class="customization-section">
            <label class="section-label">Theme</label>
            <div class="theme-selector">
              <button class="theme-option active" data-theme="neo-brutalist">Neo</button>
              <button class="theme-option" data-theme="minimal">Minimal</button>
              <button class="theme-option" data-theme="cyberpunk">Cyber</button>
              <button class="theme-option" data-theme="custom">Custom</button>
            </div>
          </div>
          <div class="customization-section">
            <label class="section-label">Primary Color</label>
            <input type="color" id="hubPrimaryColor" class="color-picker" value="#00f0ff">
          </div>
          <div class="customization-section">
            <label class="section-label">Hub Position</label>
            <select id="hubPosition" class="position-selector">
              <option value="top-right" selected>Top Right</option>
              <option value="top-left">Top Left</option>
              <option value="bottom-left">Bottom Left</option>
              <option value="bottom-right">Bottom Right</option>
            </select>
          </div>
          <div class="customization-section">
            <label class="section-label">Hub Size</label>
            <input type="range" id="hubSize" class="size-slider" min="0.8" max="1.5" step="0.1" value="1">
          </div>
          <div class="customization-actions">
            <button id="saveCustomization" class="save-btn">Save Changes</button>
            <button id="resetCustomization" class="reset-btn">Reset</button>
          </div>
        </div>
      </div>
    </div>
    <div id="profileHubOverlay" class="profile-hub-overlay"></div>
  `,console.log("[PROFILE HUB] Fallback ProfileHub structure created"))}let L=null;document.addEventListener("DOMContentLoaded",async()=>{console.log("[PROFILE HUB] DOM ready, initializing ProfileHub...");try{await Mt(),L=new kt,window.profileHubManager=L,console.log("[PROFILE HUB] ProfileHub system ready!")}catch(o){console.error("[PROFILE HUB] Failed to initialize ProfileHub:",o)}});window.toggleProfileHub=()=>L?.toggleHub();window.toggleProfileChatbot=()=>L?.toggleChatbot();window.openProfileCustomization=()=>L?.toggleCustomization();window.resetProfileBannerPosition=(o="top-right")=>{console.log("[PROFILE HUB DEBUG] Resetting position to:",o),L?(L.setState({ui:{position:o},user:{preferences:{position:o}}}),L.updateUI(),console.log("[PROFILE HUB DEBUG] Position reset complete")):console.warn("[PROFILE HUB DEBUG] ProfileHub manager not available")};window.ProfileHubEvents={onPositionChange:o=>{const e=t=>{o(t.detail)};return window.addEventListener("profilehub-position-changed",e),()=>{window.removeEventListener("profilehub-position-changed",e)}},onStateChange:o=>{const e=t=>{o(t.detail)};return window.addEventListener("profilehub-state-changed",e),()=>{window.removeEventListener("profilehub-state-changed",e)}},getCurrentPosition:()=>L?.state?.ui?.position||"top-right",getCurrentState:()=>L?.state?.ui?.hubState||"minimized",isModalOpen:o=>{if(!L)return!1;const{ui:e}=L.state;switch(o){case"expanded":return e.hubState==="expanded";case"chatbot":return e.hubState==="chatbot-active";case"customization":return e.customizationState==="open";default:return!1}}};window.openChatbot=()=>L?.toggleChatbot();window.openWorkflowManager=()=>{const o=document.getElementById("workflowManagerModal");o&&(o.style.display="block",document.body.style.overflow="hidden")};window.openAuthModal=(o="login")=>{const e=document.getElementById("authModal");if(e){e.style.display="block",document.body.style.overflow="hidden";const t=document.getElementById("loginForm"),i=document.getElementById("signUpForm"),n=document.getElementById("forgotPasswordForm"),a=document.getElementById("authModalTitle");o==="signup"?(t.style.display="none",i.style.display="block",n.style.display="none",a.textContent="Sign Up"):o==="forgot"?(t.style.display="none",i.style.display="none",n.style.display="block",a.textContent="Reset Password"):(t.style.display="block",i.style.display="none",n.style.display="none",a.textContent="Login")}};console.log("[PROFILE HUB] ProfileHub module loaded successfully");console.log("[WORKFLOW MANAGER] Initializing workflow manager...");let $=[],he=[],me=[],pe=[];function At(){console.log("[WORKFLOW MANAGER] Initializing workflow manager components..."),xt(),Dt(),zt(),Ot(),Wt(),Ht(),console.log("[WORKFLOW MANAGER] Workflow manager initialized successfully")}function xt(){const o=document.querySelectorAll(".tab-button"),e=document.querySelectorAll(".tab-content");o.forEach(t=>{t.addEventListener("click",()=>{const i=t.getAttribute("data-tab");o.forEach(n=>n.classList.remove("active")),e.forEach(n=>n.classList.remove("active")),t.classList.add("active"),document.getElementById(`${i}-tab`).classList.add("active"),console.log(`[WORKFLOW MANAGER] Switched to tab: ${i}`)})})}function Dt(){const o=document.getElementById("createWorkflowBtn");o&&o.addEventListener("click",Qt);const e=document.getElementById("scheduleWorkflowBtn");e&&e.addEventListener("click",openScheduleWorkflowModal);const t=document.getElementById("createWorkflowForm");t&&t.addEventListener("submit",Zt);const i=document.getElementById("addStepBtn");i&&i.addEventListener("click",Yt);const n=document.getElementById("cancelCreateWorkflow");n&&n.addEventListener("click",we),document.querySelectorAll(".close-button").forEach(r=>{r.addEventListener("click",l=>{const u=l.target.closest(".modal");u&&(u.style.display="none")})})}async function zt(){console.log("[WORKFLOW MANAGER] Loading workflows...");try{const o=[{id:"full-code-review",name:"Full Code Review",description:"Comprehensive code analysis, security scan, auto-fix, and documentation",stepCount:5,status:"available"},{id:"security-check",name:"Security Check",description:"Quick security vulnerability scan",stepCount:2,status:"available"},{id:"documentation-only",name:"Documentation Generation",description:"Generate comprehensive documentation for code",stepCount:2,status:"available"}];$=o,fe(),console.log(`[WORKFLOW MANAGER] Loaded ${o.length} workflows`)}catch(o){console.error("[WORKFLOW MANAGER] Error loading workflows:",o)}}function fe(){const o=document.getElementById("workflowList");o&&(o.innerHTML="",$.forEach(e=>{const t=Ut(e);o.appendChild(t)}))}function Ut(o){const e=document.createElement("div");return e.className="workflow-card",e.innerHTML=`
    <div class="workflow-card-header">
      <h4 class="workflow-name">${o.name}</h4>
      <div class="workflow-status status-${o.status}">${o.status}</div>
    </div>
    <div class="workflow-card-body">
      <p class="workflow-description">${o.description}</p>
      <div class="workflow-meta">
        <span class="step-count">${o.stepCount} steps</span>
        <span class="workflow-id">ID: ${o.id}</span>
      </div>
    </div>
    <div class="workflow-card-actions">
      <button class="btn btn-primary btn-sm" onclick="executeWorkflow('${o.id}')">
        <span class="btn-icon">▶️</span>
        Execute
      </button>
      <button class="btn btn-secondary btn-sm" onclick="scheduleWorkflow('${o.id}')">
        <span class="btn-icon">⏰</span>
        Schedule
      </button>
      <button class="btn btn-outline btn-sm" onclick="viewWorkflowDetails('${o.id}')">
        <span class="btn-icon">👁️</span>
        Details
      </button>
    </div>
  `,e}async function Ot(){console.log("[WORKFLOW MANAGER] Loading templates...");const o=[{id:"code-quality",name:"Code Quality Check",description:"Comprehensive code quality analysis and improvement",stepCount:3,category:"Quality"},{id:"security-audit",name:"Security Audit",description:"Comprehensive security vulnerability assessment",stepCount:3,category:"Security"},{id:"documentation",name:"Documentation Generation",description:"Generate comprehensive project documentation",stepCount:2,category:"Documentation"},{id:"pre-deployment",name:"Pre-deployment Checklist",description:"Comprehensive checks before deployment",stepCount:4,category:"Deployment"}];he=o,Ft(),console.log(`[WORKFLOW MANAGER] Loaded ${o.length} templates`)}function Ft(){const o=document.getElementById("templateGrid");o&&(o.innerHTML="",he.forEach(e=>{const t=Nt(e);o.appendChild(t)}))}function Nt(o){const e=document.createElement("div");return e.className="template-card",e.innerHTML=`
    <div class="template-card-header">
      <h4 class="template-name">${o.name}</h4>
      <span class="template-category">${o.category}</span>
    </div>
    <div class="template-card-body">
      <p class="template-description">${o.description}</p>
      <div class="template-meta">
        <span class="step-count">${o.stepCount} steps</span>
      </div>
    </div>
    <div class="template-card-actions">
      <button class="btn btn-primary btn-sm" onclick="useTemplate('${o.id}')">
        <span class="btn-icon">📋</span>
        Use Template
      </button>
      <button class="btn btn-outline btn-sm" onclick="previewTemplate('${o.id}')">
        <span class="btn-icon">👁️</span>
        Preview
      </button>
    </div>
  `,e}async function Wt(){console.log("[WORKFLOW MANAGER] Loading scheduled workflows...");const o=[{id:"scheduled-1",workflowId:"security-check",workflowName:"Security Check",target:"main.js",schedule:"Daily at 9:00 AM",nextRun:"2024-01-15 09:00:00",status:"scheduled"},{id:"scheduled-2",workflowId:"full-code-review",workflowName:"Full Code Review",target:"pages/",schedule:"Weekly on Monday",nextRun:"2024-01-22 10:00:00",status:"scheduled"}];me=o,Rt(),console.log(`[WORKFLOW MANAGER] Loaded ${o.length} scheduled workflows`)}function Rt(){const o=document.getElementById("scheduledList");o&&(o.innerHTML="",me.forEach(e=>{const t=$t(e);o.appendChild(t)}))}function $t(o){const e=document.createElement("div");return e.className="scheduled-card",e.innerHTML=`
    <div class="scheduled-card-header">
      <h4 class="scheduled-workflow-name">${o.workflowName}</h4>
      <div class="scheduled-status status-${o.status}">${o.status}</div>
    </div>
    <div class="scheduled-card-body">
      <div class="scheduled-details">
        <div class="detail-item">
          <span class="detail-label">Target:</span>
          <span class="detail-value">${o.target}</span>
        </div>
        <div class="detail-item">
          <span class="detail-label">Schedule:</span>
          <span class="detail-value">${o.schedule}</span>
        </div>
        <div class="detail-item">
          <span class="detail-label">Next Run:</span>
          <span class="detail-value">${o.nextRun}</span>
        </div>
      </div>
    </div>
    <div class="scheduled-card-actions">
      <button class="btn btn-primary btn-sm" onclick="runScheduledNow('${o.id}')">
        <span class="btn-icon">▶️</span>
        Run Now
      </button>
      <button class="btn btn-secondary btn-sm" onclick="editSchedule('${o.id}')">
        <span class="btn-icon">✏️</span>
        Edit
      </button>
      <button class="btn btn-danger btn-sm" onclick="cancelSchedule('${o.id}')">
        <span class="btn-icon">❌</span>
        Cancel
      </button>
    </div>
  `,e}async function Ht(){console.log("[WORKFLOW MANAGER] Loading workflow history...");const o=[{id:"exec-1",workflowId:"security-check",workflowName:"Security Check",target:"chatbot.js",status:"completed",startTime:"2024-01-14 14:30:00",endTime:"2024-01-14 14:32:15",duration:"2m 15s"},{id:"exec-2",workflowId:"full-code-review",workflowName:"Full Code Review",target:"main.js",status:"failed",startTime:"2024-01-14 13:45:00",endTime:"2024-01-14 13:47:30",duration:"2m 30s"},{id:"exec-3",workflowId:"documentation-only",workflowName:"Documentation Generation",target:"auto-fixer.js",status:"completed",startTime:"2024-01-14 12:15:00",endTime:"2024-01-14 12:18:45",duration:"3m 45s"}];pe=o,_t(),console.log(`[WORKFLOW MANAGER] Loaded ${o.length} history entries`)}function _t(){const o=document.getElementById("historyList");o&&(o.innerHTML="",pe.forEach(e=>{const t=qt(e);o.appendChild(t)}))}function qt(o){const e=document.createElement("div");return e.className="history-card",e.innerHTML=`
    <div class="history-card-header">
      <h4 class="history-workflow-name">${o.workflowName}</h4>
      <div class="history-status status-${o.status}">${o.status}</div>
    </div>
    <div class="history-card-body">
      <div class="history-details">
        <div class="detail-item">
          <span class="detail-label">Target:</span>
          <span class="detail-value">${o.target}</span>
        </div>
        <div class="detail-item">
          <span class="detail-label">Duration:</span>
          <span class="detail-value">${o.duration}</span>
        </div>
        <div class="detail-item">
          <span class="detail-label">Started:</span>
          <span class="detail-value">${o.startTime}</span>
        </div>
      </div>
    </div>
    <div class="history-card-actions">
      <button class="btn btn-outline btn-sm" onclick="viewExecutionDetails('${o.id}')">
        <span class="btn-icon">👁️</span>
        View Details
      </button>
      <button class="btn btn-secondary btn-sm" onclick="replayExecution('${o.id}')">
        <span class="btn-icon">🔄</span>
        Replay
      </button>
    </div>
  `,e}async function jt(o){console.log(`[WORKFLOW MANAGER] Executing workflow: ${o}`);const e=$.find(t=>t.id===o);if(!e){console.error(`[WORKFLOW MANAGER] Workflow not found: ${o}`);return}Gt(e);try{await Vt(o),console.log(`[WORKFLOW MANAGER] Workflow ${o} completed successfully`)}catch(t){console.error(`[WORKFLOW MANAGER] Workflow ${o} failed:`,t)}}function Gt(o){const e=document.getElementById("workflowExecutionModal");e&&(document.getElementById("executingWorkflowName").textContent=o.name,document.getElementById("executingWorkflowDescription").textContent=o.description,document.getElementById("workflowProgress").style.width="0%",document.getElementById("progressText").textContent="0%",e.style.display="block")}async function Vt(o){const e=[{name:"Security Scan",duration:2e3},{name:"Code Analysis",duration:3e3},{name:"Auto Fix",duration:1500},{name:"Documentation",duration:2500},{name:"Report Generation",duration:1e3}],t=e.length;let i=0;for(let n=0;n<e.length;n++){const a=e[n];ee(n,"running",a.name),await new Promise(l=>setTimeout(l,a.duration)),ee(n,"completed",a.name),i++;const r=Math.round(i/t*100);document.getElementById("workflowProgress").style.width=`${r}%`,document.getElementById("progressText").textContent=`${r}%`}Kt()}function ee(o,e,t){const i=document.getElementById("workflowSteps");if(!i)return;let n=i.children[o];n||(n=document.createElement("div"),n.className="workflow-step",n.innerHTML=`
      <div class="step-icon"></div>
      <div class="step-content">
        <div class="step-name">${t}</div>
        <div class="step-status">${e}</div>
      </div>
    `,i.appendChild(n)),n.className=`workflow-step status-${e}`,n.querySelector(".step-status").textContent=e;const a=n.querySelector(".step-icon");a.textContent=e==="completed"?"✅":e==="running"?"⏳":"⏸️"}function Kt(){const o=document.getElementById("workflowResults"),e=document.getElementById("resultsContent");!o||!e||(e.innerHTML=`
    <div class="result-summary">
      <h5>Execution Summary</h5>
      <div class="summary-stats">
        <div class="stat-item">
          <span class="stat-label">Status:</span>
          <span class="stat-value status-completed">Completed</span>
        </div>
        <div class="stat-item">
          <span class="stat-label">Duration:</span>
          <span class="stat-value">10.5 seconds</span>
        </div>
        <div class="stat-item">
          <span class="stat-label">Steps:</span>
          <span class="stat-value">5 completed</span>
        </div>
      </div>
    </div>
    <div class="result-details">
      <h5>Detailed Results</h5>
      <div class="result-item">
        <strong>Security Scan:</strong> No vulnerabilities found
      </div>
      <div class="result-item">
        <strong>Code Analysis:</strong> 3 issues identified and fixed
      </div>
      <div class="result-item">
        <strong>Auto Fix:</strong> 2 fixes applied successfully
      </div>
      <div class="result-item">
        <strong>Documentation:</strong> Generated comprehensive docs
      </div>
      <div class="result-item">
        <strong>Report:</strong> Summary report created
      </div>
    </div>
  `,o.style.display="block")}function Qt(){const o=document.getElementById("createWorkflowModal");o&&(o.style.display="block")}function we(){const o=document.getElementById("createWorkflowModal");o&&(o.style.display="none")}function Yt(){const o=document.getElementById("stepsContainer");if(!o)return;const e=o.children.length,t=document.createElement("div");t.className="workflow-step-form",t.innerHTML=`
    <div class="step-form-header">
      <h5>Step ${e+1}</h5>
      <button type="button" class="btn btn-danger btn-sm" onclick="removeWorkflowStep(this)">
        <span class="btn-icon">❌</span>
        Remove
      </button>
    </div>
    <div class="step-form-body">
      <div class="form-group">
        <label>Agent</label>
        <select name="agent" required>
          <option value="">Select Agent</option>
          <option value="code-analyzer">Code Analyzer</option>
          <option value="security-scanner">Security Scanner</option>
          <option value="auto-fixer">Auto Fixer</option>
          <option value="documentation-generator">Documentation Generator</option>
          <option value="report-generator">Report Generator</option>
        </select>
      </div>
      <div class="form-group">
        <label>Target</label>
        <select name="target" required>
          <option value="">Select Target</option>
          <option value="file">File</option>
          <option value="project">Project</option>
          <option value="workflow">Workflow</option>
        </select>
      </div>
      <div class="form-group">
        <label>Dependencies (optional)</label>
        <input type="text" name="dependsOn" placeholder="Step IDs separated by commas">
      </div>
      <div class="form-group">
        <label>
          <input type="checkbox" name="required" checked>
          Required Step
        </label>
      </div>
    </div>
  `,o.appendChild(t)}function Jt(o){const e=o.closest(".workflow-step-form");e&&e.remove()}function Zt(o){o.preventDefault(),new FormData(o.target);const e=document.getElementById("workflowName").value,t=document.getElementById("workflowDescription").value,i=[];if(document.querySelectorAll(".workflow-step-form").forEach((r,l)=>{const u={id:`step-${l+1}`,agent:r.querySelector('[name="agent"]').value,target:r.querySelector('[name="target"]').value,dependsOn:r.querySelector('[name="dependsOn"]').value.split(",").map(c=>c.trim()).filter(c=>c),required:r.querySelector('[name="required"]').checked};u.agent&&u.target&&i.push(u)}),i.length===0){alert("Please add at least one step to the workflow");return}const a={id:`custom-${Date.now()}`,name:e,description:t,steps:i,stepCount:i.length,status:"available"};$.push(a),fe(),we(),console.log(`[WORKFLOW MANAGER] Created custom workflow: ${a.id}`)}window.executeWorkflow=jt;window.scheduleWorkflow=o=>{console.log(`[WORKFLOW MANAGER] Scheduling workflow: ${o}`)};window.viewWorkflowDetails=o=>{console.log(`[WORKFLOW MANAGER] Viewing workflow details: ${o}`)};window.useTemplate=o=>{console.log(`[WORKFLOW MANAGER] Using template: ${o}`)};window.previewTemplate=o=>{console.log(`[WORKFLOW MANAGER] Previewing template: ${o}`)};window.runScheduledNow=o=>{console.log(`[WORKFLOW MANAGER] Running scheduled workflow now: ${o}`)};window.editSchedule=o=>{console.log(`[WORKFLOW MANAGER] Editing schedule: ${o}`)};window.cancelSchedule=o=>{console.log(`[WORKFLOW MANAGER] Canceling schedule: ${o}`)};window.viewExecutionDetails=o=>{console.log(`[WORKFLOW MANAGER] Viewing execution details: ${o}`)};window.replayExecution=o=>{console.log(`[WORKFLOW MANAGER] Replaying execution: ${o}`)};window.removeWorkflowStep=Jt;document.addEventListener("DOMContentLoaded",()=>{console.log("[WORKFLOW MANAGER] DOM loaded, initializing workflow manager..."),At()});console.log("[WORKFLOW MANAGER] Workflow manager functionality loaded");export{y as _,S as a,T as d,ht as s,de as w};
